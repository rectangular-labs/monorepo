name: Cloudflare

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose environment: preview (default), or prod"
        required: true
        default: "preview"
        type: choice
        options:
          - preview
          - production

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}


jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    permissions:  
      pull-requests: write
    env:
      DOTENV_PRIVATE_KEY: ${{ secrets.DOTENV_PRIVATE_KEY }}
      DOTENV_PRIVATE_KEY_PRODUCTION: ${{ secrets.DOTENV_PRIVATE_KEY_PRODUCTION }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Dependencies
        uses: ./tooling/github/setup
      
      - name: Resolve deployment context
        id: resolve
        shell: bash
        run: |
          EVENT="${{ github.event_name }}"
          REF="${{ github.ref }}"
          INPUT_ENV="${{ github.event.inputs.environment || '' }}"

          STAGE="preview"
          ENVIRONMENT="pr-preview"
          ENV_PATH=".env"
          DOTENV_KEY_NAME="DOTENV_PRIVATE_KEY"
          DEPLOY_CMD="deploy --env $ENVIRONMENT"

          if [[ "$EVENT" == "push" && "$REF" == "refs/heads/main" ]]; then
            STAGE="production"
            ENVIRONMENT="production"
            ENV_PATH=".env.production"
            DOTENV_KEY_NAME="DOTENV_PRIVATE_KEY_PRODUCTION"
            DEPLOY_CMD="deploy --env production"
          elif [[ "$EVENT" == "pull_request" ]]; then
            ENVIRONMENT="pr-${{ github.event.number }}"
            DEPLOY_CMD="deploy --env $ENVIRONMENT"
          elif [[ "$EVENT" == "workflow_dispatch" ]]; then
            case "$INPUT_ENV" in
              preview)
                ;; # default to preview env and stage
              production)
                ENV_PATH=".env.production"
                DOTENV_KEY_NAME="DOTENV_PRIVATE_KEY_PRODUCTION"
                STAGE="production"
                ENVIRONMENT="production"
                DEPLOY_CMD="deploy --env $ENVIRONMENT"
                ;;
              *)
                echo "Unknown manual environment: $INPUT_ENV" >&2
                exit 1
                ;;
            esac
          else
            echo "Unsupported trigger: $EVENT" >&2
            exit 1
          fi

          echo "stage=$STAGE" >> "$GITHUB_OUTPUT"
          echo "environment=$ENVIRONMENT" >> "$GITHUB_OUTPUT"
          echo "env_path=$ENV_PATH" >> "$GITHUB_OUTPUT"
          echo "dotenv_key_name=$DOTENV_KEY_NAME" >> "$GITHUB_OUTPUT"
          echo "deploy_command=$DEPLOY_CMD" >> "$GITHUB_OUTPUT"
         
      - name: Update Environment Variables for Preview
        if: ${{ steps.resolve.outputs.stage == 'preview' }}
        shell: bash
        env:
          ENVIRONMENT: ${{ steps.resolve.outputs.environment }}
          ENV_PATH: ${{ steps.resolve.outputs.env_path }}
        run: |
          FILE="apps/www/wrangler.jsonc"
          # Replace placeholder with computed slug
          sed -i "s|{env.PULL_REQUEST}|$ENVIRONMENT|g" "$FILE"
          sed -i "s|{env.PULL_REQUEST}|$ENVIRONMENT|g" "$ENV_PATH"
        
      - name: Prepare secrets
        id: prepare_secrets
        uses: ./tooling/github/prepare-secrets
        with:
          env_path: ${{ steps.resolve.outputs.env_path }}
     
      - name: Build
        run: pnpm run build:${{ steps.resolve.outputs.stage }}
        

      - name: Migrate Database
        run: pnpm run db:mp:${{ steps.resolve.outputs.stage }}
        
      - name: Deploy WWW
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          packageManager: pnpm
          workingDirectory: apps/www
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: ${{ steps.resolve.outputs.deploy_command }}
          environment: ${{ steps.resolve.outputs.environment }}
          secrets: ${{ steps.prepare_secrets.outputs.secret_names }}

      - name: Comment for deployment details
        if: ${{ github.event_name == 'pull_request' }}
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: |
            Cloudflare Preview URL :balloon: : https://${{ steps.deploy.outputs.deployment-url }}
          comment-tag: execution

  cleanup:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
    env:
      STAGE: pr-${{ github.event.number }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Dependencies
        uses: ./tooling/github/setup
      - name: Destroy Preview Environment
        uses: cloudflare/wrangler-action@v3
        with:
          packageManager: pnpm
          workingDirectory: apps/www
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: delete --env ${{ env.STAGE }}