// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as Options2, TDataShape } from './client';
import { client } from './client.gen';
import type { AiKeywordDataAvailableFiltersData, AiKeywordDataAvailableFiltersResponses, AiKeywordDataKeywordsSearchVolumeLiveData, AiKeywordDataKeywordsSearchVolumeLiveResponses, AiOptimizationAiKeywordDataLocationsAndLanguagesData, AiOptimizationAiKeywordDataLocationsAndLanguagesResponses, AiSummaryData, AiSummaryResponses, AmazonAsinTaskGetAdvancedData, AmazonAsinTaskGetAdvancedResponses, AmazonAsinTaskGetHtmlData, AmazonAsinTaskGetHtmlResponses, AmazonAsinTaskPostData, AmazonAsinTaskPostResponses, AmazonAsinTasksReadyData, AmazonAsinTasksReadyResponses, AmazonBulkSearchVolumeLiveData, AmazonBulkSearchVolumeLiveResponses, AmazonProductCompetitorsLiveData, AmazonProductCompetitorsLiveResponses, AmazonProductKeywordIntersectionsLiveData, AmazonProductKeywordIntersectionsLiveResponses, AmazonProductRankOverviewLiveData, AmazonProductRankOverviewLiveResponses, AmazonProductsTaskGetAdvancedData, AmazonProductsTaskGetAdvancedResponses, AmazonProductsTaskGetHtmlData, AmazonProductsTaskGetHtmlResponses, AmazonProductsTaskPostData, AmazonProductsTaskPostResponses, AmazonProductsTasksReadyData, AmazonProductsTasksReadyResponses, AmazonRankedKeywordsLiveData, AmazonRankedKeywordsLiveResponses, AmazonRelatedKeywordsLiveData, AmazonRelatedKeywordsLiveResponses, AmazonReviewsTaskGetAdvancedData, AmazonReviewsTaskGetAdvancedResponses, AmazonReviewsTaskGetHtmlData, AmazonReviewsTaskGetHtmlResponses, AmazonReviewsTaskPostData, AmazonReviewsTaskPostResponses, AmazonReviewsTasksReadyData, AmazonReviewsTasksReadyResponses, AmazonSellersTaskGetAdvancedData, AmazonSellersTaskGetAdvancedResponses, AmazonSellersTaskGetHtmlData, AmazonSellersTaskGetHtmlResponses, AmazonSellersTaskPostData, AmazonSellersTaskPostResponses, AmazonSellersTasksReadyData, AmazonSellersTasksReadyResponses, AnchorsLiveData, AnchorsLiveResponses, AppDataAppleLanguagesData, AppDataAppleLanguagesResponses, AppDataAppleLocationsData, AppDataAppleLocationsResponses, AppDataErrorsData, AppDataErrorsResponses, AppDataGoogleLanguagesData, AppDataGoogleLanguagesResponses, AppDataGoogleLocationsCountryData, AppDataGoogleLocationsCountryResponses, AppDataGoogleLocationsData, AppDataGoogleLocationsResponses, AppDataIdListData, AppDataIdListResponses, AppDataTasksReadyData, AppDataTasksReadyResponses, AppendixErrorsData, AppendixErrorsResponses, AppendixStatusData, AppendixStatusResponses, AppleAppCompetitorsLiveData, AppleAppCompetitorsLiveResponses, AppleAppInfoTaskGetAdvancedData, AppleAppInfoTaskGetAdvancedResponses, AppleAppInfoTaskPostData, AppleAppInfoTaskPostResponses, AppleAppInfoTasksReadyData, AppleAppInfoTasksReadyResponses, AppleAppIntersectionLiveData, AppleAppIntersectionLiveResponses, AppleAppListingsCategoriesData, AppleAppListingsCategoriesResponses, AppleAppListingsSearchLiveData, AppleAppListingsSearchLiveResponses, AppleAppListTaskGetAdvancedData, AppleAppListTaskGetAdvancedResponses, AppleAppListTaskPostData, AppleAppListTaskPostResponses, AppleAppListTasksReadyData, AppleAppListTasksReadyResponses, AppleAppReviewsTaskGetAdvancedData, AppleAppReviewsTaskGetAdvancedResponses, AppleAppReviewsTaskPostData, AppleAppReviewsTaskPostResponses, AppleAppReviewsTasksReadyData, AppleAppReviewsTasksReadyResponses, AppleAppSearchesTaskGetAdvancedData, AppleAppSearchesTaskGetAdvancedResponses, AppleAppSearchesTaskPostData, AppleAppSearchesTaskPostResponses, AppleAppSearchesTasksReadyData, AppleAppSearchesTasksReadyResponses, AppleBulkAppMetricsLiveData, AppleBulkAppMetricsLiveResponses, AppleCategoriesData, AppleCategoriesResponses, AppleKeywordsForAppLiveData, AppleKeywordsForAppLiveResponses, AvailableFiltersData, AvailableFiltersResponses, BacklinksAvailableFiltersData, BacklinksAvailableFiltersResponses, BacklinksErrorsData, BacklinksErrorsResponses, BacklinksIdListData, BacklinksIdListResponses, BacklinksLiveData, BacklinksLiveResponses, BaiduOrganicTaskGetAdvancedData, BaiduOrganicTaskGetAdvancedResponses, BaiduOrganicTaskGetHtmlData, BaiduOrganicTaskGetHtmlResponses, BaiduOrganicTaskGetRegularData, BaiduOrganicTaskGetRegularResponses, BaiduOrganicTaskPostData, BaiduOrganicTaskPostResponses, BaiduOrganicTasksFixedData, BaiduOrganicTasksFixedResponses, BaiduOrganicTasksReadyData, BaiduOrganicTasksReadyResponses, BingAudienceEstimationIndustriesData, BingAudienceEstimationIndustriesResponses, BingAudienceEstimationJobFunctionsData, BingAudienceEstimationJobFunctionsResponses, BingAudienceEstimationLiveData, BingAudienceEstimationLiveResponses, BingAudienceEstimationTaskGetData, BingAudienceEstimationTaskGetResponses, BingAudienceEstimationTaskPostData, BingAudienceEstimationTaskPostResponses, BingAudienceEstimationTasksReadyData, BingAudienceEstimationTasksReadyResponses, BingBulkKeywordDifficultyLiveData, BingBulkKeywordDifficultyLiveResponses, BingBulkTrafficEstimationLiveData, BingBulkTrafficEstimationLiveResponses, BingCompetitorsDomainLiveData, BingCompetitorsDomainLiveResponses, BingDomainIntersectionLiveData, BingDomainIntersectionLiveResponses, BingDomainRankOverviewLiveData, BingDomainRankOverviewLiveResponses, BingKeywordPerformanceLiveData, BingKeywordPerformanceLiveResponses, BingKeywordPerformanceTaskGetData, BingKeywordPerformanceTaskGetResponses, BingKeywordPerformanceTaskPostData, BingKeywordPerformanceTaskPostResponses, BingKeywordPerformanceTasksReadyData, BingKeywordPerformanceTasksReadyResponses, BingKeywordsForKeywordsLiveData, BingKeywordsForKeywordsLiveResponses, BingKeywordsForKeywordsTaskGetData, BingKeywordsForKeywordsTaskGetResponses, BingKeywordsForKeywordsTaskPostData, BingKeywordsForKeywordsTaskPostResponses, BingKeywordsForKeywordsTasksReadyData, BingKeywordsForKeywordsTasksReadyResponses, BingKeywordsForSiteLiveData, BingKeywordsForSiteLiveResponses, BingKeywordsForSiteTaskGetData, BingKeywordsForSiteTaskGetResponses, BingKeywordsForSiteTaskPostData, BingKeywordsForSiteTaskPostResponses, BingKeywordsForSiteTasksReadyData, BingKeywordsForSiteTasksReadyResponses, BingLocalPackLiveHtmlData, BingLocalPackLiveHtmlResponses, BingLocalPackLiveRegularData, BingLocalPackLiveRegularResponses, BingLocalPackTaskGetHtmlData, BingLocalPackTaskGetHtmlResponses, BingLocalPackTaskGetRegularData, BingLocalPackTaskGetRegularResponses, BingLocalPackTaskPostData, BingLocalPackTaskPostResponses, BingLocalPackTasksFixedData, BingLocalPackTasksFixedResponses, BingLocalPackTasksReadyData, BingLocalPackTasksReadyResponses, BingOrganicLiveAdvancedData, BingOrganicLiveAdvancedResponses, BingOrganicLiveHtmlData, BingOrganicLiveHtmlResponses, BingOrganicLiveRegularData, BingOrganicLiveRegularResponses, BingOrganicTaskGetAdvancedData, BingOrganicTaskGetAdvancedResponses, BingOrganicTaskGetHtmlData, BingOrganicTaskGetHtmlResponses, BingOrganicTaskGetRegularData, BingOrganicTaskGetRegularResponses, BingOrganicTaskPostData, BingOrganicTaskPostResponses, BingOrganicTasksFixedData, BingOrganicTasksFixedResponses, BingOrganicTasksReadyData, BingOrganicTasksReadyResponses, BingPageIntersectionLiveData, BingPageIntersectionLiveResponses, BingRankedKeywordsLiveData, BingRankedKeywordsLiveResponses, BingRelatedKeywordsLiveData, BingRelatedKeywordsLiveResponses, BingRelevantPagesLiveData, BingRelevantPagesLiveResponses, BingSearchVolumeHistoryLiveData, BingSearchVolumeHistoryLiveResponses, BingSearchVolumeHistoryTaskGetData, BingSearchVolumeHistoryTaskGetResponses, BingSearchVolumeHistoryTaskPostData, BingSearchVolumeHistoryTaskPostResponses, BingSearchVolumeHistoryTasksReadyData, BingSearchVolumeHistoryTasksReadyResponses, BingSearchVolumeLiveData, BingSearchVolumeLiveResponses, BingSearchVolumeTaskGetData, BingSearchVolumeTaskGetResponses, BingSearchVolumeTaskPostData, BingSearchVolumeTaskPostResponses, BingSearchVolumeTasksReadyData, BingSearchVolumeTasksReadyResponses, BingSerpCompetitorsLiveData, BingSerpCompetitorsLiveResponses, BingSubdomainsLiveData, BingSubdomainsLiveResponses, BulkBacklinksLiveData, BulkBacklinksLiveResponses, BulkNewLostBacklinksLiveData, BulkNewLostBacklinksLiveResponses, BulkNewLostReferringDomainsLiveData, BulkNewLostReferringDomainsLiveResponses, BulkPagesSummaryLiveData, BulkPagesSummaryLiveResponses, BulkRanksLiveData, BulkRanksLiveResponses, BulkReferringDomainsLiveData, BulkReferringDomainsLiveResponses, BulkSpamScoreLiveData, BulkSpamScoreLiveResponses, BusinessDataBusinessListingsLocationsData, BusinessDataBusinessListingsLocationsResponses, BusinessDataErrorsData, BusinessDataErrorsResponses, BusinessDataGoogleLanguagesData, BusinessDataGoogleLanguagesResponses, BusinessDataGoogleLocationsCountryData, BusinessDataGoogleLocationsCountryResponses, BusinessDataGoogleLocationsData, BusinessDataGoogleLocationsResponses, BusinessDataIdListData, BusinessDataIdListResponses, BusinessDataTasksReadyData, BusinessDataTasksReadyResponses, BusinessDataTripadvisorLanguagesData, BusinessDataTripadvisorLanguagesResponses, BusinessDataTripadvisorLocationsCountryData, BusinessDataTripadvisorLocationsCountryResponses, BusinessDataTripadvisorLocationsData, BusinessDataTripadvisorLocationsResponses, BusinessListingsAvailableFiltersData, BusinessListingsAvailableFiltersResponses, BusinessListingsCategoriesAggregationLiveData, BusinessListingsCategoriesAggregationLiveResponses, BusinessListingsCategoriesData, BusinessListingsCategoriesResponses, BusinessListingsSearchLiveData, BusinessListingsSearchLiveResponses, CategoriesData, CategoriesResponses, CategoryTrendsLiveData, CategoryTrendsLiveResponses, ChatGptLlmResponsesLiveData, ChatGptLlmResponsesLiveResponses, ChatGptLlmResponsesModelsData, ChatGptLlmResponsesModelsResponses, ChatGptLlmResponsesTaskGetData, ChatGptLlmResponsesTaskGetResponses, ChatGptLlmResponsesTaskPostData, ChatGptLlmResponsesTaskPostResponses, ChatGptLlmResponsesTasksReadyData, ChatGptLlmResponsesTasksReadyResponses, CheckGrammarLiveData, CheckGrammarLiveResponses, ClaudeLlmResponsesLiveData, ClaudeLlmResponsesLiveResponses, ClaudeLlmResponsesModelsData, ClaudeLlmResponsesModelsResponses, ClaudeLlmResponsesTaskGetData, ClaudeLlmResponsesTaskGetResponses, ClaudeLlmResponsesTaskPostData, ClaudeLlmResponsesTaskPostResponses, ClaudeLlmResponsesTasksReadyData, ClaudeLlmResponsesTasksReadyResponses, ClickstreamDataBulkSearchVolumeLiveData, ClickstreamDataBulkSearchVolumeLiveResponses, ClickstreamDataDataforseoSearchVolumeLiveData, ClickstreamDataDataforseoSearchVolumeLiveResponses, ClickstreamDataGlobalSearchVolumeLiveData, ClickstreamDataGlobalSearchVolumeLiveResponses, CompetitorsLiveData, CompetitorsLiveResponses, ContentAnalysisAvailableFiltersData, ContentAnalysisAvailableFiltersResponses, ContentAnalysisCategoriesData, ContentAnalysisCategoriesResponses, ContentAnalysisIdListData, ContentAnalysisIdListResponses, ContentAnalysisLanguagesData, ContentAnalysisLanguagesResponses, ContentAnalysisLocationsData, ContentAnalysisLocationsResponses, ContentAnalysisSummaryLiveData, ContentAnalysisSummaryLiveResponses, ContentGenerationCheckGrammarLanguagesData, ContentGenerationCheckGrammarLanguagesResponses, ContentGenerationTextSummaryLanguagesData, ContentGenerationTextSummaryLanguagesResponses, ContentParsingData, ContentParsingLiveData, ContentParsingLiveResponses, ContentParsingResponses, DataforseoLabsErrorsData, DataforseoLabsErrorsResponses, DataforseoLabsGoogleCategoriesForKeywordsLanguagesData, DataforseoLabsGoogleCategoriesForKeywordsLanguagesResponses, DataforseoLabsIdListData, DataforseoLabsIdListResponses, DataforseoLabsLocationsAndLanguagesData, DataforseoLabsLocationsAndLanguagesResponses, DataforseoLabsStatusData, DataforseoLabsStatusResponses, DataforseoTrendsDemographyLiveData, DataforseoTrendsDemographyLiveResponses, DataforseoTrendsExploreLiveData, DataforseoTrendsExploreLiveResponses, DataforseoTrendsMergedDataLiveData, DataforseoTrendsMergedDataLiveResponses, DataforseoTrendsSubregionInterestsLiveData, DataforseoTrendsSubregionInterestsLiveResponses, DomainAnalyticsErrorsData, DomainAnalyticsErrorsResponses, DomainAnalyticsIdListData, DomainAnalyticsIdListResponses, DomainAnalyticsTechnologiesLanguagesData, DomainAnalyticsTechnologiesLanguagesResponses, DomainAnalyticsTechnologiesLocationsData, DomainAnalyticsTechnologiesLocationsResponses, DomainIntersectionLiveData, DomainIntersectionLiveResponses, DomainPagesLiveData, DomainPagesLiveResponses, DomainPagesSummaryLiveData, DomainPagesSummaryLiveResponses, DuplicateContentData, DuplicateContentResponses, DuplicateTagsData, DuplicateTagsResponses, ForceStopData, ForceStopResponses, GeminiLlmResponsesLiveData, GeminiLlmResponsesLiveResponses, GeminiLlmResponsesModelsData, GeminiLlmResponsesModelsResponses, GenerateLiveData, GenerateLiveResponses, GenerateMetaTagsLiveData, GenerateMetaTagsLiveResponses, GenerateSubTopicsLiveData, GenerateSubTopicsLiveResponses, GenerateTextLiveData, GenerateTextLiveResponses, GoogleAdsAdTrafficByKeywordsLiveData, GoogleAdsAdTrafficByKeywordsLiveResponses, GoogleAdsAdTrafficByKeywordsTaskGetData, GoogleAdsAdTrafficByKeywordsTaskGetResponses, GoogleAdsAdTrafficByKeywordsTaskPostData, GoogleAdsAdTrafficByKeywordsTaskPostResponses, GoogleAdsAdTrafficByKeywordsTasksReadyData, GoogleAdsAdTrafficByKeywordsTasksReadyResponses, GoogleAdsAdvertisersTaskGetAdvancedData, GoogleAdsAdvertisersTaskGetAdvancedResponses, GoogleAdsAdvertisersTaskPostData, GoogleAdsAdvertisersTaskPostResponses, GoogleAdsAdvertisersTasksReadyData, GoogleAdsAdvertisersTasksReadyResponses, GoogleAdsKeywordsForKeywordsLiveData, GoogleAdsKeywordsForKeywordsLiveResponses, GoogleAdsKeywordsForKeywordsTaskGetData, GoogleAdsKeywordsForKeywordsTaskGetResponses, GoogleAdsKeywordsForKeywordsTaskPostData, GoogleAdsKeywordsForKeywordsTaskPostResponses, GoogleAdsKeywordsForKeywordsTasksReadyData, GoogleAdsKeywordsForKeywordsTasksReadyResponses, GoogleAdsKeywordsForSiteLiveData, GoogleAdsKeywordsForSiteLiveResponses, GoogleAdsKeywordsForSiteTaskGetData, GoogleAdsKeywordsForSiteTaskGetResponses, GoogleAdsKeywordsForSiteTaskPostData, GoogleAdsKeywordsForSiteTaskPostResponses, GoogleAdsKeywordsForSiteTasksReadyData, GoogleAdsKeywordsForSiteTasksReadyResponses, GoogleAdsSearchTaskGetAdvancedData, GoogleAdsSearchTaskGetAdvancedResponses, GoogleAdsSearchTaskPostData, GoogleAdsSearchTaskPostResponses, GoogleAdsSearchTasksReadyData, GoogleAdsSearchTasksReadyResponses, GoogleAdsSearchVolumeLiveData, GoogleAdsSearchVolumeLiveResponses, GoogleAdsSearchVolumeTaskGetData, GoogleAdsSearchVolumeTaskGetResponses, GoogleAdsSearchVolumeTaskPostData, GoogleAdsSearchVolumeTaskPostResponses, GoogleAdsSearchVolumeTasksReadyData, GoogleAdsSearchVolumeTasksReadyResponses, GoogleAdsStatusData, GoogleAdsStatusResponses, GoogleAiModeLiveAdvancedData, GoogleAiModeLiveAdvancedResponses, GoogleAiModeLiveHtmlData, GoogleAiModeLiveHtmlResponses, GoogleAiModeTaskGetAdvancedData, GoogleAiModeTaskGetAdvancedResponses, GoogleAiModeTaskGetHtmlData, GoogleAiModeTaskGetHtmlResponses, GoogleAiModeTaskPostData, GoogleAiModeTaskPostResponses, GoogleAiModeTasksFixedData, GoogleAiModeTasksFixedResponses, GoogleAiModeTasksReadyData, GoogleAiModeTasksReadyResponses, GoogleAppCompetitorsLiveData, GoogleAppCompetitorsLiveResponses, GoogleAppInfoTaskGetAdvancedData, GoogleAppInfoTaskGetAdvancedResponses, GoogleAppInfoTaskGetHtmlData, GoogleAppInfoTaskGetHtmlResponses, GoogleAppInfoTaskPostData, GoogleAppInfoTaskPostResponses, GoogleAppInfoTasksReadyData, GoogleAppInfoTasksReadyResponses, GoogleAppIntersectionLiveData, GoogleAppIntersectionLiveResponses, GoogleAppListingsCategoriesData, GoogleAppListingsCategoriesResponses, GoogleAppListingsSearchLiveData, GoogleAppListingsSearchLiveResponses, GoogleAppListTaskGetAdvancedData, GoogleAppListTaskGetAdvancedResponses, GoogleAppListTaskGetHtmlData, GoogleAppListTaskGetHtmlResponses, GoogleAppListTaskPostData, GoogleAppListTaskPostResponses, GoogleAppListTasksReadyData, GoogleAppListTasksReadyResponses, GoogleAppReviewsTaskGetAdvancedData, GoogleAppReviewsTaskGetAdvancedResponses, GoogleAppReviewsTaskGetHtmlData, GoogleAppReviewsTaskGetHtmlResponses, GoogleAppReviewsTaskPostData, GoogleAppReviewsTaskPostResponses, GoogleAppReviewsTasksReadyData, GoogleAppReviewsTasksReadyResponses, GoogleAppSearchesTaskGetAdvancedData, GoogleAppSearchesTaskGetAdvancedResponses, GoogleAppSearchesTaskGetHtmlData, GoogleAppSearchesTaskGetHtmlResponses, GoogleAppSearchesTaskPostData, GoogleAppSearchesTaskPostResponses, GoogleAppSearchesTasksReadyData, GoogleAppSearchesTasksReadyResponses, GoogleAutocompleteLiveAdvancedData, GoogleAutocompleteLiveAdvancedResponses, GoogleAutocompleteTaskGetAdvancedData, GoogleAutocompleteTaskGetAdvancedResponses, GoogleAutocompleteTaskPostData, GoogleAutocompleteTaskPostResponses, GoogleAutocompleteTasksFixedData, GoogleAutocompleteTasksFixedResponses, GoogleAutocompleteTasksReadyData, GoogleAutocompleteTasksReadyResponses, GoogleAvailableHistoryData, GoogleAvailableHistoryResponses, GoogleBulkAppMetricsLiveData, GoogleBulkAppMetricsLiveResponses, GoogleBulkKeywordDifficultyLiveData, GoogleBulkKeywordDifficultyLiveResponses, GoogleBulkTrafficEstimationLiveData, GoogleBulkTrafficEstimationLiveResponses, GoogleCategoriesData, GoogleCategoriesForDomainLiveData, GoogleCategoriesForDomainLiveResponses, GoogleCategoriesForKeywordsLiveData, GoogleCategoriesForKeywordsLiveResponses, GoogleCategoriesResponses, GoogleCompetitorsDomainLiveData, GoogleCompetitorsDomainLiveResponses, GoogleDatasetInfoLiveAdvancedData, GoogleDatasetInfoLiveAdvancedResponses, GoogleDatasetInfoTaskGetAdvancedData, GoogleDatasetInfoTaskGetAdvancedResponses, GoogleDatasetInfoTaskPostData, GoogleDatasetInfoTaskPostResponses, GoogleDatasetInfoTasksFixedData, GoogleDatasetInfoTasksFixedResponses, GoogleDatasetInfoTasksReadyData, GoogleDatasetInfoTasksReadyResponses, GoogleDatasetSearchLiveAdvancedData, GoogleDatasetSearchLiveAdvancedResponses, GoogleDatasetSearchTaskGetAdvancedData, GoogleDatasetSearchTaskGetAdvancedResponses, GoogleDatasetSearchTaskPostData, GoogleDatasetSearchTaskPostResponses, GoogleDatasetSearchTasksFixedData, GoogleDatasetSearchTasksFixedResponses, GoogleDatasetSearchTasksReadyData, GoogleDatasetSearchTasksReadyResponses, GoogleDomainIntersectionLiveData, GoogleDomainIntersectionLiveResponses, GoogleDomainMetricsByCategoriesLiveData, GoogleDomainMetricsByCategoriesLiveResponses, GoogleDomainRankOverviewLiveData, GoogleDomainRankOverviewLiveResponses, GoogleDomainWhoisOverviewLiveData, GoogleDomainWhoisOverviewLiveResponses, GoogleEventsLiveAdvancedData, GoogleEventsLiveAdvancedResponses, GoogleEventsTaskGetAdvancedData, GoogleEventsTaskGetAdvancedResponses, GoogleEventsTaskPostData, GoogleEventsTaskPostResponses, GoogleEventsTasksFixedData, GoogleEventsTasksFixedResponses, GoogleEventsTasksReadyData, GoogleEventsTasksReadyResponses, GoogleExtendedReviewsTaskGetData, GoogleExtendedReviewsTaskGetResponses, GoogleExtendedReviewsTaskPostData, GoogleExtendedReviewsTaskPostResponses, GoogleExtendedReviewsTasksReadyData, GoogleExtendedReviewsTasksReadyResponses, GoogleFinanceExploreLiveAdvancedData, GoogleFinanceExploreLiveAdvancedResponses, GoogleFinanceExploreLiveHtmlData, GoogleFinanceExploreLiveHtmlResponses, GoogleFinanceExploreTaskGetAdvancedData, GoogleFinanceExploreTaskGetAdvancedResponses, GoogleFinanceExploreTaskGetHtmlData, GoogleFinanceExploreTaskGetHtmlResponses, GoogleFinanceExploreTaskPostData, GoogleFinanceExploreTaskPostResponses, GoogleFinanceExploreTasksReadyData, GoogleFinanceExploreTasksReadyResponses, GoogleFinanceMarketsLiveAdvancedData, GoogleFinanceMarketsLiveAdvancedResponses, GoogleFinanceMarketsLiveHtmlData, GoogleFinanceMarketsLiveHtmlResponses, GoogleFinanceMarketsTaskGetAdvancedData, GoogleFinanceMarketsTaskGetAdvancedResponses, GoogleFinanceMarketsTaskGetHtmlData, GoogleFinanceMarketsTaskGetHtmlResponses, GoogleFinanceMarketsTaskPostData, GoogleFinanceMarketsTaskPostResponses, GoogleFinanceMarketsTasksReadyData, GoogleFinanceMarketsTasksReadyResponses, GoogleFinanceQuoteLiveAdvancedData, GoogleFinanceQuoteLiveAdvancedResponses, GoogleFinanceQuoteLiveHtmlData, GoogleFinanceQuoteLiveHtmlResponses, GoogleFinanceQuoteTaskGetAdvancedData, GoogleFinanceQuoteTaskGetAdvancedResponses, GoogleFinanceQuoteTaskGetHtmlData, GoogleFinanceQuoteTaskGetHtmlResponses, GoogleFinanceQuoteTaskPostData, GoogleFinanceQuoteTaskPostResponses, GoogleFinanceQuoteTasksReadyData, GoogleFinanceQuoteTasksReadyResponses, GoogleFinanceTickerSearchLiveAdvancedData, GoogleFinanceTickerSearchLiveAdvancedResponses, GoogleFinanceTickerSearchTaskGetAdvancedData, GoogleFinanceTickerSearchTaskGetAdvancedResponses, GoogleFinanceTickerSearchTaskPostData, GoogleFinanceTickerSearchTaskPostResponses, GoogleFinanceTickerSearchTasksReadyData, GoogleFinanceTickerSearchTasksReadyResponses, GoogleHistoricalBulkTrafficEstimationLiveData, GoogleHistoricalBulkTrafficEstimationLiveResponses, GoogleHistoricalKeywordDataLiveData, GoogleHistoricalKeywordDataLiveResponses, GoogleHistoricalRankOverviewLiveData, GoogleHistoricalRankOverviewLiveResponses, GoogleHistoricalSerpsLiveData, GoogleHistoricalSerpsLiveResponses, GoogleHotelInfoLiveAdvancedData, GoogleHotelInfoLiveAdvancedResponses, GoogleHotelInfoLiveHtmlData, GoogleHotelInfoLiveHtmlResponses, GoogleHotelInfoTaskGetAdvancedData, GoogleHotelInfoTaskGetAdvancedResponses, GoogleHotelInfoTaskGetHtmlData, GoogleHotelInfoTaskGetHtmlResponses, GoogleHotelInfoTaskPostData, GoogleHotelInfoTaskPostResponses, GoogleHotelInfoTasksReadyData, GoogleHotelInfoTasksReadyResponses, GoogleHotelSearchesLiveData, GoogleHotelSearchesLiveResponses, GoogleHotelSearchesTaskGetData, GoogleHotelSearchesTaskGetResponses, GoogleHotelSearchesTaskPostData, GoogleHotelSearchesTaskPostResponses, GoogleHotelSearchesTasksReadyData, GoogleHotelSearchesTasksReadyResponses, GoogleImagesLiveAdvancedData, GoogleImagesLiveAdvancedResponses, GoogleImagesLiveHtmlData, GoogleImagesLiveHtmlResponses, GoogleImagesTaskGetAdvancedData, GoogleImagesTaskGetAdvancedResponses, GoogleImagesTaskGetHtmlData, GoogleImagesTaskGetHtmlResponses, GoogleImagesTaskPostData, GoogleImagesTaskPostResponses, GoogleImagesTasksFixedData, GoogleImagesTasksFixedResponses, GoogleImagesTasksReadyData, GoogleImagesTasksReadyResponses, GoogleJobsTaskGetAdvancedData, GoogleJobsTaskGetAdvancedResponses, GoogleJobsTaskGetHtmlData, GoogleJobsTaskGetHtmlResponses, GoogleJobsTaskPostData, GoogleJobsTaskPostResponses, GoogleJobsTasksFixedData, GoogleJobsTasksFixedResponses, GoogleJobsTasksReadyData, GoogleJobsTasksReadyResponses, GoogleKeywordIdeasLiveData, GoogleKeywordIdeasLiveResponses, GoogleKeywordOverviewLiveData, GoogleKeywordOverviewLiveResponses, GoogleKeywordsForAppLiveData, GoogleKeywordsForAppLiveResponses, GoogleKeywordsForCategoriesLiveData, GoogleKeywordsForCategoriesLiveResponses, GoogleKeywordsForSiteLiveData, GoogleKeywordsForSiteLiveResponses, GoogleKeywordSuggestionsLiveData, GoogleKeywordSuggestionsLiveResponses, GoogleLocalFinderLiveAdvancedData, GoogleLocalFinderLiveAdvancedResponses, GoogleLocalFinderLiveHtmlData, GoogleLocalFinderLiveHtmlResponses, GoogleLocalFinderTaskGetAdvancedData, GoogleLocalFinderTaskGetAdvancedResponses, GoogleLocalFinderTaskGetHtmlData, GoogleLocalFinderTaskGetHtmlResponses, GoogleLocalFinderTaskPostData, GoogleLocalFinderTaskPostResponses, GoogleLocalFinderTasksFixedData, GoogleLocalFinderTasksFixedResponses, GoogleLocalFinderTasksReadyData, GoogleLocalFinderTasksReadyResponses, GoogleMapsLiveAdvancedData, GoogleMapsLiveAdvancedResponses, GoogleMapsTaskGetAdvancedData, GoogleMapsTaskGetAdvancedResponses, GoogleMapsTaskPostData, GoogleMapsTaskPostResponses, GoogleMapsTasksFixedData, GoogleMapsTasksFixedResponses, GoogleMapsTasksReadyData, GoogleMapsTasksReadyResponses, GoogleMyBusinessInfoLiveData, GoogleMyBusinessInfoLiveResponses, GoogleMyBusinessInfoTaskGetData, GoogleMyBusinessInfoTaskGetResponses, GoogleMyBusinessInfoTaskPostData, GoogleMyBusinessInfoTaskPostResponses, GoogleMyBusinessInfoTasksReadyData, GoogleMyBusinessInfoTasksReadyResponses, GoogleMyBusinessUpdatesTaskGetData, GoogleMyBusinessUpdatesTaskGetResponses, GoogleMyBusinessUpdatesTaskPostData, GoogleMyBusinessUpdatesTaskPostResponses, GoogleMyBusinessUpdatesTasksReadyData, GoogleMyBusinessUpdatesTasksReadyResponses, GoogleNewsLiveAdvancedData, GoogleNewsLiveAdvancedResponses, GoogleNewsLiveHtmlData, GoogleNewsLiveHtmlResponses, GoogleNewsTaskGetAdvancedData, GoogleNewsTaskGetAdvancedResponses, GoogleNewsTaskGetHtmlData, GoogleNewsTaskGetHtmlResponses, GoogleNewsTaskPostData, GoogleNewsTaskPostResponses, GoogleNewsTasksFixedData, GoogleNewsTasksFixedResponses, GoogleNewsTasksReadyData, GoogleNewsTasksReadyResponses, GoogleOrganicLiveAdvancedData, GoogleOrganicLiveAdvancedResponses, GoogleOrganicLiveHtmlData, GoogleOrganicLiveHtmlResponses, GoogleOrganicLiveRegularData, GoogleOrganicLiveRegularResponses, GoogleOrganicTaskGetAdvancedData, GoogleOrganicTaskGetAdvancedResponses, GoogleOrganicTaskGetHtmlData, GoogleOrganicTaskGetHtmlResponses, GoogleOrganicTaskGetRegularData, GoogleOrganicTaskGetRegularResponses, GoogleOrganicTaskPostData, GoogleOrganicTaskPostResponses, GoogleOrganicTasksFixedData, GoogleOrganicTasksFixedResponses, GoogleOrganicTasksReadyData, GoogleOrganicTasksReadyResponses, GooglePageIntersectionLiveData, GooglePageIntersectionLiveResponses, GoogleProductInfoTaskGetAdvancedData, GoogleProductInfoTaskGetAdvancedResponses, GoogleProductInfoTaskPostData, GoogleProductInfoTaskPostResponses, GoogleProductInfoTasksReadyData, GoogleProductInfoTasksReadyResponses, GoogleProductSpecTaskGetAdvancedData, GoogleProductSpecTaskGetAdvancedResponses, GoogleProductSpecTaskGetHtmlData, GoogleProductSpecTaskGetHtmlResponses, GoogleProductSpecTaskPostData, GoogleProductSpecTaskPostResponses, GoogleProductSpecTasksReadyData, GoogleProductSpecTasksReadyResponses, GoogleProductsTaskGetAdvancedData, GoogleProductsTaskGetAdvancedResponses, GoogleProductsTaskGetHtmlData, GoogleProductsTaskGetHtmlResponses, GoogleProductsTaskPostData, GoogleProductsTaskPostResponses, GoogleProductsTasksReadyData, GoogleProductsTasksReadyResponses, GoogleQuestionsAndAnswersLiveData, GoogleQuestionsAndAnswersLiveResponses, GoogleQuestionsAndAnswersTaskGetData, GoogleQuestionsAndAnswersTaskGetResponses, GoogleQuestionsAndAnswersTaskPostData, GoogleQuestionsAndAnswersTaskPostResponses, GoogleQuestionsAndAnswersTasksReadyData, GoogleQuestionsAndAnswersTasksReadyResponses, GoogleRankedKeywordsLiveData, GoogleRankedKeywordsLiveResponses, GoogleRelatedKeywordsLiveData, GoogleRelatedKeywordsLiveResponses, GoogleRelevantPagesLiveData, GoogleRelevantPagesLiveResponses, GoogleReviewsTaskGetData, GoogleReviewsTaskGetResponses, GoogleReviewsTaskPostData, GoogleReviewsTaskPostResponses, GoogleReviewsTasksReadyData, GoogleReviewsTasksReadyResponses, GoogleSearchByImageTaskGetAdvancedData, GoogleSearchByImageTaskGetAdvancedResponses, GoogleSearchByImageTaskPostData, GoogleSearchByImageTaskPostResponses, GoogleSearchByImageTasksFixedData, GoogleSearchByImageTasksFixedResponses, GoogleSearchByImageTasksReadyData, GoogleSearchByImageTasksReadyResponses, GoogleSearchIntentLiveData, GoogleSearchIntentLiveResponses, GoogleSellersAdUrlData, GoogleSellersAdUrlResponses, GoogleSellersTaskGetAdvancedData, GoogleSellersTaskGetAdvancedResponses, GoogleSellersTaskGetHtmlData, GoogleSellersTaskGetHtmlResponses, GoogleSellersTaskPostData, GoogleSellersTaskPostResponses, GoogleSellersTasksReadyData, GoogleSellersTasksReadyResponses, GoogleSerpCompetitorsLiveData, GoogleSerpCompetitorsLiveResponses, GoogleSubdomainsLiveData, GoogleSubdomainsLiveResponses, GoogleTopSearchesLiveData, GoogleTopSearchesLiveResponses, GoogleTrendsCategoriesData, GoogleTrendsCategoriesResponses, GoogleTrendsExploreLiveData, GoogleTrendsExploreLiveResponses, GoogleTrendsExploreTaskGetData, GoogleTrendsExploreTaskGetResponses, GoogleTrendsExploreTaskPostData, GoogleTrendsExploreTaskPostResponses, GoogleTrendsExploreTasksReadyData, GoogleTrendsExploreTasksReadyResponses, GrammarRulesData, GrammarRulesResponses, HistoryLiveData, HistoryLiveResponses, IndexData, IndexResponses, InstantPagesData, InstantPagesResponses, KeywordDensityData, KeywordDensityResponses, KeywordsDataBingKeywordPerformanceLocationsAndLanguagesData, KeywordsDataBingKeywordPerformanceLocationsAndLanguagesResponses, KeywordsDataBingLanguagesData, KeywordsDataBingLanguagesResponses, KeywordsDataBingLocationsData, KeywordsDataBingLocationsResponses, KeywordsDataBingSearchVolumeHistoryLocationsAndLanguagesData, KeywordsDataBingSearchVolumeHistoryLocationsAndLanguagesResponses, KeywordsDataClickstreamDataLocationsAndLanguagesData, KeywordsDataClickstreamDataLocationsAndLanguagesResponses, KeywordsDataDataforseoTrendsLocationsCountryData, KeywordsDataDataforseoTrendsLocationsCountryResponses, KeywordsDataDataforseoTrendsLocationsData, KeywordsDataDataforseoTrendsLocationsResponses, KeywordsDataErrorsData, KeywordsDataErrorsResponses, KeywordsDataGoogleAdsLanguagesData, KeywordsDataGoogleAdsLanguagesResponses, KeywordsDataGoogleAdsLocationsCountryData, KeywordsDataGoogleAdsLocationsCountryResponses, KeywordsDataGoogleAdsLocationsData, KeywordsDataGoogleAdsLocationsResponses, KeywordsDataGoogleTrendsLanguagesData, KeywordsDataGoogleTrendsLanguagesResponses, KeywordsDataGoogleTrendsLocationsCountryData, KeywordsDataGoogleTrendsLocationsCountryResponses, KeywordsDataGoogleTrendsLocationsData, KeywordsDataGoogleTrendsLocationsResponses, KeywordsDataIdListData, KeywordsDataIdListResponses, LighthouseAuditsData, LighthouseAuditsResponses, LighthouseLiveJsonData, LighthouseLiveJsonResponses, LighthouseTaskGetJsonData, LighthouseTaskGetJsonResponses, LighthouseTaskPostData, LighthouseTaskPostResponses, LighthouseTasksReadyData, LighthouseTasksReadyResponses, LighthouseVersionsData, LighthouseVersionsResponses, LinksData, LinksResponses, MerchantAmazonLanguagesData, MerchantAmazonLanguagesResponses, MerchantAmazonLocationsCountryData, MerchantAmazonLocationsCountryResponses, MerchantAmazonLocationsData, MerchantAmazonLocationsResponses, MerchantErrorsData, MerchantErrorsResponses, MerchantGoogleLanguagesData, MerchantGoogleLanguagesResponses, MerchantGoogleLocationsCountryData, MerchantGoogleLocationsCountryResponses, MerchantGoogleLocationsData, MerchantGoogleLocationsResponses, MerchantIdListData, MerchantIdListResponses, MerchantTasksReadyData, MerchantTasksReadyResponses, MicrodataData, MicrodataResponses, NaverOrganicTaskGetAdvancedData, NaverOrganicTaskGetAdvancedResponses, NaverOrganicTaskGetHtmlData, NaverOrganicTaskGetHtmlResponses, NaverOrganicTaskGetRegularData, NaverOrganicTaskGetRegularResponses, NaverOrganicTaskPostData, NaverOrganicTaskPostResponses, NaverOrganicTasksFixedData, NaverOrganicTasksFixedResponses, NaverOrganicTasksReadyData, NaverOrganicTasksReadyResponses, NonIndexableData, NonIndexableResponses, OnPageAvailableFiltersData, OnPageAvailableFiltersResponses, OnPageErrorsData, OnPageErrorsResponses, OnPageIdListData, OnPageIdListResponses, OnPageLighthouseLanguagesData, OnPageLighthouseLanguagesResponses, OnPageTasksReadyData, OnPageTasksReadyResponses, PageIntersectionLiveData, PageIntersectionLiveResponses, PagesByResourceData, PagesByResourceResponses, PageScreenshotData, PageScreenshotResponses, PagesData, PagesResponses, ParaphraseLiveData, ParaphraseLiveResponses, PerplexityLlmResponsesLiveData, PerplexityLlmResponsesLiveResponses, PerplexityLlmResponsesModelsData, PerplexityLlmResponsesModelsResponses, PhraseTrendsLiveData, PhraseTrendsLiveResponses, RatingDistributionLiveData, RatingDistributionLiveResponses, RawHtmlData, RawHtmlResponses, RedirectChainsData, RedirectChainsResponses, ReferringDomainsLiveData, ReferringDomainsLiveResponses, ReferringNetworksLiveData, ReferringNetworksLiveResponses, ResourcesData, ResourcesResponses, ScreenshotData, ScreenshotResponses, SearchLiveData, SearchLiveResponses, SentimentAnalysisLiveData, SentimentAnalysisLiveResponses, SerpBaiduLanguagesData, SerpBaiduLanguagesResponses, SerpBaiduLocationsCountryData, SerpBaiduLocationsCountryResponses, SerpBaiduLocationsData, SerpBaiduLocationsResponses, SerpBingLanguagesData, SerpBingLanguagesResponses, SerpBingLocationsCountryData, SerpBingLocationsCountryResponses, SerpBingLocationsData, SerpBingLocationsResponses, SerpErrorsData, SerpErrorsResponses, SerpGoogleAdsAdvertisersLocationsData, SerpGoogleAdsAdvertisersLocationsResponses, SerpGoogleAdsSearchLocationsData, SerpGoogleAdsSearchLocationsResponses, SerpGoogleAiModeLanguagesData, SerpGoogleAiModeLanguagesResponses, SerpGoogleLanguagesData, SerpGoogleLanguagesResponses, SerpGoogleLocationsCountryData, SerpGoogleLocationsCountryResponses, SerpGoogleLocationsData, SerpGoogleLocationsResponses, SerpIdListData, SerpIdListResponses, SerpSeznamLanguagesData, SerpSeznamLanguagesResponses, SerpSeznamLocationsCountryData, SerpSeznamLocationsCountryResponses, SerpSeznamLocationsData, SerpSeznamLocationsResponses, SerpYahooLanguagesData, SerpYahooLanguagesResponses, SerpYahooLocationsCountryData, SerpYahooLocationsCountryResponses, SerpYahooLocationsData, SerpYahooLocationsResponses, SerpYoutubeLanguagesData, SerpYoutubeLanguagesResponses, SerpYoutubeLocationsCountryData, SerpYoutubeLocationsCountryResponses, SerpYoutubeLocationsData, SerpYoutubeLocationsResponses, SeznamOrganicTaskGetAdvancedData, SeznamOrganicTaskGetAdvancedResponses, SeznamOrganicTaskGetHtmlData, SeznamOrganicTaskGetHtmlResponses, SeznamOrganicTaskGetRegularData, SeznamOrganicTaskGetRegularResponses, SeznamOrganicTaskPostData, SeznamOrganicTaskPostResponses, SeznamOrganicTasksFixedData, SeznamOrganicTasksFixedResponses, SeznamOrganicTasksReadyData, SeznamOrganicTasksReadyResponses, SocialMediaFacebookLiveData, SocialMediaFacebookLiveResponses, SocialMediaPinterestLiveData, SocialMediaPinterestLiveResponses, SocialMediaRedditLiveData, SocialMediaRedditLiveResponses, SummaryData, SummaryLiveData, SummaryLiveResponses, SummaryResponses, TaskPostData, TaskPostResponses, TasksReadyData, TasksReadyResponses, TechnologiesAggregationTechnologiesLiveData, TechnologiesAggregationTechnologiesLiveResponses, TechnologiesAvailableFiltersData, TechnologiesAvailableFiltersResponses, TechnologiesDomainsByHtmlTermsLiveData, TechnologiesDomainsByHtmlTermsLiveResponses, TechnologiesDomainsByTechnologyLiveData, TechnologiesDomainsByTechnologyLiveResponses, TechnologiesDomainTechnologiesLiveData, TechnologiesDomainTechnologiesLiveResponses, TechnologiesTechnologiesData, TechnologiesTechnologiesResponses, TechnologiesTechnologiesSummaryLiveData, TechnologiesTechnologiesSummaryLiveResponses, TechnologiesTechnologyStatsLiveData, TechnologiesTechnologyStatsLiveResponses, TextSummaryLiveData, TextSummaryLiveResponses, TimeseriesNewLostSummaryLiveData, TimeseriesNewLostSummaryLiveResponses, TimeseriesSummaryLiveData, TimeseriesSummaryLiveResponses, TripadvisorReviewsTaskGetData, TripadvisorReviewsTaskGetResponses, TripadvisorReviewsTaskPostData, TripadvisorReviewsTaskPostResponses, TripadvisorReviewsTasksReadyData, TripadvisorReviewsTasksReadyResponses, TripadvisorSearchTaskGetData, TripadvisorSearchTaskGetResponses, TripadvisorSearchTaskPostData, TripadvisorSearchTaskPostResponses, TripadvisorSearchTasksReadyData, TripadvisorSearchTasksReadyResponses, TrustpilotReviewsTaskGetData, TrustpilotReviewsTaskGetResponses, TrustpilotReviewsTaskPostData, TrustpilotReviewsTaskPostResponses, TrustpilotReviewsTasksReadyData, TrustpilotReviewsTasksReadyResponses, TrustpilotSearchTaskGetData, TrustpilotSearchTaskGetResponses, TrustpilotSearchTaskPostData, TrustpilotSearchTaskPostResponses, TrustpilotSearchTasksReadyData, TrustpilotSearchTasksReadyResponses, UserDataData, UserDataResponses, WaterfallData, WaterfallResponses, WebhookResendData, WebhookResendResponses, WhoisAvailableFiltersData, WhoisAvailableFiltersResponses, WhoisOverviewLiveData, WhoisOverviewLiveResponses, YahooOrganicLiveAdvancedData, YahooOrganicLiveAdvancedResponses, YahooOrganicLiveHtmlData, YahooOrganicLiveHtmlResponses, YahooOrganicLiveRegularData, YahooOrganicLiveRegularResponses, YahooOrganicTaskGetAdvancedData, YahooOrganicTaskGetAdvancedResponses, YahooOrganicTaskGetHtmlData, YahooOrganicTaskGetHtmlResponses, YahooOrganicTaskGetRegularData, YahooOrganicTaskGetRegularResponses, YahooOrganicTaskPostData, YahooOrganicTaskPostResponses, YahooOrganicTasksFixedData, YahooOrganicTasksFixedResponses, YahooOrganicTasksReadyData, YahooOrganicTasksReadyResponses, YoutubeVideoCommentsLiveAdvancedData, YoutubeVideoCommentsLiveAdvancedResponses, YoutubeVideoCommentsTaskGetAdvancedData, YoutubeVideoCommentsTaskGetAdvancedResponses, YoutubeVideoCommentsTaskPostData, YoutubeVideoCommentsTaskPostResponses, YoutubeVideoCommentsTasksFixedData, YoutubeVideoCommentsTasksFixedResponses, YoutubeVideoCommentsTasksReadyData, YoutubeVideoCommentsTasksReadyResponses, YoutubeVideoInfoLiveAdvancedData, YoutubeVideoInfoLiveAdvancedResponses, YoutubeVideoInfoTaskGetAdvancedData, YoutubeVideoInfoTaskGetAdvancedResponses, YoutubeVideoInfoTaskPostData, YoutubeVideoInfoTaskPostResponses, YoutubeVideoInfoTasksFixedData, YoutubeVideoInfoTasksFixedResponses, YoutubeVideoInfoTasksReadyData, YoutubeVideoInfoTasksReadyResponses, YoutubeVideoSubtitlesLiveAdvancedData, YoutubeVideoSubtitlesLiveAdvancedResponses, YoutubeVideoSubtitlesTaskGetAdvancedData, YoutubeVideoSubtitlesTaskGetAdvancedResponses, YoutubeVideoSubtitlesTaskPostData, YoutubeVideoSubtitlesTaskPostResponses, YoutubeVideoSubtitlesTasksFixedData, YoutubeVideoSubtitlesTasksFixedResponses, YoutubeVideoSubtitlesTasksReadyData, YoutubeVideoSubtitlesTasksReadyResponses } from './types.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = Options2<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * This endpoint is designed to provide you with the list of IDs and metadata of the completed SERP tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/id_list/?bash'
 */
export const serpIdList = <ThrowOnError extends boolean = false>(options?: Options<SerpIdListData, ThrowOnError>) => {
    return (options?.client ?? client).post<SerpIdListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/id_list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * By calling this endpoint you will receive information about the SERP API tasks that returned an error within the past 7 days.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/errors/?bash'
 */
export const serpErrors = <ThrowOnError extends boolean = false>(options?: Options<SerpErrorsData, ThrowOnError>) => {
    return (options?.client ?? client).post<SerpErrorsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/errors',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Using the Live Page Screenshot endpoint, you can capture a screenshot of any SERP page.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/screenshot/?bash'
 */
export const screenshot = <ThrowOnError extends boolean = false>(options?: Options<ScreenshotData, ThrowOnError>) => {
    return (options?.client ?? client).post<ScreenshotResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/screenshot',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * The purpose of the Live SERP API AI Summary endpoint is to provide a summary of the content found on any SERP and generate a response based on the user’s specified prompt.
 * To obtain results, you have to specify task_id, which you can find in the response to the POST request.
 * Learn more in our Help Center.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/ai_summary/?bash'
 */
export const aiSummary = <ThrowOnError extends boolean = false>(options?: Options<AiSummaryData, ThrowOnError>) => {
    return (options?.client ?? client).post<AiSummaryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/ai_summary',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/locations/?bash'
 */
export const serpGoogleLocations = <ThrowOnError extends boolean = false>(options?: Options<SerpGoogleLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpGoogleLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/locations',
        ...options
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/locations/?bash'
 */
export const serpGoogleLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<SerpGoogleLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<SerpGoogleLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/locations/{country}',
        ...options
    });
};

/**
 * You will receive the list of languages by calling this API.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/languages/?bash'
 */
export const serpGoogleLanguages = <ThrowOnError extends boolean = false>(options?: Options<SerpGoogleLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpGoogleLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/languages',
        ...options
    });
};

/**
 * ‌‌
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/organic/task_post/?bash'
 */
export const googleOrganicTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleOrganicTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleOrganicTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/organic/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/organic/tasks_ready/?bash'
 */
export const googleOrganicTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleOrganicTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleOrganicTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/organic/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/organic/tasks_ready/?bash'
 */
export const tasksReady = <ThrowOnError extends boolean = false>(options?: Options<TasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<TasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/organic/tasks_fixed/?bash'
 */
export const googleOrganicTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<GoogleOrganicTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleOrganicTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/organic/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/organic/task_get/regular/?bash'
 */
export const googleOrganicTaskGetRegular = <ThrowOnError extends boolean = false>(options: Options<GoogleOrganicTaskGetRegularData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleOrganicTaskGetRegularResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/organic/task_get/regular/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/organic/task_get/advanced/?bash'
 */
export const googleOrganicTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleOrganicTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleOrganicTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/organic/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/organic/task_get/html/?bash'
 */
export const googleOrganicTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleOrganicTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleOrganicTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/organic/task_get/html/{id}',
        ...options
    });
};

/**
 * Live SERP provides real-time data on search engine results for the specified keyword, search engine, and location.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/organic/live/regular/?bash'
 */
export const googleOrganicLiveRegular = <ThrowOnError extends boolean = false>(options?: Options<GoogleOrganicLiveRegularData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleOrganicLiveRegularResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/organic/live/regular',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/organic/live/advanced/?bash'
 */
export const googleOrganicLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleOrganicLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleOrganicLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/organic/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Live SERP HTML provides a raw HTML page of search engine results for the specified keyword, search engine, and location.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/organic/live/html/?bash'
 */
export const googleOrganicLiveHtml = <ThrowOnError extends boolean = false>(options?: Options<GoogleOrganicLiveHtmlData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleOrganicLiveHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/organic/live/html',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of languages by calling this API.
 *
 * As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information specific to the set tasks.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/ai_mode/languages/?bash'
 */
export const serpGoogleAiModeLanguages = <ThrowOnError extends boolean = false>(options?: Options<SerpGoogleAiModeLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpGoogleAiModeLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ai_mode/languages',
        ...options
    });
};

/**
 * ‌
 * Google AI Mode SERP API provides search results from the AI Mode feature of Google Search.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/ai_mode/task_post/?bash'
 */
export const googleAiModeTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleAiModeTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAiModeTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ai_mode/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/ai_mode/tasks_ready/?bash'
 */
export const googleAiModeTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleAiModeTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAiModeTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ai_mode/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/ai_mode/tasks_fixed/?bash'
 */
export const googleAiModeTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<GoogleAiModeTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAiModeTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ai_mode/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/ai_mode/task_get/advanced/?bash'
 */
export const googleAiModeTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleAiModeTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAiModeTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ai_mode/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/ai_mode/task_get/html/?bash'
 */
export const googleAiModeTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleAiModeTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAiModeTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ai_mode/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Google AI Mode SERP API provides search results from the AI Mode feature of Google Search.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/ai_mode/live/advanced/?bash'
 */
export const googleAiModeLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleAiModeLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAiModeLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ai_mode/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Live SERP HTML provides a raw HTML page of 100 search engine results for the specified keyword, search engine, and location.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/ai_mode/live/html/?bash'
 */
export const googleAiModeLiveHtml = <ThrowOnError extends boolean = false>(options?: Options<GoogleAiModeLiveHtmlData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAiModeLiveHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ai_mode/live/html',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * SERP API provides top 100 search engine results. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/maps/task_post/?bash'
 */
export const googleMapsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleMapsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleMapsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/maps/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/maps/tasks_ready/?bash'
 */
export const googleMapsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleMapsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleMapsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/maps/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/maps/tasks_fixed/?bash'
 */
export const googleMapsTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<GoogleMapsTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleMapsTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/maps/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/maps/task_get/advanced/?bash'
 */
export const googleMapsTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleMapsTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleMapsTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/maps/task_get/advanced/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Live Google Maps SERP provides real-time data on top 100 search engine results for the specified keyword, search engine, and location.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/maps/live/advanced/?bash'
 */
export const googleMapsLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleMapsLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleMapsLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/maps/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Google Local Finder SERP API provides top search engine results specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/local_finder/task_post/?bash'
 */
export const googleLocalFinderTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleLocalFinderTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleLocalFinderTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/local_finder/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/local_finder/tasks_ready/?bash'
 */
export const googleLocalFinderTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleLocalFinderTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleLocalFinderTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/local_finder/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/local_finder/tasks_fixed/?bash'
 */
export const googleLocalFinderTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<GoogleLocalFinderTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleLocalFinderTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/local_finder/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/local_finder/task_get/advanced/?bash'
 */
export const googleLocalFinderTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleLocalFinderTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleLocalFinderTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/local_finder/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/local_finder/task_get/html/?bash'
 */
export const googleLocalFinderTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleLocalFinderTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleLocalFinderTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/local_finder/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Live Google Local_finder SERP provides real-time search engine results for the specified keyword and location. By default, you can get up to 20 results for desktop and up to 10 results for mobile.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/local_finder/live/advanced/?bash'
 */
export const googleLocalFinderLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleLocalFinderLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleLocalFinderLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/local_finder/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Live Google Local Finder SERP HTML provides a raw HTML page of the search engine results for the specified keyword, search engine, and location.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/local_finder/live/html/?bash'
 */
export const googleLocalFinderLiveHtml = <ThrowOnError extends boolean = false>(options?: Options<GoogleLocalFinderLiveHtmlData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleLocalFinderLiveHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/local_finder/live/html',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * SERP API provides top 100 search engine results. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/news/task_post/?bash'
 */
export const googleNewsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleNewsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleNewsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/news/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/news/tasks_ready/?bash'
 */
export const googleNewsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleNewsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleNewsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/news/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/news/tasks_fixed/?bash'
 */
export const googleNewsTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<GoogleNewsTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleNewsTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/news/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/news/task_get/advanced/?bash'
 */
export const googleNewsTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleNewsTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleNewsTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/news/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/news/task_get/html/?bash'
 */
export const googleNewsTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleNewsTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleNewsTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/news/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Live Google News SERP provides real-time data on top 100 search engine results for the specified keyword, search engine, and location.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/news/live/advanced/?bash'
 */
export const googleNewsLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleNewsLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleNewsLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/news/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Live SERP HTML provides a raw HTML page of 100 search engine results for the specified keyword, search engine, and location.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/news/live/html/?bash'
 */
export const googleNewsLiveHtml = <ThrowOnError extends boolean = false>(options?: Options<GoogleNewsLiveHtmlData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleNewsLiveHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/news/live/html',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Google Events SERP provides data from Google Events Search for the specified keyword and location (see the List of Locations). Note that Google Events SERP API works for the English language only.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/events/task_post/?bash'
 */
export const googleEventsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleEventsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleEventsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/events/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/events/tasks_ready/?bash'
 */
export const googleEventsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleEventsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleEventsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/events/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/events/tasks_fixed/?bash'
 */
export const googleEventsTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<GoogleEventsTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleEventsTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/events/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/events/task_get/advanced/?bash'
 */
export const googleEventsTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleEventsTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleEventsTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/events/task_get/advanced/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Live Google Events SERP provides real-time data from Google Events Search for the specified keyword and location. Note that Google Events SERP API works for the English language only.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/events/live/advanced/?bash'
 */
export const googleEventsLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleEventsLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleEventsLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/events/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * SERP API provides top 100 search engine results. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/images/task_post/?bash'
 */
export const googleImagesTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleImagesTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleImagesTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/images/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/images/tasks_ready/?bash'
 */
export const googleImagesTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleImagesTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleImagesTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/images/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/images/tasks_fixed/?bash'
 */
export const googleImagesTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<GoogleImagesTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleImagesTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/images/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/images/task_get/advanced/?bash'
 */
export const googleImagesTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleImagesTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleImagesTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/images/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/images/task_get/html/?bash'
 */
export const googleImagesTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleImagesTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleImagesTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/images/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌
 * Live Google Images SERP provides real-time data on top 100 images results for the specified keyword, search engine, and location.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/images/live/advanced/?bash'
 */
export const googleImagesLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleImagesLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleImagesLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/images/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Live SERP HTML provides a raw HTML page of 100 search engine results for the specified keyword, search engine, and location.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/images/live/html/?bash'
 */
export const googleImagesLiveHtml = <ThrowOnError extends boolean = false>(options?: Options<GoogleImagesLiveHtmlData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleImagesLiveHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/images/live/html',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Google Search By Image SERP API provides up to top 100 search engine results based on the image you specified. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/search_by_image/task_post/?bash'
 */
export const googleSearchByImageTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleSearchByImageTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleSearchByImageTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/search_by_image/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/search_by_image/tasks_ready/?bash'
 */
export const googleSearchByImageTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleSearchByImageTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleSearchByImageTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/search_by_image/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/search_by_image/tasks_fixed/?bash'
 */
export const googleSearchByImageTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<GoogleSearchByImageTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleSearchByImageTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/search_by_image/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/search_by_image/task_get/advanced/?bash'
 */
export const googleSearchByImageTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleSearchByImageTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleSearchByImageTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/search_by_image/task_get/advanced/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint will provide you with SERP data from the Google Jobs search engine. The returned results are specific to the keyword as well as the language and location parameters of the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/jobs/task_post/?bash'
 */
export const googleJobsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleJobsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleJobsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/jobs/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/jobs/tasks_ready/?bash'
 */
export const googleJobsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleJobsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleJobsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/jobs/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/jobs/tasks_fixed/?bash'
 */
export const googleJobsTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<GoogleJobsTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleJobsTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/jobs/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/jobs/task_get/advanced/?bash'
 */
export const googleJobsTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleJobsTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleJobsTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/jobs/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/jobs/task_get/html/?bash'
 */
export const googleJobsTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleJobsTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleJobsTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/jobs/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Google Autocomplete is a feature within Google Search that improves the search experience by allowing users to complete searches they started to type. DataForSEO SERP API will provide you with all the suggestions Google Autocomplete offers for a particular keyword, the position of the cursor pointer, and the search client.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/autocomplete/task_post/?bash'
 */
export const googleAutocompleteTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleAutocompleteTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAutocompleteTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/autocomplete/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/autocomplete/tasks_ready/?bash'
 */
export const googleAutocompleteTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleAutocompleteTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAutocompleteTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/autocomplete/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/autocomplete/tasks_fixed/?bash'
 */
export const googleAutocompleteTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<GoogleAutocompleteTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAutocompleteTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/autocomplete/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/autocomplete/task_get/advanced/?bash'
 */
export const googleAutocompleteTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleAutocompleteTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAutocompleteTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/autocomplete/task_get/advanced/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Google Autocomplete is a feature within Google Search that improves the search experience by allowing users to complete searches they started to type. DataForSEO SERP API will provide you with all the suggestions Google Autocomplete offers for a particular keyword, the position of the cursor pointer, and the search client.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/autocomplete/live/advanced/?bash'
 */
export const googleAutocompleteLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleAutocompleteLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAutocompleteLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/autocomplete/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Google Dataset Search API provides top 20 Google Dataset search engine results. These results are specific to the indicated keyword. You can specify other parameters optionally.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/dataset_search/task_post/?bash'
 */
export const googleDatasetSearchTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleDatasetSearchTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleDatasetSearchTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/dataset_search/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/dataset_search/tasks_ready/?bash'
 */
export const googleDatasetSearchTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleDatasetSearchTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleDatasetSearchTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/dataset_search/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/dataset_search/tasks_fixed/?bash'
 */
export const googleDatasetSearchTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<GoogleDatasetSearchTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleDatasetSearchTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/dataset_search/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/dataset_search/task_get/advanced/?bash'
 */
export const googleDatasetSearchTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleDatasetSearchTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleDatasetSearchTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/dataset_search/task_get/advanced/{id}',
        ...options
    });
};

/**
 * ‌
 * Live Google Dataset Search provides real-time data on the top 20 Google Dataset search engine results. These results are specific to the indicated keyword. You can specify other parameters optionally.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/dataset_search/live/advanced/?bash'
 */
export const googleDatasetSearchLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleDatasetSearchLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleDatasetSearchLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/dataset_search/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Google Dataset Info API provides detailed information about the dataset you specify in the POST request. You will get data from a page of the dataset displayed separately from the SERP. It contains information about dataset content, authors, licenses, and description on the SERP.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/dataset_info/task_post/?bash'
 */
export const googleDatasetInfoTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleDatasetInfoTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleDatasetInfoTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/dataset_info/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/dataset_info/tasks_ready/?bash'
 */
export const googleDatasetInfoTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleDatasetInfoTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleDatasetInfoTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/dataset_info/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/dataset_info/tasks_fixed/?bash'
 */
export const googleDatasetInfoTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<GoogleDatasetInfoTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleDatasetInfoTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/dataset_info/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/dataset_info/task_get/advanced/?bash'
 */
export const googleDatasetInfoTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleDatasetInfoTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleDatasetInfoTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/dataset_info/task_get/advanced/{id}',
        ...options
    });
};

/**
 * ‌
 * Live Google Dataset Info provides real-time data on the dataset you specify in the request. You will get data from a page of the dataset displayed separately from the SERP. It contains information about dataset content, authors, licenses, and description on the SERP.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/dataset_info/live/advanced/?bash'
 */
export const googleDatasetInfoLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleDatasetInfoLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleDatasetInfoLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/dataset_info/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/serp/google/ads_advertisers/locations/?bash'
 */
export const serpGoogleAdsAdvertisersLocations = <ThrowOnError extends boolean = false>(options?: Options<SerpGoogleAdsAdvertisersLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpGoogleAdsAdvertisersLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ads_advertisers/locations',
        ...options
    });
};

/**
 * Google Ads Advertisers provides information on advertisers that run campaigns on Google Ads based on the Ads Transparency platform. ‌‌
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/serp/google/ads_advertisers/task_post/?bash'
 */
export const googleAdsAdvertisersTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsAdvertisersTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAdsAdvertisersTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ads_advertisers/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/serp/google/ads_advertisers/tasks_ready/?bash'
 */
export const googleAdsAdvertisersTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsAdvertisersTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAdsAdvertisersTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ads_advertisers/tasks_ready',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/serp/google/ads_advertisers/task_get/advanced/?bash'
 */
export const googleAdsAdvertisersTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleAdsAdvertisersTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAdsAdvertisersTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ads_advertisers/task_get/advanced/{id}',
        ...options
    });
};

/**
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/serp/google/ads_search/locations/?bash'
 */
export const serpGoogleAdsSearchLocations = <ThrowOnError extends boolean = false>(options?: Options<SerpGoogleAdsSearchLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpGoogleAdsSearchLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ads_search/locations',
        ...options
    });
};

/**
 * Google Ads Search provides information on ads that are run by advertisers on Google Ads. Information is based on the Ads Transparency platform and adapted for the convenience of DataForSEO users. ‌‌
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/serp/google/ads_search/task_post/?bash'
 */
export const googleAdsSearchTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsSearchTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAdsSearchTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ads_search/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/serp/google/ads_search/tasks_ready/?bash'
 */
export const googleAdsSearchTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsSearchTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAdsSearchTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ads_search/tasks_ready',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/serp/google/ads_search/task_get/advanced/?bash'
 */
export const googleAdsSearchTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleAdsSearchTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAdsSearchTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/ads_search/task_get/advanced/{id}',
        ...options
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/locations/?bash'
 */
export const serpBingLocations = <ThrowOnError extends boolean = false>(options?: Options<SerpBingLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpBingLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/locations',
        ...options
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/locations/?bash'
 */
export const serpBingLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<SerpBingLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<SerpBingLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/locations/{country}',
        ...options
    });
};

/**
 * You will receive the list of languages by calling this API.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/languages/?bash'
 */
export const serpBingLanguages = <ThrowOnError extends boolean = false>(options?: Options<SerpBingLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpBingLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/languages',
        ...options
    });
};

/**
 * ‌‌
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/organic/task_post/?bash'
 */
export const bingOrganicTaskPost = <ThrowOnError extends boolean = false>(options?: Options<BingOrganicTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingOrganicTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/organic/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/organic/tasks_ready/?bash'
 */
export const bingOrganicTasksReady = <ThrowOnError extends boolean = false>(options?: Options<BingOrganicTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<BingOrganicTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/organic/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/organic/tasks_fixed/?bash'
 */
export const bingOrganicTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<BingOrganicTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BingOrganicTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/organic/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/organic/task_get/regular/?bash'
 */
export const bingOrganicTaskGetRegular = <ThrowOnError extends boolean = false>(options: Options<BingOrganicTaskGetRegularData, ThrowOnError>) => {
    return (options.client ?? client).get<BingOrganicTaskGetRegularResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/organic/task_get/regular/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/organic/task_get/advanced/?bash'
 */
export const bingOrganicTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<BingOrganicTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<BingOrganicTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/organic/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/organic/task_get/html/?bash'
 */
export const bingOrganicTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<BingOrganicTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<BingOrganicTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/organic/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/organic/live/regular/?bash'
 */
export const bingOrganicLiveRegular = <ThrowOnError extends boolean = false>(options?: Options<BingOrganicLiveRegularData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingOrganicLiveRegularResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/organic/live/regular',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/organic/live/advanced/?bash'
 */
export const bingOrganicLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<BingOrganicLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingOrganicLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/organic/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/organic/live/html/?bash'
 */
export const bingOrganicLiveHtml = <ThrowOnError extends boolean = false>(options?: Options<BingOrganicLiveHtmlData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingOrganicLiveHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/organic/live/html',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * SERP API provides top 100 search engine results. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/local_pack/task_post/?bash'
 */
export const bingLocalPackTaskPost = <ThrowOnError extends boolean = false>(options?: Options<BingLocalPackTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingLocalPackTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/local_pack/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/local_pack/tasks_ready/?bash'
 */
export const bingLocalPackTasksReady = <ThrowOnError extends boolean = false>(options?: Options<BingLocalPackTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<BingLocalPackTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/local_pack/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/local_pack/tasks_fixed/?bash'
 */
export const bingLocalPackTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<BingLocalPackTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BingLocalPackTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/local_pack/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/local_pack/task_get/regular/?bash'
 */
export const bingLocalPackTaskGetRegular = <ThrowOnError extends boolean = false>(options: Options<BingLocalPackTaskGetRegularData, ThrowOnError>) => {
    return (options.client ?? client).get<BingLocalPackTaskGetRegularResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/local_pack/task_get/regular/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/local_pack/task_get/html/?bash'
 */
export const bingLocalPackTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<BingLocalPackTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<BingLocalPackTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/local_pack/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Live Bing Local Pack SERP provides real-time data on top 100 search engine results for the specified keyword, search engine, and location.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/local_pack/live/regular/?bash'
 */
export const bingLocalPackLiveRegular = <ThrowOnError extends boolean = false>(options?: Options<BingLocalPackLiveRegularData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingLocalPackLiveRegularResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/local_pack/live/regular',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/bing/local_pack/live/html/?bash'
 */
export const bingLocalPackLiveHtml = <ThrowOnError extends boolean = false>(options?: Options<BingLocalPackLiveHtmlData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingLocalPackLiveHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/bing/local_pack/live/html',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/locations/?bash'
 */
export const serpYoutubeLocations = <ThrowOnError extends boolean = false>(options?: Options<SerpYoutubeLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpYoutubeLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/locations',
        ...options
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/locations/?bash'
 */
export const serpYoutubeLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<SerpYoutubeLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<SerpYoutubeLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/locations/{country}',
        ...options
    });
};

/**
 * You will receive the list of languages by calling this API.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/languages/?bash'
 */
export const serpYoutubeLanguages = <ThrowOnError extends boolean = false>(options?: Options<SerpYoutubeLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpYoutubeLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/languages',
        ...options
    });
};

/**
 * ‌‌
 * YouTube Video Info API provides detailed information about the video you specify in the POST request. You will get data from the watching page containing key video and content metrics as well as the channel where the video is published.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_info/task_post/?bash'
 */
export const youtubeVideoInfoTaskPost = <ThrowOnError extends boolean = false>(options?: Options<YoutubeVideoInfoTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<YoutubeVideoInfoTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_info/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_info/tasks_ready/?bash'
 */
export const youtubeVideoInfoTasksReady = <ThrowOnError extends boolean = false>(options?: Options<YoutubeVideoInfoTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<YoutubeVideoInfoTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_info/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_info/tasks_fixed/?bash'
 */
export const youtubeVideoInfoTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<YoutubeVideoInfoTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<YoutubeVideoInfoTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_info/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_info/task_get/advanced/?bash'
 */
export const youtubeVideoInfoTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<YoutubeVideoInfoTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<YoutubeVideoInfoTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_info/task_get/advanced/{id}',
        ...options
    });
};

/**
 * ‌
 * Live YouTube Video Info provides real-time data on the video you specify in the request. You will get data from the watching page containing key video and content metrics as well as the channel where the video is published.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_info/live/advanced/?bash'
 */
export const youtubeVideoInfoLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<YoutubeVideoInfoLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<YoutubeVideoInfoLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_info/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * YouTube Subtitles API provides data on all subtitles in the video you specify in the POST request. You will get data from the watching page containing subtitled text, its language, and duration in the video.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_subtitles/task_post/?bash'
 */
export const youtubeVideoSubtitlesTaskPost = <ThrowOnError extends boolean = false>(options?: Options<YoutubeVideoSubtitlesTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<YoutubeVideoSubtitlesTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_subtitles/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_subtitles/tasks_ready/?bash'
 */
export const youtubeVideoSubtitlesTasksReady = <ThrowOnError extends boolean = false>(options?: Options<YoutubeVideoSubtitlesTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<YoutubeVideoSubtitlesTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_subtitles/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_subtitles/tasks_fixed/?bash'
 */
export const youtubeVideoSubtitlesTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<YoutubeVideoSubtitlesTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<YoutubeVideoSubtitlesTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_subtitles/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_subtitles/task_get/advanced/?bash'
 */
export const youtubeVideoSubtitlesTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<YoutubeVideoSubtitlesTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<YoutubeVideoSubtitlesTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_subtitles/task_get/advanced/{id}',
        ...options
    });
};

/**
 * ‌
 * Live YouTube Subtitles provides real-time data on subtitles in the video you specify in the request. You will get data from the watching page containing subtitled text, its language, and duration in the video.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_subtitles/live/advanced/?bash'
 */
export const youtubeVideoSubtitlesLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<YoutubeVideoSubtitlesLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<YoutubeVideoSubtitlesLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_subtitles/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * YouTube Comments API provides data on comments on the video you specify in the request. You will get the top 20 comments on the video as well as information about the author, and key comment metrics.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_comments/task_post/?bash'
 */
export const youtubeVideoCommentsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<YoutubeVideoCommentsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<YoutubeVideoCommentsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_comments/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_comments/tasks_ready/?bash'
 */
export const youtubeVideoCommentsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<YoutubeVideoCommentsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<YoutubeVideoCommentsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_comments/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_comments/tasks_fixed/?bash'
 */
export const youtubeVideoCommentsTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<YoutubeVideoCommentsTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<YoutubeVideoCommentsTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_comments/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_comments/task_get/advanced/?bash'
 */
export const youtubeVideoCommentsTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<YoutubeVideoCommentsTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<YoutubeVideoCommentsTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_comments/task_get/advanced/{id}',
        ...options
    });
};

/**
 * ‌
 * Live YouTube Comments provides real-time data on comments on the video you specify in the request. You will get the top 20 comments on the video as well as information about the author, and key comment metrics.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/youtube/video_comments/live/advanced/?bash'
 */
export const youtubeVideoCommentsLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<YoutubeVideoCommentsLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<YoutubeVideoCommentsLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/youtube/video_comments/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/yahoo/locations/?bash'
 */
export const serpYahooLocations = <ThrowOnError extends boolean = false>(options?: Options<SerpYahooLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpYahooLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/yahoo/locations',
        ...options
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/yahoo/locations/?bash'
 */
export const serpYahooLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<SerpYahooLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<SerpYahooLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/yahoo/locations/{country}',
        ...options
    });
};

/**
 * You will receive the list of languages by calling this API.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/yahoo/languages/?bash'
 */
export const serpYahooLanguages = <ThrowOnError extends boolean = false>(options?: Options<SerpYahooLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpYahooLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/yahoo/languages',
        ...options
    });
};

/**
 * ‌‌
 * SERP API provides top search engine results. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/yahoo/organic/task_post/?bash'
 */
export const yahooOrganicTaskPost = <ThrowOnError extends boolean = false>(options?: Options<YahooOrganicTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<YahooOrganicTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/yahoo/organic/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/yahoo/organic/tasks_ready/?bash'
 */
export const yahooOrganicTasksReady = <ThrowOnError extends boolean = false>(options?: Options<YahooOrganicTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<YahooOrganicTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/yahoo/organic/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/yahoo/organic/tasks_fixed/?bash'
 */
export const yahooOrganicTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<YahooOrganicTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<YahooOrganicTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/yahoo/organic/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/yahoo/organic/task_get/regular/?bash'
 */
export const yahooOrganicTaskGetRegular = <ThrowOnError extends boolean = false>(options: Options<YahooOrganicTaskGetRegularData, ThrowOnError>) => {
    return (options.client ?? client).get<YahooOrganicTaskGetRegularResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/yahoo/organic/task_get/regular/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/yahoo/organic/task_get/advanced/?bash'
 */
export const yahooOrganicTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<YahooOrganicTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<YahooOrganicTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/yahoo/organic/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/yahoo/organic/task_get/html/?bash'
 */
export const yahooOrganicTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<YahooOrganicTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<YahooOrganicTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/yahoo/organic/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/yahoo/organic/live/regular/?bash'
 */
export const yahooOrganicLiveRegular = <ThrowOnError extends boolean = false>(options?: Options<YahooOrganicLiveRegularData, ThrowOnError>) => {
    return (options?.client ?? client).post<YahooOrganicLiveRegularResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/yahoo/organic/live/regular',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/yahoo/organic/live/advanced/?bash'
 */
export const yahooOrganicLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<YahooOrganicLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<YahooOrganicLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/yahoo/organic/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/yahoo/organic/live/html/?bash'
 */
export const yahooOrganicLiveHtml = <ThrowOnError extends boolean = false>(options?: Options<YahooOrganicLiveHtmlData, ThrowOnError>) => {
    return (options?.client ?? client).post<YahooOrganicLiveHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/yahoo/organic/live/html',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/baidu/locations/?bash'
 */
export const serpBaiduLocations = <ThrowOnError extends boolean = false>(options?: Options<SerpBaiduLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpBaiduLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/baidu/locations',
        ...options
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/baidu/locations/?bash'
 */
export const serpBaiduLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<SerpBaiduLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<SerpBaiduLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/baidu/locations/{country}',
        ...options
    });
};

/**
 * You will receive the list of languages by calling this API. You can also download the full list of supported languages in the CSV format (last updated 2023-05-02).
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/baidu/languages/?bash'
 */
export const serpBaiduLanguages = <ThrowOnError extends boolean = false>(options?: Options<SerpBaiduLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpBaiduLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/baidu/languages',
        ...options
    });
};

/**
 * ‌‌
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/baidu/organic/task_post/?bash'
 */
export const baiduOrganicTaskPost = <ThrowOnError extends boolean = false>(options?: Options<BaiduOrganicTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<BaiduOrganicTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/baidu/organic/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/baidu/organic/tasks_ready/?bash'
 */
export const baiduOrganicTasksReady = <ThrowOnError extends boolean = false>(options?: Options<BaiduOrganicTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<BaiduOrganicTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/baidu/organic/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/baidu/organic/tasks_fixed/?bash'
 */
export const baiduOrganicTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<BaiduOrganicTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BaiduOrganicTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/baidu/organic/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/baidu/organic/task_get/regular/?bash'
 */
export const baiduOrganicTaskGetRegular = <ThrowOnError extends boolean = false>(options: Options<BaiduOrganicTaskGetRegularData, ThrowOnError>) => {
    return (options.client ?? client).get<BaiduOrganicTaskGetRegularResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/baidu/organic/task_get/regular/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/baidu/organic/task_get/advanced/?bash'
 */
export const baiduOrganicTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<BaiduOrganicTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<BaiduOrganicTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/baidu/organic/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/baidu/organic/task_get/html/?bash'
 */
export const baiduOrganicTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<BaiduOrganicTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<BaiduOrganicTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/baidu/organic/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Naver SERP API provides top 15 search engine results. Naver search results do not vary by location and language, and the search parameters for this search engine do not contain language and location variables. However, you can specify a keyword in any language, and the search engine results may vary depending on the language you used for specifying the search query.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/naver/organic/task_post/?bash'
 */
export const naverOrganicTaskPost = <ThrowOnError extends boolean = false>(options?: Options<NaverOrganicTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<NaverOrganicTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/naver/organic/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/naver/organic/tasks_ready/?bash'
 */
export const naverOrganicTasksReady = <ThrowOnError extends boolean = false>(options?: Options<NaverOrganicTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<NaverOrganicTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/naver/organic/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/naver/organic/tasks_fixed/?bash'
 */
export const naverOrganicTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<NaverOrganicTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<NaverOrganicTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/naver/organic/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/naver/organic/task_get/regular/?bash'
 */
export const naverOrganicTaskGetRegular = <ThrowOnError extends boolean = false>(options: Options<NaverOrganicTaskGetRegularData, ThrowOnError>) => {
    return (options.client ?? client).get<NaverOrganicTaskGetRegularResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/naver/organic/task_get/regular/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/naver/organic/task_get/advanced/?bash'
 */
export const naverOrganicTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<NaverOrganicTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<NaverOrganicTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/naver/organic/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/naver/organic/task_get/html/?bash'
 */
export const naverOrganicTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<NaverOrganicTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<NaverOrganicTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/naver/organic/task_get/html/{id}',
        ...options
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/seznam/locations/?bash'
 */
export const serpSeznamLocations = <ThrowOnError extends boolean = false>(options?: Options<SerpSeznamLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpSeznamLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/seznam/locations',
        ...options
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/seznam/locations/?bash'
 */
export const serpSeznamLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<SerpSeznamLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<SerpSeznamLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/seznam/locations/{country}',
        ...options
    });
};

/**
 * You will receive the list of languages by calling this API.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/seznam/languages/?bash'
 */
export const serpSeznamLanguages = <ThrowOnError extends boolean = false>(options?: Options<SerpSeznamLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<SerpSeznamLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/seznam/languages',
        ...options
    });
};

/**
 * ‌‌
 * Seznam SERP API provides top 10 search engine results from one of the most popular search engines in the Czech Republic. Seznam is focused on the local search market, and thus supports the Czech language only.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/seznam/organic/task_post/?bash'
 */
export const seznamOrganicTaskPost = <ThrowOnError extends boolean = false>(options?: Options<SeznamOrganicTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<SeznamOrganicTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/seznam/organic/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/seznam/organic/tasks_ready/?bash'
 */
export const seznamOrganicTasksReady = <ThrowOnError extends boolean = false>(options?: Options<SeznamOrganicTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<SeznamOrganicTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/seznam/organic/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/seznam/organic/tasks_fixed/?bash'
 */
export const seznamOrganicTasksFixed = <ThrowOnError extends boolean = false>(options?: Options<SeznamOrganicTasksFixedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SeznamOrganicTasksFixedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/seznam/organic/tasks_fixed',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/seznam/organic/task_get/regular/?bash'
 */
export const seznamOrganicTaskGetRegular = <ThrowOnError extends boolean = false>(options: Options<SeznamOrganicTaskGetRegularData, ThrowOnError>) => {
    return (options.client ?? client).get<SeznamOrganicTaskGetRegularResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/seznam/organic/task_get/regular/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/seznam/organic/task_get/advanced/?bash'
 */
export const seznamOrganicTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<SeznamOrganicTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<SeznamOrganicTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/seznam/organic/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/seznam/organic/task_get/html/?bash'
 */
export const seznamOrganicTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<SeznamOrganicTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<SeznamOrganicTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/seznam/organic/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌
 * Google Finance Explore API provides real-time data from the ‘Explore’ tab of Google Finance. These results are specific to the parameters you specify in the request: location and language.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_explore/task_post/?bash'
 */
export const googleFinanceExploreTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceExploreTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleFinanceExploreTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_explore/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_explore/tasks_ready/?bash'
 */
export const googleFinanceExploreTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceExploreTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleFinanceExploreTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_explore/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * Live Google Finance Explore provides real-time data from the ‘Explore’ tab of Google Finance. These results are specific to the parameters you specify in the request: ticker in the keyword field, location and language.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_explore/task_get/advanced/?bash'
 */
export const googleFinanceExploreTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleFinanceExploreTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleFinanceExploreTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_explore/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_explore/task_get/html/?bash'
 */
export const googleFinanceExploreTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleFinanceExploreTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleFinanceExploreTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_explore/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌
 * Live Google Finance Explore provides real-time data from the ‘Explore’ tab of Google Finance. These results are specific to the parameters you specify in the request: location and language.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_explore/live/advanced/?bash'
 */
export const googleFinanceExploreLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceExploreLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleFinanceExploreLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_explore/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Live SERP HTML provides raw HTML page from the ‘Explore’ tab of Google Finance. These results are specific to the parameters you specify in the request: location and language.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_explore/live/html/?bash'
 */
export const googleFinanceExploreLiveHtml = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceExploreLiveHtmlData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleFinanceExploreLiveHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_explore/live/html',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Google Finance Markets API provides real-time data from the ‘Markets’ tab of Google Finance. These results are specific to the parameters you specify in the request:  location, language, and market_type.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_markets/task_post/?bash'
 */
export const googleFinanceMarketsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceMarketsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleFinanceMarketsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_markets/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_markets/tasks_ready/?bash'
 */
export const googleFinanceMarketsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceMarketsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleFinanceMarketsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_markets/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * Google Finance Markets API provides real-time data from the ‘Markets’ tab of Google Finance. These results are specific to the parameters you specify in the request: ticker in the keyword field, location and language.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_markets/task_get/advanced/?bash'
 */
export const googleFinanceMarketsTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleFinanceMarketsTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleFinanceMarketsTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_markets/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_markets/task_get/html/?bash'
 */
export const googleFinanceMarketsTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleFinanceMarketsTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleFinanceMarketsTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_markets/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌
 * Live Google Finance Markets provides real-time data from the ‘Markets’ tab of Google Finance. These results are specific to the parameters you specify in the request: location, language, and market_type.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_markets/live/advanced/?bash'
 */
export const googleFinanceMarketsLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceMarketsLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleFinanceMarketsLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_markets/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Live SERP HTML provides raw HTML from the ‘Markets’ tab of Google Finance. These results are specific to the parameters you specify in the request: location and language.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_markets/live/html/?bash'
 */
export const googleFinanceMarketsLiveHtml = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceMarketsLiveHtmlData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleFinanceMarketsLiveHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_markets/live/html',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Google Finance Quote provides real-time data from the ‘Quote’ tab of Google Finance. These results are specific to the parameters you specify in the request: ticker in the keyword field, location and language.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_quote/task_post/?bash'
 */
export const googleFinanceQuoteTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceQuoteTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleFinanceQuoteTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_quote/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_quote/tasks_ready/?bash'
 */
export const googleFinanceQuoteTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceQuoteTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleFinanceQuoteTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_quote/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * Live Google Finance Quote provides real-time data from the ‘Quote’ tab of Google Finance. These results are specific to the parameters you specify in the request: ticker in the keyword field, location and language.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_quote/task_get/advanced/?bash'
 */
export const googleFinanceQuoteTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleFinanceQuoteTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleFinanceQuoteTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_quote/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_quote/task_get/html/?bash'
 */
export const googleFinanceQuoteTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleFinanceQuoteTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleFinanceQuoteTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_quote/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌
 * Live Google Finance Quote provides real-time data from the ‘Quote’ tab of Google Finance. These results are specific to the parameters you specify in the request: ticker in the keyword field, location and language.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_quote/live/advanced/?bash'
 */
export const googleFinanceQuoteLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceQuoteLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleFinanceQuoteLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_quote/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Live SERP HTML provides raw HTML from the ‘Quote’ tab of Google Finance. These results are specific to the parameters you specify in the request: ticker in the keyword field, location and language.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_quote/live/html/?bash'
 */
export const googleFinanceQuoteLiveHtml = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceQuoteLiveHtmlData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleFinanceQuoteLiveHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_quote/live/html',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Google Finance Ticker Search allows you to search for financial instruments available on Google Finance along with additional information. The result is specific to the parameters you specify in the request: keyword (name of a company or financial instrument) in the keyword field, location and language.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_ticker_search/task_post/?bash'
 */
export const googleFinanceTickerSearchTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceTickerSearchTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleFinanceTickerSearchTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_ticker_search/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * Learn more about task completion and obtaining a list of completed tasks in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_ticker_search/tasks_ready/?bash'
 */
export const googleFinanceTickerSearchTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceTickerSearchTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleFinanceTickerSearchTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_ticker_search/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * Google Finance Ticker Search allows you to search for financial instruments available on Google Finance along with additional information. The result is specific to the parameters you specify in the request: keyword (name of a company or financial instrument) in the keyword field, location and language.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_ticker_search/task_get/advanced/?bash'
 */
export const googleFinanceTickerSearchTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleFinanceTickerSearchTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleFinanceTickerSearchTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_ticker_search/task_get/advanced/{id}',
        ...options
    });
};

/**
 * ‌
 * Live Google Finance Ticker Search allows you to search for financial instruments available on Google Finance along with additional information. The result is specific to the parameters you specify in the request: keyword (name of a company or financial instrument) in the keyword field, location and language.
 * for more info please visit 'https://docs.dataforseo.com/v3/serp/google/finance_ticker_search/live/advanced/?bash'
 */
export const googleFinanceTickerSearchLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleFinanceTickerSearchLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleFinanceTickerSearchLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/serp/google/finance_ticker_search/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint is designed to provide you with the list of IDs and metadata of the completed DataForSEO Labs tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/id_list/?bash'
 */
export const dataforseoLabsIdList = <ThrowOnError extends boolean = false>(options?: Options<DataforseoLabsIdListData, ThrowOnError>) => {
    return (options?.client ?? client).post<DataforseoLabsIdListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/id_list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * By calling this endpoint, you will find out when the DataForSEO Labs data was last updated. The API response will provide separate update dates for the Google, Bing, and Amazon endpoints of DataForSEO Labs API.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/status/?bash'
 */
export const dataforseoLabsStatus = <ThrowOnError extends boolean = false>(options?: Options<DataforseoLabsStatusData, ThrowOnError>) => {
    return (options?.client ?? client).get<DataforseoLabsStatusResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/status',
        ...options
    });
};

/**
 * By calling this endpoint you will receive information about the DataForSEO Labs API tasks that returned an error within the past 7 days.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/errors/?bash'
 */
export const dataforseoLabsErrors = <ThrowOnError extends boolean = false>(options?: Options<DataforseoLabsErrorsData, ThrowOnError>) => {
    return (options?.client ?? client).post<DataforseoLabsErrorsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/errors',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Here you will find all the necessary information about filters that can be used with DataForSEO Labs API endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/filters/?bash'
 */
export const availableFilters = <ThrowOnError extends boolean = false>(options?: Options<AvailableFiltersData, ThrowOnError>) => {
    return (options?.client ?? client).get<AvailableFiltersResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/available_filters',
        ...options
    });
};

/**
 * ‌
 * Using this endpoint you can get the full list of locations and languages supported in DataForSEO Labs API. Available sources currently include Google, Bing, and Amazon search engines. However, you should note that Amazon and Bing locations and languages are currently limited to the US/English.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/locations_and_languages/?bash'
 */
export const dataforseoLabsLocationsAndLanguages = <ThrowOnError extends boolean = false>(options?: Options<DataforseoLabsLocationsAndLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<DataforseoLabsLocationsAndLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/locations_and_languages',
        ...options
    });
};

/**
 * We use Google product and service categories. This endpoint will provide you with the full list of available categories.
 * You can also download the CSV file by this link.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/categories_list/?bash'
 */
export const categories = <ThrowOnError extends boolean = false>(options?: Options<CategoriesData, ThrowOnError>) => {
    return (options?.client ?? client).get<CategoriesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/categories',
        ...options
    });
};

/**
 * ‌
 * By calling this endpoint, you will find obtain a list of dates available for setting in the first_date and second_date fields of the Domain Metrics by Categories endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/available_history/live/?bash'
 */
export const googleAvailableHistory = <ThrowOnError extends boolean = false>(options?: Options<GoogleAvailableHistoryData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAvailableHistoryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/available_history',
        ...options
    });
};

/**
 * ‌
 * The Keywords For Site endpoint will provide you with a list of keywords relevant to the target domain. Each keyword is supplied with relevant categories, search volume data for the last month, cost-per-click, competition, and search volume trend values for the past 12 months.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/keywords_for_site/live/?bash'
 */
export const googleKeywordsForSiteLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleKeywordsForSiteLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleKeywordsForSiteLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/keywords_for_site/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * The Related Keywords endpoint provides keywords appearing in the
 * "searches related to" SERP element
 * You can get up to 4680 keyword ideas by specifying the search depth. Each related keyword comes with the list of relevant product categories, search volume rate for the last month, search volume trend for the previous 12 months, as well as current cost-per-click and competition values.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/related_keywords/live/?bash'
 */
export const googleRelatedKeywordsLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleRelatedKeywordsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleRelatedKeywordsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/related_keywords/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * The Keyword Suggestions endpoint provides search queries that include the specified seed keyword.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/keyword_suggestions/live/?bash'
 */
export const googleKeywordSuggestionsLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleKeywordSuggestionsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleKeywordSuggestionsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/keyword_suggestions/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The Keyword Ideas endpoint provides search terms that are relevant to the product or service categories of the specified keywords. The algorithm selects the keywords which fall into the same categories as the seed keywords specified in a POST array.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/keyword_ideas/live/?bash'
 */
export const googleKeywordIdeasLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleKeywordIdeasLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleKeywordIdeasLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/keyword_ideas/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint will provide you with the Keyword Difficulty metric for a maximum of 1,000 keywords in one API request. Keyword Difficulty stands for the relative difficulty of ranking in the first top-10 organic results for the related keyword. Keyword Difficulty in DataForSEO API responses indicates the chance of getting in top-10 organic results for a keyword on a logarithmic scale from 0 to 100.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/bulk_keyword_difficulty/live/?bash'
 */
export const googleBulkKeywordDifficultyLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleBulkKeywordDifficultyLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleBulkKeywordDifficultyLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/bulk_keyword_difficulty/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with search intent data for up to 1,000 keywords. For each keyword that you specify when setting a task, the API will return the keyword’s search intent and intent probability. Besides the highest probable search intent, the results will also provide you with other likely search intent(s) and their probability.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/search_intent/live/?bash'
 */
export const googleSearchIntentLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleSearchIntentLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleSearchIntentLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/search_intent/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Using this endpoint you can get the full list of languages supported for the Google Categories for Keywords endpoint of DataForSEO Labs API.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/categories_for_keywords/languages/?bash'
 */
export const dataforseoLabsGoogleCategoriesForKeywordsLanguages = <ThrowOnError extends boolean = false>(options?: Options<DataforseoLabsGoogleCategoriesForKeywordsLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<DataforseoLabsGoogleCategoriesForKeywordsLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/categories_for_keywords/languages',
        ...options
    });
};

/**
 * ‌
 * This endpoint will provide you with Google product or service categories that include keywords the domain ranks for in search. Furthermore, you will obtain general rankings and traffic data for the keywords under a certain category.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/categories_for_domain/live/?bash'
 */
export const googleCategoriesForDomainLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleCategoriesForDomainLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleCategoriesForDomainLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/categories_for_domain/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint will provide you with Google product and service categories related for each specified keyword. You can indicate a maximum of 1,000 keywords in one API request.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/categories_for_keywords/live/?bash'
 */
export const googleCategoriesForKeywordsLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleCategoriesForKeywordsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleCategoriesForKeywordsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/categories_for_keywords/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of keywords relevant to the specified product categories. You will get the search volume rate for the last month, search volume trend for the previous 12 months, as well as current cost-per-click and competition values for each keyword.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/keywords_for_categories/live/?bash'
 */
export const googleKeywordsForCategoriesLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleKeywordsForCategoriesLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleKeywordsForCategoriesLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/keywords_for_categories/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with dynamics of change in metrics of domains relevant to the specified product and service categories. You will receive historical ranking data from Google SERPs, along with valuable current and historical domain metrics, such as ETV, impressions ETV, estimated paid traffic cost, the total count of SERPs that contain domains, and more.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_metrics_by_categories/live/?bash'
 */
export const googleDomainMetricsByCategoriesLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleDomainMetricsByCategoriesLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleDomainMetricsByCategoriesLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/domain_metrics_by_categories/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * The Top Searches endpoint of DataForSEO Labs API can provide you with over 7 billion keywords from the DataForSEO Keyword Database. Each keyword in the API response is provided with a set of relevant keyword data with Google Ads metrics, product categories, and Google SERP data.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/top_searches/live/?bash'
 */
export const googleTopSearchesLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleTopSearchesLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleTopSearchesLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/top_searches/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with Whois data enriched with ranking and traffic info from organic and paid search results. Using this endpoint you will be able to get all these data for the domains matching the parameters you specify in the request.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_whois_overview/live/?bash'
 */
export const googleDomainWhoisOverviewLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleDomainWhoisOverviewLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleDomainWhoisOverviewLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/domain_whois_overview/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the list of keywords that any domain or webpage is ranking for. You will also get SERP elements related to the keyword position, as well as impressions, monthly searches and other data relevant to the returned keywords.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/ranked_keywords/live/?bash'
 */
export const googleRankedKeywordsLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleRankedKeywordsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleRankedKeywordsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/ranked_keywords/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of domains ranking for the keywords you specify. You will also get SERP rankings, rating, estimated traffic volume, and visibility values the provided domains gain from the specified keywords.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/serp_competitors/live/?bash'
 */
export const googleSerpCompetitorsLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleSerpCompetitorsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleSerpCompetitorsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/serp_competitors/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a full overview of ranking and traffic data of the competitor domains from organic and paid search. In addition to that, you will get the metrics specific to the keywords both competitor domains and your domain rank for within the same SERP.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/competitors_domain/live/?bash'
 */
export const googleCompetitorsDomainLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleCompetitorsDomainLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleCompetitorsDomainLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/competitors_domain/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the keywords for which both specified domains rank within the same SERP. You will get search volume, competition, cost-per-click and impressions data on each intersecting keyword. Along with that, you will get data on the first and second domain’s SERP element discovered for this keyword, as well as the estimated traffic volume and cost of ad traffic. Domain Intersection endpoint supports organic, paid, local pack, and featured snippet results.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_intersection/live/?bash'
 */
export const googleDomainIntersectionLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleDomainIntersectionLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleDomainIntersectionLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/domain_intersection/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a list of subdomains of the specified domain, along with the ranking distribution across organic and paid search. In addition to that, you will also get the estimated traffic volume of subdomains based on search volume and impressions.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/subdomains/live/?bash'
 */
export const googleSubdomainsLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleSubdomainsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleSubdomainsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/subdomains/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/relevant_pages/live/?bash'
 */
export const googleRelevantPagesLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleRelevantPagesLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleRelevantPagesLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/relevant_pages/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with ranking and traffic data from organic and paid search for the specified domain. You will be able to review the domain ranking distribution in SERPs as well as estimated monthly traffic volume for both organic and paid results.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_rank_overview/live/?bash'
 */
export const googleDomainRankOverviewLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleDomainRankOverviewLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleDomainRankOverviewLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/domain_rank_overview/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with Google SERPs collected within the specified time frame. You will also receive a complete overview of featured snippets and other extra elements that were present within the specified dates. The data will allow you to analyze the dynamics of keyword rankings over time for the specified keyword and location.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_serps/live/?bash'
 */
export const googleHistoricalSerpsLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleHistoricalSerpsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleHistoricalSerpsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/historical_serps/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with historical data on rankings and traffic of the specified domain, such as domain ranking distribution in SERPs and estimated monthly traffic volume for both organic and paid results.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_rank_overview/live/?bash'
 */
export const googleHistoricalRankOverviewLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleHistoricalRankOverviewLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleHistoricalRankOverviewLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/historical_rank_overview/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the keywords for which specified pages rank within the same SERP. You will get search volume, competition, cost-per-click data on each intersecting keyword. Along with that, you will get data on SERP elements that specified pages rank for in search results, as well as the estimated traffic volume and cost of ad traffic. Page Intersection endpoint supports organic, paid, local pack and featured snippet results.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/page_intersection/live/?bash'
 */
export const googlePageIntersectionLive = <ThrowOnError extends boolean = false>(options?: Options<GooglePageIntersectionLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GooglePageIntersectionLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/page_intersection/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with estimated monthly traffic volumes for up to 1,000 domains, subdomains, or webpages. Along with organic search traffic estimations, you will also get separate values for paid search, featured snippet, and local pack results.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/bulk_traffic_estimation/live/?bash'
 */
export const googleBulkTrafficEstimationLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleBulkTrafficEstimationLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleBulkTrafficEstimationLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/bulk_traffic_estimation/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with historical monthly traffic volumes for up to 1,000 domains collected within the specified time range through October 2020. If you do not specify the range, data will be returned for the previous 12 months. Along with organic search traffic estimations, you will also get separate values for paid search, featured snippet, and local pack results.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_bulk_traffic_estimation/live/?bash'
 */
export const googleHistoricalBulkTrafficEstimationLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleHistoricalBulkTrafficEstimationLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleHistoricalBulkTrafficEstimationLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/historical_bulk_traffic_estimation/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint provides Google historical keyword data for specified keywords, including search volume, cost-per-click, competition values for paid search, monthly searches, and search volume trends. You can get historical keyword  data since August, 2021, depending on keywords along with location and language combination. You can find the list of supported locations and languages here.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_keyword_data/live/?bash'
 */
export const googleHistoricalKeywordDataLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleHistoricalKeywordDataLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleHistoricalKeywordDataLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/historical_keyword_data/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint provides Google keyword data for specified keywords. For each keyword, you will receive current cost-per-click, competition values for paid search, search volume, search intent, monthly searches, as well as SERP and backlink information. Additionally, you can obtain clickstream data, such as clickstream search volume, by specifying the include_clickstream_data parameter.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/keyword_overview/live/?bash'
 */
export const googleKeywordOverviewLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleKeywordOverviewLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleKeywordOverviewLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/keyword_overview/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with search volume values for a maximum of 1,000 keywords in one API request. Here search volume represents the approximate number of monthly searches for a keyword on Amazon. The returned results are specific to the keywords, location, and language parameters specified in a POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/amazon/bulk_search_volume/live/?bash'
 */
export const amazonBulkSearchVolumeLive = <ThrowOnError extends boolean = false>(options?: Options<AmazonBulkSearchVolumeLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<AmazonBulkSearchVolumeLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/amazon/bulk_search_volume/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * The Related Keywords endpoint provides keywords appearing in the  "Related Searches" section on Amazon.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/amazon/related_keywords/live/?bash'
 */
export const amazonRelatedKeywordsLive = <ThrowOnError extends boolean = false>(options?: Options<AmazonRelatedKeywordsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<AmazonRelatedKeywordsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/amazon/related_keywords/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of keywords the target product ranks for on Amazon. The returned results are specific to the asin specified in a POST request. Learn more about ASIN in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/amazon/ranked_keywords/live/?bash'
 */
export const amazonRankedKeywordsLive = <ThrowOnError extends boolean = false>(options?: Options<AmazonRankedKeywordsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<AmazonRankedKeywordsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/amazon/ranked_keywords/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with ranking data from organic and paid Amazon SERPs for the target products. The returned results are specific to the asins specified in a POST request. Learn more about ASIN in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/amazon/product_rank_overview/live/?bash'
 */
export const amazonProductRankOverviewLive = <ThrowOnError extends boolean = false>(options?: Options<AmazonProductRankOverviewLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<AmazonProductRankOverviewLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/amazon/product_rank_overview/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of products that intersect with a target asin in Amazon SERPs. The data can help you identify product competitors for any listing published on Amazon. The returned results are specific to the asin as well as the location and language parameters specified in a POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/amazon/product_competitors/live/?bash'
 */
export const amazonProductCompetitorsLive = <ThrowOnError extends boolean = false>(options?: Options<AmazonProductCompetitorsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<AmazonProductCompetitorsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/amazon/product_competitors/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of keywords for which the target products intersect in Amazon SERP. The returned results are specific to the asins specified in a POST request. Learn more about ASIN in this help center article.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/amazon/product_keyword_intersections/live/?bash'
 */
export const amazonProductKeywordIntersectionsLive = <ThrowOnError extends boolean = false>(options?: Options<AmazonProductKeywordIntersectionsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<AmazonProductKeywordIntersectionsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/amazon/product_keyword_intersections/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the Keyword Difficulty metric for a maximum of 1,000 keywords in one API request. Keyword Difficulty stands for the relative difficulty of ranking in the first top-10 organic results for the related keyword. Keyword Difficulty in DataForSEO API responses indicates the chance of getting in top-10 organic results for a keyword on a logarithmic scale from 0 to 100.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/bing/bulk_keyword_difficulty/live/?bash'
 */
export const bingBulkKeywordDifficultyLive = <ThrowOnError extends boolean = false>(options?: Options<BingBulkKeywordDifficultyLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingBulkKeywordDifficultyLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/bing/bulk_keyword_difficulty/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with estimated monthly traffic volumes for up to 1,000 domains, subdomains, and pages. Along with organic search traffic estimations, you will also get separate values for paid search, featured snippet, and local pack results.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/bing/bulk_traffic_estimation/live/?bash'
 */
export const bingBulkTrafficEstimationLive = <ThrowOnError extends boolean = false>(options?: Options<BingBulkTrafficEstimationLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingBulkTrafficEstimationLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/bing/bulk_traffic_estimation/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a full overview of ranking and traffic data of the competitor domains from organic and paid search. In addition to that, you will get the metrics specific to the keywords both competitor domains and your domain rank for within the same SERP.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/bing/competitors_domain/live/?bash'
 */
export const bingCompetitorsDomainLive = <ThrowOnError extends boolean = false>(options?: Options<BingCompetitorsDomainLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingCompetitorsDomainLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/bing/competitors_domain/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the keywords for which both specified domains rank within the same SERP. You will get data on each intersecting keyword. Along with that, you will get data on the first and second domain’s SERP element discovered for this keyword, as well as the estimated traffic volume and cost of ad traffic. Domain Intersection endpoint supports organic, paid, local pack, and featured snippet results.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/bing/domain_intersection/live/?bash'
 */
export const bingDomainIntersectionLive = <ThrowOnError extends boolean = false>(options?: Options<BingDomainIntersectionLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingDomainIntersectionLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/bing/domain_intersection/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with ranking and traffic data from Bing’s organic and paid search for the specified domain. You will be able to review the domain ranking distribution in SERPs as well as estimated monthly traffic volume for both organic and paid results.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/bing/domain_rank_overview/live/?bash'
 */
export const bingDomainRankOverviewLive = <ThrowOnError extends boolean = false>(options?: Options<BingDomainRankOverviewLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingDomainRankOverviewLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/bing/domain_rank_overview/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the keywords for which specified pages rank within the same Bing SERP.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/bing/page_intersection/live/?bash'
 */
export const bingPageIntersectionLive = <ThrowOnError extends boolean = false>(options?: Options<BingPageIntersectionLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingPageIntersectionLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/bing/page_intersection/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the list of keywords that any domain or webpage is ranking for. You will also get SERP elements related to the keyword position, as well as monthly searches and other data relevant to the returned keywords.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/bing/ranked_keywords/live/?bash'
 */
export const bingRankedKeywordsLive = <ThrowOnError extends boolean = false>(options?: Options<BingRankedKeywordsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingRankedKeywordsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/bing/ranked_keywords/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * The Related Keywords endpoint provides keywords appearing in the “searches related to” SERP element.
 * You can get up to 4680 keyword ideas by specifying the search depth. Each related keyword comes with search volume rate for the last month, search volume trend for the previous 12 months, as well as current cost-per-click and competition values.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/bing/related_keywords/live/?bash'
 */
export const bingRelatedKeywordsLive = <ThrowOnError extends boolean = false>(options?: Options<BingRelatedKeywordsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingRelatedKeywordsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/bing/related_keywords/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with rankings and traffic data for the web pages of the specified domain. You will be able to review each page’s ranking distribution and estimated monthly traffic volume from both organic and paid searches.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/bing/relevant_pages/live/?bash'
 */
export const bingRelevantPagesLive = <ThrowOnError extends boolean = false>(options?: Options<BingRelevantPagesLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingRelevantPagesLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/bing/relevant_pages/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of domain rankings for the keywords you specify. You will also get SERP rankings, rating, estimated traffic volume, and visibility values the provided domains gain from the specified keywords.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/bing/serp_competitors/live/?bash'
 */
export const bingSerpCompetitorsLive = <ThrowOnError extends boolean = false>(options?: Options<BingSerpCompetitorsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingSerpCompetitorsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/bing/serp_competitors/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a list of subdomains of the specified domain, along with the ranking distribution across organic and paid search. In addition to that, you will also get the estimated traffic volume of subdomains based on search volume.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/bing/subdomains/live/?bash'
 */
export const bingSubdomainsLive = <ThrowOnError extends boolean = false>(options?: Options<BingSubdomainsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingSubdomainsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/bing/subdomains/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with ranking metrics for up to 1000 Google Play applications.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/bulk_app_metrics/live/?bash'
 */
export const googleBulkAppMetricsLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleBulkAppMetricsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleBulkAppMetricsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/bulk_app_metrics/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of keywords for which the target app ranks on Google Play. You will obtain keyword data and discover the app’s ranking position for each returned keyword.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/keywords_for_app/live/?bash'
 */
export const googleKeywordsForAppLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleKeywordsForAppLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleKeywordsForAppLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/keywords_for_app/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of mobile applications that intersect with the target app for its ranking keywords on Google Play. You will obtain the IDs of competitor apps along with search volume and ranking data on competitor ranking keywords.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/app_competitors/live/?bash'
 */
export const googleAppCompetitorsLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleAppCompetitorsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAppCompetitorsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/app_competitors/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of keywords for which the mobile applications specified in the app_ids object rank within the same Google Play SERP.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/google/app_intersection/live/?bash'
 */
export const googleAppIntersectionLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleAppIntersectionLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAppIntersectionLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/google/app_intersection/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with ranking metrics for up to 1000 App Store applications.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/apple/bulk_app_metrics/live/?bash'
 */
export const appleBulkAppMetricsLive = <ThrowOnError extends boolean = false>(options?: Options<AppleBulkAppMetricsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppleBulkAppMetricsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/apple/bulk_app_metrics/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of keywords for which the target app ranks on App Store. You will obtain keyword data and discover the app’s ranking position for each returned keyword.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/apple/keywords_for_app/live/?bash'
 */
export const appleKeywordsForAppLive = <ThrowOnError extends boolean = false>(options?: Options<AppleKeywordsForAppLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppleKeywordsForAppLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/apple/keywords_for_app/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of mobile applications that intersect with the target app for its ranking keywords on App Store. You will obtain the IDs of competitor apps along with search volume and ranking data on competitor ranking keywords.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/apple/app_competitors/live/?bash'
 */
export const appleAppCompetitorsLive = <ThrowOnError extends boolean = false>(options?: Options<AppleAppCompetitorsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppleAppCompetitorsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/apple/app_competitors/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of keywords for which the mobile applications specified in the app_ids object rank within the same App Store SERP.
 * for more info please visit 'https://docs.dataforseo.com/v3/dataforseo_labs/apple/app_intersection/live/?bash'
 */
export const appleAppIntersectionLive = <ThrowOnError extends boolean = false>(options?: Options<AppleAppIntersectionLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppleAppIntersectionLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/dataforseo_labs/apple/app_intersection/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint is designed to provide you with the list of IDs and metadata of the completed Domain Analytics tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/id_list/?bash'
 */
export const domainAnalyticsIdList = <ThrowOnError extends boolean = false>(options?: Options<DomainAnalyticsIdListData, ThrowOnError>) => {
    return (options?.client ?? client).post<DomainAnalyticsIdListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/id_list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * By calling this endpoint you will receive information about the Domain Analytics API tasks that returned an error within the past 7 days.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/errors/?bash'
 */
export const domainAnalyticsErrors = <ThrowOnError extends boolean = false>(options?: Options<DomainAnalyticsErrorsData, ThrowOnError>) => {
    return (options?.client ?? client).post<DomainAnalyticsErrorsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/errors',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Here you will find all the necessary information about filters that can be used with Domain Analytics Technologies API endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/technologies/filters/?bash'
 */
export const technologiesAvailableFilters = <ThrowOnError extends boolean = false>(options?: Options<TechnologiesAvailableFiltersData, ThrowOnError>) => {
    return (options?.client ?? client).get<TechnologiesAvailableFiltersResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/technologies/available_filters',
        ...options
    });
};

/**
 * You will receive the list of locations by this API call.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/technologies/locations/?bash'
 */
export const domainAnalyticsTechnologiesLocations = <ThrowOnError extends boolean = false>(options?: Options<DomainAnalyticsTechnologiesLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<DomainAnalyticsTechnologiesLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/technologies/locations',
        ...options
    });
};

/**
 * You will receive the list of languages by calling this API.
 *
 * As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information specific to the set tasks.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/technologies/languages/?bash'
 */
export const domainAnalyticsTechnologiesLanguages = <ThrowOnError extends boolean = false>(options?: Options<DomainAnalyticsTechnologiesLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<DomainAnalyticsTechnologiesLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/technologies/languages',
        ...options
    });
};

/**
 * This endpoint will provide you with the full list of available technologies structured by technology groups and categories each particular technology belongs to.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/technologies/technologies/?bash'
 */
export const technologiesTechnologies = <ThrowOnError extends boolean = false>(options?: Options<TechnologiesTechnologiesData, ThrowOnError>) => {
    return (options?.client ?? client).get<TechnologiesTechnologiesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/technologies/technologies',
        ...options
    });
};

/**
 * ‌‌
 * The Aggregation Technologies endpoint will provide you with a list of the most popular technologies websites use alongside the technologies you specify. Alternatively, you can specify technology categories or groups to obtain wider stats.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/technologies/aggregation_technologies/live/?bash'
 */
export const technologiesAggregationTechnologiesLive = <ThrowOnError extends boolean = false>(options?: Options<TechnologiesAggregationTechnologiesLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<TechnologiesAggregationTechnologiesLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/technologies/aggregation_technologies/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * The Technologies Summary endpoint will provide you with the number of domains across different countries and languages that use the specified technology names, technology groups, or technology categories.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/technologies/technologies_summary/live/?bash'
 */
export const technologiesTechnologiesSummaryLive = <ThrowOnError extends boolean = false>(options?: Options<TechnologiesTechnologiesSummaryLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<TechnologiesTechnologiesSummaryLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/technologies/technologies_summary/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * The Technology Stats endpoint will provide you with historical data on the number of domains across different countries and languages that use the specified technology.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/technologies/technology_stats/live/?bash'
 */
export const technologiesTechnologyStatsLive = <ThrowOnError extends boolean = false>(options?: Options<TechnologiesTechnologyStatsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<TechnologiesTechnologyStatsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/technologies/technology_stats/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint provides domains based on the technology they use. In addition to the list of domains, you will also get their technology profiles, the country and language they belong to, and other related data.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/technologies/domains_by_technology/live/?bash'
 */
export const technologiesDomainsByTechnologyLive = <ThrowOnError extends boolean = false>(options?: Options<TechnologiesDomainsByTechnologyLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<TechnologiesDomainsByTechnologyLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/technologies/domains_by_technology/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint provides domains based on the HTML terms they use on their homepage. In addition to the list of domains, you will also get their technology profiles, the country and language they belong to, and other related data.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/technologies/domains_by_html_terms/live/?bash'
 */
export const technologiesDomainsByHtmlTermsLive = <ThrowOnError extends boolean = false>(options?: Options<TechnologiesDomainsByHtmlTermsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<TechnologiesDomainsByHtmlTermsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/technologies/domains_by_html_terms/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Using this endpoint you will get a list of technologies used in a particular domain.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/technologies/domain_technologies/live/?bash'
 */
export const technologiesDomainTechnologiesLive = <ThrowOnError extends boolean = false>(options?: Options<TechnologiesDomainTechnologiesLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<TechnologiesDomainTechnologiesLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/technologies/domain_technologies/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Here you will find all the necessary information about filters that can be used with Domain Analytics Whois API.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/whois/filters/?bash'
 */
export const whoisAvailableFilters = <ThrowOnError extends boolean = false>(options?: Options<WhoisAvailableFiltersData, ThrowOnError>) => {
    return (options?.client ?? client).get<WhoisAvailableFiltersResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/whois/available_filters',
        ...options
    });
};

/**
 * ‌
 * This endpoint will provide you with Whois data enriched with backlink stats, and ranking and traffic info from organic and paid search results. Using this endpoint you will be able to get all these data for the domains matching the parameters you specify in the request.
 * for more info please visit 'https://docs.dataforseo.com/v3/domain_analytics/whois/overview/live/?bash'
 */
export const whoisOverviewLive = <ThrowOnError extends boolean = false>(options?: Options<WhoisOverviewLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<WhoisOverviewLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/domain_analytics/whois/overview/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint is designed to provide you with the list of IDs and metadata of the completed Keywords Data tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/id_list/?bash'
 */
export const keywordsDataIdList = <ThrowOnError extends boolean = false>(options?: Options<KeywordsDataIdListData, ThrowOnError>) => {
    return (options?.client ?? client).post<KeywordsDataIdListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/id_list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * By calling this endpoint you will receive information about the Keywords Data API tasks that returned an error within the past 7 days.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/errors/?bash'
 */
export const keywordsDataErrors = <ThrowOnError extends boolean = false>(options?: Options<KeywordsDataErrorsData, ThrowOnError>) => {
    return (options?.client ?? client).post<KeywordsDataErrorsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/errors',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * By calling this endpoint, you will know if Google updated keyword data for the previous month. Generally, Google updates keyword data in the middle of the month. So, if Google updated its data in October, you would be able to see the actual search volume, cost-per-click, competition, and other metrics for September. If Google didn’t update its data in October, the latest information would be available for August.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/status/?bash'
 */
export const googleAdsStatus = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsStatusData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAdsStatusResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/status',
        ...options
    });
};

/**
 * ‌
 * We use Google Geographical Targeting. You can refer to Google Ads Target Types page to review the full list of possible location types. With Keywords Data API, you can select any location type supported by Google, except for “Okrug”.
 * Postal Codes can be used to set a task, albeit API response will not return data for such tasks.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/locations/?bash'
 */
export const keywordsDataGoogleAdsLocations = <ThrowOnError extends boolean = false>(options?: Options<KeywordsDataGoogleAdsLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<KeywordsDataGoogleAdsLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/locations',
        ...options
    });
};

/**
 * ‌
 * We use Google Geographical Targeting. You can refer to Google Ads Target Types page to review the full list of possible location types. With Keywords Data API, you can select any location type supported by Google, except for “Okrug”.
 * Postal Codes can be used to set a task, albeit API response will not return data for such tasks.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/locations/?bash'
 */
export const keywordsDataGoogleAdsLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<KeywordsDataGoogleAdsLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<KeywordsDataGoogleAdsLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/locations/{country}',
        ...options
    });
};

/**
 * By calling this API you will receive the list of languages supported by Keywords Data API.
 * ‌
 * ‌‌As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information about available languages.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/languages/?bash'
 */
export const keywordsDataGoogleAdsLanguages = <ThrowOnError extends boolean = false>(options?: Options<KeywordsDataGoogleAdsLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<KeywordsDataGoogleAdsLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/languages',
        ...options
    });
};

/**
 * ‌
 * Note that Google Ads Keywords Data API is based on the latest version of the Google Ads API that has replaced legacy Google AdWords API. If you’re using DataForSEO Google AdWords API, you need to upgrade to DataForSEO Google Ads API.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/search_volume/task_post/?bash'
 */
export const googleAdsSearchVolumeTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsSearchVolumeTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAdsSearchVolumeTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/search_volume/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to provide you with a list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/search_volume/tasks_ready/?bash'
 */
export const googleAdsSearchVolumeTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsSearchVolumeTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAdsSearchVolumeTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/search_volume/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * Note that Google Ads Keywords Data API is based on the latest version of the Google Ads API that has replaced legacy Google AdWords API. If you’re using DataForSEO Google AdWords API, you need to upgrade to DataForSEO Google Ads API.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/search_volume/task_get/?bash'
 */
export const googleAdsSearchVolumeTaskGet = <ThrowOnError extends boolean = false>(options: Options<GoogleAdsSearchVolumeTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAdsSearchVolumeTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/search_volume/task_get/{id}',
        ...options
    });
};

/**
 * ‌
 * Note that Google Ads Keywords Data API is based on the latest version of the Google Ads API that has replaced legacy Google AdWords API. If you’re using DataForSEO Google AdWords API, you need to upgrade to DataForSEO Google Ads API.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/search_volume/live/?bash'
 */
export const googleAdsSearchVolumeLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsSearchVolumeLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAdsSearchVolumeLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/search_volume/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/keywords_for_site/task_post/?bash'
 */
export const googleAdsKeywordsForSiteTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsKeywordsForSiteTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAdsKeywordsForSiteTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/keywords_for_site/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to provide you with a list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/keywords_for_site/tasks_ready/?bash'
 */
export const googleAdsKeywordsForSiteTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsKeywordsForSiteTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAdsKeywordsForSiteTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/keywords_for_site/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * Note that Google Ads Keywords Data API is based on the latest version of the Google Ads API that has replaced legacy Google AdWords API. If you’re using DataForSEO Google AdWords API, you need to upgrade to DataForSEO Google Ads API.
 * ‌‌
 * This endpoint will provide you with a list of keywords relevant to the specified domain along with their bids, search volumes for the last month, search volume trends for the last year (for estimating search volume dynamics), and competition levels.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/keywords_for_site/task_get/?bash'
 */
export const googleAdsKeywordsForSiteTaskGet = <ThrowOnError extends boolean = false>(options: Options<GoogleAdsKeywordsForSiteTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAdsKeywordsForSiteTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/keywords_for_site/task_get/{id}',
        ...options
    });
};

/**
 * Note that Google Ads Keywords Data API is based on the latest version of the Google Ads API that has replaced legacy Google AdWords API. If you’re using DataForSEO Google AdWords API, you need to upgrade to DataForSEO Google Ads API.
 * ‌‌
 * This endpoint will provide you with a list of keywords relevant to the specified domain along with their bids, search volumes for the last month, search volume trends for the last year (for estimating search volume dynamics), and competition levels.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/keywords_for_site/live/?bash'
 */
export const googleAdsKeywordsForSiteLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsKeywordsForSiteLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAdsKeywordsForSiteLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/keywords_for_site/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Note that Google Ads Keywords Data API is based on the latest version of the Google Ads API that has replaced legacy Google AdWords API. If you’re using DataForSEO Google AdWords API, you need to upgrade to DataForSEO Google Ads API.
 * ‌‌
 * This endpoint will provide relevant keywords for the specified terms. Set up to 20 keywords in the keywords array and get keyword suggestions from Google Ads. You can get up to 20,000 keyword suggestions with all essential keyword data in response to one request.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/keywords_for_keywords/task_post/?bash'
 */
export const googleAdsKeywordsForKeywordsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsKeywordsForKeywordsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAdsKeywordsForKeywordsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/keywords_for_keywords/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to provide you with a list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/keywords_for_keywords/tasks_ready/?bash'
 */
export const googleAdsKeywordsForKeywordsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsKeywordsForKeywordsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAdsKeywordsForKeywordsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/keywords_for_keywords/tasks_ready',
        ...options
    });
};

/**
 * Note that Google Ads Keywords Data API is based on the latest version of the Google Ads API that has replaced legacy Google AdWords API. If you’re using DataForSEO Google AdWords API, you need to upgrade to DataForSEO Google Ads API.
 * ‌
 * This endpoint will select relevant keywords for the specified terms. Set up to 20 keywords and get the results, which are suggested by Google Ads for your query.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/keywords_for_keywords/task_get/?bash'
 */
export const googleAdsKeywordsForKeywordsTaskGet = <ThrowOnError extends boolean = false>(options: Options<GoogleAdsKeywordsForKeywordsTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAdsKeywordsForKeywordsTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/keywords_for_keywords/task_get/{id}',
        ...options
    });
};

/**
 * Note that Google Ads Keywords Data API is based on the latest version of the Google Ads API that has replaced legacy Google AdWords API. If you’re using DataForSEO Google AdWords API, you need to upgrade to DataForSEO Google Ads API.
 * ‌‌
 * This endpoint will provide relevant keywords for the specified terms. Set up to 20 keywords in the keywords array and get keyword suggestions from Google Ads.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/keywords_for_keywords/live/?bash'
 */
export const googleAdsKeywordsForKeywordsLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsKeywordsForKeywordsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAdsKeywordsForKeywordsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/keywords_for_keywords/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/ad_traffic_by_keywords/task_post/?bash'
 */
export const googleAdsAdTrafficByKeywordsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsAdTrafficByKeywordsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAdsAdTrafficByKeywordsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/ad_traffic_by_keywords/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to provide you with a list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/ad_traffic_by_keywords/tasks_ready/?bash'
 */
export const googleAdsAdTrafficByKeywordsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsAdTrafficByKeywordsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAdsAdTrafficByKeywordsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/ad_traffic_by_keywords/tasks_ready',
        ...options
    });
};

/**
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/ad_traffic_by_keywords/task_get/?bash'
 */
export const googleAdsAdTrafficByKeywordsTaskGet = <ThrowOnError extends boolean = false>(options: Options<GoogleAdsAdTrafficByKeywordsTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAdsAdTrafficByKeywordsTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/ad_traffic_by_keywords/task_get/{id}',
        ...options
    });
};

/**
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_ads/ad_traffic_by_keywords/live/?bash'
 */
export const googleAdsAdTrafficByKeywordsLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleAdsAdTrafficByKeywordsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAdsAdTrafficByKeywordsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_ads/ad_traffic_by_keywords/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_trends/locations/?bash'
 */
export const keywordsDataGoogleTrendsLocations = <ThrowOnError extends boolean = false>(options?: Options<KeywordsDataGoogleTrendsLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<KeywordsDataGoogleTrendsLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_trends/locations',
        ...options
    });
};

/**
 * ‌
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_trends/locations/?bash'
 */
export const keywordsDataGoogleTrendsLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<KeywordsDataGoogleTrendsLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<KeywordsDataGoogleTrendsLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_trends/locations/{country}',
        ...options
    });
};

/**
 * By calling this API you will receive the list of languages supported by Google Trends API.
 * ‌
 * ‌‌As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information about available languages.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_trends/languages/?bash'
 */
export const keywordsDataGoogleTrendsLanguages = <ThrowOnError extends boolean = false>(options?: Options<KeywordsDataGoogleTrendsLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<KeywordsDataGoogleTrendsLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_trends/languages',
        ...options
    });
};

/**
 * By calling this API you will receive the list of categories supported by Google Trends API.
 * ‌
 * ‌‌As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information about available categories.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_trends/categories/?bash'
 */
export const googleTrendsCategories = <ThrowOnError extends boolean = false>(options?: Options<GoogleTrendsCategoriesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleTrendsCategoriesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_trends/categories',
        ...options
    });
};

/**
 * ‌
 * This endpoint will provide you with the keyword popularity data from the ‘Explore’ feature of Google Trends. You can check keyword trends for Google Search, Google News, Google Images, Google Shopping, and YouTube.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_trends/explore/task_post/?bash'
 */
export const googleTrendsExploreTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleTrendsExploreTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleTrendsExploreTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_trends/explore/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to provide you with a list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_trends/explore/tasks_ready/?bash'
 */
export const googleTrendsExploreTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleTrendsExploreTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleTrendsExploreTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_trends/explore/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_trends/explore/task_get/?bash'
 */
export const googleTrendsExploreTaskGet = <ThrowOnError extends boolean = false>(options: Options<GoogleTrendsExploreTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleTrendsExploreTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_trends/explore/task_get/{id}',
        ...options
    });
};

/**
 * This endpoint will provide you with the keyword popularity data from the ‘Explore’ feature of Google Trends. You can check keyword trends for Google Search, Google News, Google Images, Google Shopping, and YouTube.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/google_trends/explore/live/?bash'
 */
export const googleTrendsExploreLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleTrendsExploreLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleTrendsExploreLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/google_trends/explore/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of DataForSEO Trends locations by calling this API. You can filter the list of locations by country when setting a task. Please note that the minimum geographic scope supported for the DataForSEO Trends API is country level.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/dataforseo_trends/locations/?bash'
 */
export const keywordsDataDataforseoTrendsLocations = <ThrowOnError extends boolean = false>(options?: Options<KeywordsDataDataforseoTrendsLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<KeywordsDataDataforseoTrendsLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/dataforseo_trends/locations',
        ...options
    });
};

/**
 * You will receive the list of DataForSEO Trends locations by calling this API. You can filter the list of locations by country when setting a task. Please note that the minimum geographic scope supported for the DataForSEO Trends API is country level.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/dataforseo_trends/locations/?bash'
 */
export const keywordsDataDataforseoTrendsLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<KeywordsDataDataforseoTrendsLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<KeywordsDataDataforseoTrendsLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/dataforseo_trends/locations/{country}',
        ...options
    });
};

/**
 * This endpoint will provide you with the keyword popularity data from DataForSEO Trends. You can check keyword trends for Google Search, Google News, and Google Shopping.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/dataforseo_trends/explore/live/?bash'
 */
export const dataforseoTrendsExploreLive = <ThrowOnError extends boolean = false>(options?: Options<DataforseoTrendsExploreLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<DataforseoTrendsExploreLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/dataforseo_trends/explore/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint will provide you with location-specific keyword popularity data from DataForSEO Trends. You can check keyword trends for Google Search, Google News, and Google Shopping.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/dataforseo_trends/subregion_interests/live/?bash'
 */
export const dataforseoTrendsSubregionInterestsLive = <ThrowOnError extends boolean = false>(options?: Options<DataforseoTrendsSubregionInterestsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<DataforseoTrendsSubregionInterestsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/dataforseo_trends/subregion_interests/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint will provide you with the demographic breakdown (by age and gender) of keyword popularity per each specified term based on DataForSEO Trends data. You can check keyword trends for Google Search, Google News, and Google Shopping.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/dataforseo_trends/demography/live/?bash'
 */
export const dataforseoTrendsDemographyLive = <ThrowOnError extends boolean = false>(options?: Options<DataforseoTrendsDemographyLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<DataforseoTrendsDemographyLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/dataforseo_trends/demography/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint will provide you with the keyword popularity data from DataForSEO Trends. In addition to keyword popularity rate over the given time range, you will get location-specific keyword popularity data, and a demographic breakdown of keyword popularity per each specified term along with comparative values.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/dataforseo_trends/merged_data/live/?bash'
 */
export const dataforseoTrendsMergedDataLive = <ThrowOnError extends boolean = false>(options?: Options<DataforseoTrendsMergedDataLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<DataforseoTrendsMergedDataLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/dataforseo_trends/merged_data/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * By calling this API you will receive the list of locations supported in Bing Ads API.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/locations/?bash'
 */
export const keywordsDataBingLocations = <ThrowOnError extends boolean = false>(options?: Options<KeywordsDataBingLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<KeywordsDataBingLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/locations',
        ...options
    });
};

/**
 * By calling this API you will receive the list of languages supported by Bing Ads API.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/languages/?bash'
 */
export const keywordsDataBingLanguages = <ThrowOnError extends boolean = false>(options?: Options<KeywordsDataBingLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<KeywordsDataBingLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/languages',
        ...options
    });
};

/**
 * ‌
 * This endpoint will provide you with search volume data for the last month, search volume trend for up to 24 past months (that will let you estimate search volume dynamics), current cost-per-click and competition values for paid search.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/search_volume/task_post/?bash'
 */
export const bingSearchVolumeTaskPost = <ThrowOnError extends boolean = false>(options?: Options<BingSearchVolumeTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingSearchVolumeTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/search_volume/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/search_volume/tasks_ready/?bash'
 */
export const bingSearchVolumeTasksReady = <ThrowOnError extends boolean = false>(options?: Options<BingSearchVolumeTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<BingSearchVolumeTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/search_volume/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/search_volume/task_get/?bash'
 */
export const bingSearchVolumeTaskGet = <ThrowOnError extends boolean = false>(options: Options<BingSearchVolumeTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<BingSearchVolumeTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/search_volume/task_get/{id}',
        ...options
    });
};

/**
 * ‌This endpoint will provide you with search volume data for the last month, search volume trend for up to 24 past months (that will let you estimate search volume dynamics), current cost-per-click and competition values for paid search.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/search_volume/live/?bash'
 */
export const bingSearchVolumeLive = <ThrowOnError extends boolean = false>(options?: Options<BingSearchVolumeLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingSearchVolumeLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/search_volume/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * By calling this API you will receive the list of job functions with job_function_id supported by Bing Ads Audience Estimation endpoint.
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/keywords_data/bing/audience_estimation/job_functions/?bash'
 */
export const bingAudienceEstimationJobFunctions = <ThrowOnError extends boolean = false>(options?: Options<BingAudienceEstimationJobFunctionsData, ThrowOnError>) => {
    return (options?.client ?? client).get<BingAudienceEstimationJobFunctionsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/audience_estimation/job_functions',
        ...options
    });
};

/**
 * By calling this API you will receive the list of industries with industry_id supported by Bing Ads Audience Estimation endpoint.
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/keywords_data/bing/audience_estimation/industries/?bash'
 */
export const bingAudienceEstimationIndustries = <ThrowOnError extends boolean = false>(options?: Options<BingAudienceEstimationIndustriesData, ThrowOnError>) => {
    return (options?.client ?? client).get<BingAudienceEstimationIndustriesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/audience_estimation/industries',
        ...options
    });
};

/**
 * ‌
 * This endpoint provides estimated audience size for an ad campaign based on specified targeting criteria. It returns data on the total estimated audience, such as suggested bid and budget for an ad campaign and estimated engagement metrics.
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/keywords_data/bing/audience_estimation/task_post/?bash'
 */
export const bingAudienceEstimationTaskPost = <ThrowOnError extends boolean = false>(options?: Options<BingAudienceEstimationTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingAudienceEstimationTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/audience_estimation/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/keywords_data/bing/audience_estimation/tasks_ready/?bash'
 */
export const bingAudienceEstimationTasksReady = <ThrowOnError extends boolean = false>(options?: Options<BingAudienceEstimationTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<BingAudienceEstimationTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/audience_estimation/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/keywords_data/bing/audience_estimation/task_get/?bash'
 */
export const bingAudienceEstimationTaskGet = <ThrowOnError extends boolean = false>(options: Options<BingAudienceEstimationTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<BingAudienceEstimationTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/audience_estimation/task_get/{id}',
        ...options
    });
};

/**
 * This endpoint provides estimated audience size for an ad campaign based on specified targeting criteria. It returns data on the total estimated audience, such as suggested bid and budget for an ad campaign and estimated engagement metrics.
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/keywords_data/bing/audience_estimation/live/?bash'
 */
export const bingAudienceEstimationLive = <ThrowOnError extends boolean = false>(options?: Options<BingAudienceEstimationLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingAudienceEstimationLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/audience_estimation/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌This endpoint will provide you with a list of keywords relevant to the specified website along with their search volume for the last month, search volume trend for up to 24 past months (for estimating search volume dynamics), current cost-per-click and competition level for paid search. The maximum number of returned keywords is 3000.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/keywords_for_site/task_post/?bash'
 */
export const bingKeywordsForSiteTaskPost = <ThrowOnError extends boolean = false>(options?: Options<BingKeywordsForSiteTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingKeywordsForSiteTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/keywords_for_site/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/keywords_for_site/tasks_ready/?bash'
 */
export const bingKeywordsForSiteTasksReady = <ThrowOnError extends boolean = false>(options?: Options<BingKeywordsForSiteTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<BingKeywordsForSiteTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/keywords_for_site/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of keywords relevant to the specified website along with their search volume for the last month, search volume trend for the last year (for estimating search volume dynamics), current cost-per-click and competition level for paid search. The maximum number of returned keywords is 3000.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/keywords_for_site/task_get/?bash'
 */
export const bingKeywordsForSiteTaskGet = <ThrowOnError extends boolean = false>(options: Options<BingKeywordsForSiteTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<BingKeywordsForSiteTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/keywords_for_site/task_get/{id}',
        ...options
    });
};

/**
 * ‌This endpoint will provide you with a list of keywords relevant to the specified URL along with their search volume for the last month, search volume trend for up to 24 past months (for estimating search volume dynamics), current cost-per-click and competition values for paid search. The maximum number of returned keywords is 3000.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/keywords_for_site/live/?bash'
 */
export const bingKeywordsForSiteLive = <ThrowOnError extends boolean = false>(options?: Options<BingKeywordsForSiteLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingKeywordsForSiteLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/keywords_for_site/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint will select relevant keywords for the specified terms. Set up to 200 keywords and get the results, which are suggested by Bing Ads for your query. You can get up to 3000 keyword suggestions using this function.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/keywords_for_keywords/task_post/?bash'
 */
export const bingKeywordsForKeywordsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<BingKeywordsForKeywordsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingKeywordsForKeywordsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/keywords_for_keywords/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/keywords_for_keywords/tasks_ready/?bash'
 */
export const bingKeywordsForKeywordsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<BingKeywordsForKeywordsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<BingKeywordsForKeywordsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/keywords_for_keywords/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * This endpoint will select relevant keywords for the specified terms. Set up to 200 keywords and get the results, which are suggested by Bing Ads for your query. You can get up to 3000 keyword suggestions using this function.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/keywords_for_keywords/task_get/?bash'
 */
export const bingKeywordsForKeywordsTaskGet = <ThrowOnError extends boolean = false>(options: Options<BingKeywordsForKeywordsTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<BingKeywordsForKeywordsTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/keywords_for_keywords/task_get/{id}',
        ...options
    });
};

/**
 * ‌
 * This endpoint will select the relevant keywords for the specified ones. Set up to 200 keywords and get the results, which are suggested by Bing Ads for your query. You can get up to 3000 keyword suggestions using this function.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/keywords_for_keywords/live/?bash'
 */
export const bingKeywordsForKeywordsLive = <ThrowOnError extends boolean = false>(options?: Options<BingKeywordsForKeywordsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingKeywordsForKeywordsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/keywords_for_keywords/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Using this endpoint you can get the full list of locations and languages supported in Keyword Performance endpoints of Bing Keywords Data API.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/keyword_performance/locations_and_languages/?bash'
 */
export const keywordsDataBingKeywordPerformanceLocationsAndLanguages = <ThrowOnError extends boolean = false>(options?: Options<KeywordsDataBingKeywordPerformanceLocationsAndLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<KeywordsDataBingKeywordPerformanceLocationsAndLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/keyword_performance/locations_and_languages',
        ...options
    });
};

/**
 * ‌
 * You can receive a set of keyword performance stats for a group of keywords depending on the specified match type, location and language parameters. Ad position, clicks, impressions, and other keyword metrics are aggregated for the last month for one or all of the following device types: mobile, desktop, tablet.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/keyword_performance/task_post/?bash'
 */
export const bingKeywordPerformanceTaskPost = <ThrowOnError extends boolean = false>(options?: Options<BingKeywordPerformanceTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingKeywordPerformanceTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/keyword_performance/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/keyword_performance/tasks_ready/?bash'
 */
export const bingKeywordPerformanceTasksReady = <ThrowOnError extends boolean = false>(options?: Options<BingKeywordPerformanceTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<BingKeywordPerformanceTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/keyword_performance/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * You can receive a set of keyword performance stats for a group of keywords depending on the specified match type, location and language parameters. Ad position, clicks, impressions, and other keyword metrics are aggregated for the last month for one or all of the following device types: mobile, desktop, tablet.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/keyword_performance/task_get/?bash'
 */
export const bingKeywordPerformanceTaskGet = <ThrowOnError extends boolean = false>(options: Options<BingKeywordPerformanceTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<BingKeywordPerformanceTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/keyword_performance/task_get/{id}',
        ...options
    });
};

/**
 * ‌
 * You can receive a set of keyword performance stats for a group of keywords depending on the specified match type, location and language parameters. Ad position, clicks, impressions, and other keyword metrics are aggregated for the last month for one or all of the following device types: mobile, desktop, tablet.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/keyword_performance/live/?bash'
 */
export const bingKeywordPerformanceLive = <ThrowOnError extends boolean = false>(options?: Options<BingKeywordPerformanceLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingKeywordPerformanceLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/keyword_performance/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * By calling this API you will receive the list of locations and languages supported by Bing ‘Search Volume History’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/search_volume_history/locations_and_languages/?bash'
 */
export const keywordsDataBingSearchVolumeHistoryLocationsAndLanguages = <ThrowOnError extends boolean = false>(options?: Options<KeywordsDataBingSearchVolumeHistoryLocationsAndLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<KeywordsDataBingSearchVolumeHistoryLocationsAndLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/search_volume_history/locations_and_languages',
        ...options
    });
};

/**
 * ‌
 * This endpoint will provide you with historical search volume data for up to 1000 keywords in one request. You can get search volume for keywords in monthly, weekly, or daily format and specify the device type.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/search_volume_history/task_post/?bash'
 */
export const bingSearchVolumeHistoryTaskPost = <ThrowOnError extends boolean = false>(options?: Options<BingSearchVolumeHistoryTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingSearchVolumeHistoryTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/search_volume_history/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/search_volume_history/tasks_ready/?bash'
 */
export const bingSearchVolumeHistoryTasksReady = <ThrowOnError extends boolean = false>(options?: Options<BingSearchVolumeHistoryTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<BingSearchVolumeHistoryTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/search_volume_history/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/search_volume_history/task_get/?bash'
 */
export const bingSearchVolumeHistoryTaskGet = <ThrowOnError extends boolean = false>(options: Options<BingSearchVolumeHistoryTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<BingSearchVolumeHistoryTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/search_volume_history/task_get/{id}',
        ...options
    });
};

/**
 * ‌This endpoint will provide you with historical search volume data for up to 1000 keywords in one request. You can get search volume for keywords in monthly, weekly, or daily format and specify the device type.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/bing/search_volume_history/live/?bash'
 */
export const bingSearchVolumeHistoryLive = <ThrowOnError extends boolean = false>(options?: Options<BingSearchVolumeHistoryLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BingSearchVolumeHistoryLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/bing/search_volume_history/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Using this endpoint you can get the full list of locations and languages supported in DataForSEO Clickstream Data API.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/clickstream_data/locations_and_languages/?bash'
 */
export const keywordsDataClickstreamDataLocationsAndLanguages = <ThrowOnError extends boolean = false>(options?: Options<KeywordsDataClickstreamDataLocationsAndLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<KeywordsDataClickstreamDataLocationsAndLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/clickstream_data/locations_and_languages',
        ...options
    });
};

/**
 * ‌
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/clickstream_data/dataforseo_search_volume/live/?bash'
 */
export const clickstreamDataDataforseoSearchVolumeLive = <ThrowOnError extends boolean = false>(options?: Options<ClickstreamDataDataforseoSearchVolumeLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<ClickstreamDataDataforseoSearchVolumeLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/clickstream_data/dataforseo_search_volume/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * The Clickstream Global Search Volume endpoint of DataForSEO Keywords Data API is designed to provide clickstream-based search volume data for up to 1000 keywords in a single Live request. What’s more, it offers geographical distribution of clickstream search volume values across all available locations.
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/clickstream_data/global_search_volume/live/?bash'
 */
export const clickstreamDataGlobalSearchVolumeLive = <ThrowOnError extends boolean = false>(options?: Options<ClickstreamDataGlobalSearchVolumeLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<ClickstreamDataGlobalSearchVolumeLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/clickstream_data/global_search_volume/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * The Bulk Clickstream Search Volume endpoint of DataForSEO Keywords Data API is designed to provide clickstream-based search volume data for up to 1000 keywords in a single Live request. What’s more, it offers historical search volume values for up to 12 months (depending on keywords, location, and language parameters).
 * for more info please visit 'https://docs.dataforseo.com/v3/keywords_data/clickstream_data/bulk_search_volume/live/?bash'
 */
export const clickstreamDataBulkSearchVolumeLive = <ThrowOnError extends boolean = false>(options?: Options<ClickstreamDataBulkSearchVolumeLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<ClickstreamDataBulkSearchVolumeLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/keywords_data/clickstream_data/bulk_search_volume/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint is designed to provide you with the list of IDs and metadata of the completed Backlinks tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/id_list/?bash'
 */
export const backlinksIdList = <ThrowOnError extends boolean = false>(options?: Options<BacklinksIdListData, ThrowOnError>) => {
    return (options?.client ?? client).post<BacklinksIdListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/id_list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * By calling this endpoint you will receive information about the Backlinks API tasks that returned an error within the past 7 days.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/errors/?bash'
 */
export const backlinksErrors = <ThrowOnError extends boolean = false>(options?: Options<BacklinksErrorsData, ThrowOnError>) => {
    return (options?.client ?? client).post<BacklinksErrorsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/errors',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Backlinks API features plenty of parameters that support custom filtration. By applying filters to your POST requests, you will be able to effortlessly extract data that matches your requirements. Note that we do not charge any fees for using data filtering or sorting rules.
 * ‌‌
 * Here you will find all the necessary information about filters that can be used with DataForSEO Backlinks API endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/filters/?bash'
 */
export const backlinksAvailableFilters = <ThrowOnError extends boolean = false>(options?: Options<BacklinksAvailableFiltersData, ThrowOnError>) => {
    return (options?.client ?? client).get<BacklinksAvailableFiltersResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/available_filters',
        ...options
    });
};

/**
 * ‌
 * This endpoint will provide you with the total number of backlinks, domains, and pages our database contains for the moment when you make a request. You will also get stats for the last 12 months.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/index/?bash'
 */
export const index = <ThrowOnError extends boolean = false>(options?: Options<IndexData, ThrowOnError>) => {
    return (options?.client ?? client).get<IndexResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/index',
        ...options
    });
};

/**
 * ‌
 * This endpoint will provide you with an overview of backlinks data available for a given domain, subdomain, or webpage.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/summary/live/?bash'
 */
export const summaryLive = <ThrowOnError extends boolean = false>(options?: Options<SummaryLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<SummaryLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/summary/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with historical backlinks data back to the beginning of 2019. You can receive the number of backlinks a given domain had in a specific time period, the number of new & lost backlinks, referring domains, and more.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/history/live/?bash'
 */
export const historyLive = <ThrowOnError extends boolean = false>(options?: Options<HistoryLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<HistoryLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/history/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a list of backlinks and relevant data for the specified domain, subdomain, or webpage.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/backlinks/live/?bash'
 */
export const backlinksLive = <ThrowOnError extends boolean = false>(options?: Options<BacklinksLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BacklinksLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/backlinks/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a detailed overview of anchors used when linking to the specified website with relevant backlink data for each of them.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/anchors/live/?bash'
 */
export const anchorsLive = <ThrowOnError extends boolean = false>(options?: Options<AnchorsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<AnchorsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/anchors/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a detailed overview of domain pages with backlink data for each page.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/domain_pages/live/?bash'
 */
export const domainPagesLive = <ThrowOnError extends boolean = false>(options?: Options<DomainPagesLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<DomainPagesLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/domain_pages/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint will provide you with detailed summary data on all backlinks and related metrics for each page of the target domain or subdomain you specify. If you indicate a single page as a target, you will get comprehensive summary data on all backlinks for that page.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/domain_pages_summary/live/?bash'
 */
export const domainPagesSummaryLive = <ThrowOnError extends boolean = false>(options?: Options<DomainPagesSummaryLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<DomainPagesSummaryLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/domain_pages_summary/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a detailed overview of referring domains pointing to the target you specify.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/referring_domains/live/?bash'
 */
export const referringDomainsLive = <ThrowOnError extends boolean = false>(options?: Options<ReferringDomainsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<ReferringDomainsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/referring_domains/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a detailed overview of referring IPs and subnets pointing to the target you specify.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/referring_networks/live/?bash'
 */
export const referringNetworksLive = <ThrowOnError extends boolean = false>(options?: Options<ReferringNetworksLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<ReferringNetworksLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/referring_networks/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a list of competitors that share some part of the backlink profile with a target website, along with a number of backlink intersections and the rank of every competing website.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/competitors/live/?bash'
 */
export const competitorsLive = <ThrowOnError extends boolean = false>(options?: Options<CompetitorsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<CompetitorsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/competitors/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the list of domains pointing to the specified websites. This endpoint is especially useful for creating a Link Gap feature that shows what domains link to your competitors but do not link out to your website.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/domain_intersection/live/?bash'
 */
export const domainIntersectionLive = <ThrowOnError extends boolean = false>(options?: Options<DomainIntersectionLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<DomainIntersectionLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/domain_intersection/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the list of referring pages pointing to the specified targets. It is especially useful for finding the backlinks that point to your competitors but don’t point to your website.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/page_intersection/live/?bash'
 */
export const pageIntersectionLive = <ThrowOnError extends boolean = false>(options?: Options<PageIntersectionLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<PageIntersectionLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/page_intersection/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with an overview of backlink data for the target domain available during a period between the two indicated dates. Backlink metrics will be grouped by the time range that you define: day, week, month, or year.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/timeseries_summary/live/?bash'
 */
export const timeseriesSummaryLive = <ThrowOnError extends boolean = false>(options?: Options<TimeseriesSummaryLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<TimeseriesSummaryLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/timeseries_summary/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the number of new and lost backlinks and referring domains for the domain specified in the target field.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/timeseries_new_lost_summary/live/?bash'
 */
export const timeseriesNewLostSummaryLive = <ThrowOnError extends boolean = false>(options?: Options<TimeseriesNewLostSummaryLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<TimeseriesNewLostSummaryLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/timeseries_new_lost_summary/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with rank scores of the domains, subdomains, and pages specified in the targets array. The score is based on the number of referring domains pointing to the specified domains, subdomains, or pages. The rank values represent real-time data for the date of the request and range from 0 (no backlinks detected) to 1,000 (highest rank). A similar scoring system is used in Google’s Page Rank algorithm. You can learn more about rank scores in this help center article
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/bulk_ranks/live/?bash'
 */
export const bulkRanksLive = <ThrowOnError extends boolean = false>(options?: Options<BulkRanksLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BulkRanksLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/bulk_ranks/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the number of backlinks pointing to domains, subdomains, and pages specified in the targets array. The returned numbers correspond to all live backlinks, that is, total number of referring links with all attributes (e.g., nofollow, noreferrer, ugc, sponsored etc) that were found during the latest check.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/bulk_backlinks/live/?bash'
 */
export const bulkBacklinksLive = <ThrowOnError extends boolean = false>(options?: Options<BulkBacklinksLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BulkBacklinksLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/bulk_backlinks/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with spam scores of the domains, subdomains, and pages you specified in the targets array. Spam Score is DataForSEO’s proprietary metric that indicates how “spammy” your target is on a scale from 0 to 100. You can learn more about Spam Score, how it is calculated, and signals it takes into account in this help center article
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/bulk_spam_score/live/?bash'
 */
export const bulkSpamScoreLive = <ThrowOnError extends boolean = false>(options?: Options<BulkSpamScoreLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BulkSpamScoreLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/bulk_spam_score/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the number of referring domains pointing to domains, subdomains, and pages specified in the targets array. The returned numbers are based on all live referring domains, that is, total number of domains pointing to the target with any type of backlinks (e.g., nofollow, noreferrer, ugc, sponsored etc) that were found during the latest check.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/bulk_referring_domains/live/?bash'
 */
export const bulkReferringDomainsLive = <ThrowOnError extends boolean = false>(options?: Options<BulkReferringDomainsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BulkReferringDomainsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/bulk_referring_domains/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the number of new and lost backlinks for the domains, subdomains, and pages specified in the targets array.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/bulk_new_lost_backlinks/live/?bash'
 */
export const bulkNewLostBacklinksLive = <ThrowOnError extends boolean = false>(options?: Options<BulkNewLostBacklinksLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BulkNewLostBacklinksLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/bulk_new_lost_backlinks/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with the number of referring domains pointing to the domains, subdomains and pages specified in the targets array.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/bulk_new_lost_referring_domains/live/?bash'
 */
export const bulkNewLostReferringDomainsLive = <ThrowOnError extends boolean = false>(options?: Options<BulkNewLostReferringDomainsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BulkNewLostReferringDomainsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/bulk_new_lost_referring_domains/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint will provide you with a comprehensive overview of backlinks and related data for a bulk of up to 1000 pages, domains, or subdomains. If you indicate a single page as a target, you will get comprehensive summary data on all backlinks for that page.
 * for more info please visit 'https://docs.dataforseo.com/v3/backlinks/bulk_pages_summary/live/?bash'
 */
export const bulkPagesSummaryLive = <ThrowOnError extends boolean = false>(options?: Options<BulkPagesSummaryLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BulkPagesSummaryLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/backlinks/bulk_pages_summary/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of available Chat GPT AI models by calling this API.
 *
 * As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information specific to the set tasks.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/chat_gpt/llm_responses/models/'
 */
export const chatGptLlmResponsesModels = <ThrowOnError extends boolean = false>(options?: Options<ChatGptLlmResponsesModelsData, ThrowOnError>) => {
    return (options?.client ?? client).get<ChatGptLlmResponsesModelsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/chat_gpt/llm_responses/models',
        ...options
    });
};

/**
 * ‌‌
 * Live ChatGPT LLM Responses endpoint allows you to retrieve structured responses from a specific ChatGPT AI model, based on the input parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/chat_gpt/llm_responses/live/'
 */
export const chatGptLlmResponsesLive = <ThrowOnError extends boolean = false>(options?: Options<ChatGptLlmResponsesLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<ChatGptLlmResponsesLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/chat_gpt/llm_responses/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * ChatGPT LLM Responses endpoint allows you to retrieve structured responses from a specific ChatGPT model, based on the input parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/chat_gpt/llm_responses/task_post/'
 */
export const chatGptLlmResponsesTaskPost = <ThrowOnError extends boolean = false>(options?: Options<ChatGptLlmResponsesTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<ChatGptLlmResponsesTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/chat_gpt/llm_responses/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to provide you with a list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/chat_gpt/llm_responses/tasks_ready/'
 */
export const chatGptLlmResponsesTasksReady = <ThrowOnError extends boolean = false>(options?: Options<ChatGptLlmResponsesTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<ChatGptLlmResponsesTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/chat_gpt/llm_responses/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * Chat GPT LLM Responses endpoint allows you to retrieve structured responses from a specific Chat GPT model, based on the input parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/chat_gpt/llm_responses/task_get/'
 */
export const chatGptLlmResponsesTaskGet = <ThrowOnError extends boolean = false>(options: Options<ChatGptLlmResponsesTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<ChatGptLlmResponsesTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/chat_gpt/llm_responses/task_get/{id}',
        ...options
    });
};

/**
 * You will receive the list of available Claude AI models by calling this API.
 *
 * As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information specific to the set tasks.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/claude/llm_responses/models/'
 */
export const claudeLlmResponsesModels = <ThrowOnError extends boolean = false>(options?: Options<ClaudeLlmResponsesModelsData, ThrowOnError>) => {
    return (options?.client ?? client).get<ClaudeLlmResponsesModelsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/claude/llm_responses/models',
        ...options
    });
};

/**
 * ‌‌
 * Live Claude LLM Responses endpoint allows you to retrieve structured responses from a specific Claude model, based on the input parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/claude/llm_responses/live/'
 */
export const claudeLlmResponsesLive = <ThrowOnError extends boolean = false>(options?: Options<ClaudeLlmResponsesLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<ClaudeLlmResponsesLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/claude/llm_responses/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * Claude LLM Responses endpoint allows you to retrieve structured responses from a specific Claude model, based on the input parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/claude/llm_responses/task_post/'
 */
export const claudeLlmResponsesTaskPost = <ThrowOnError extends boolean = false>(options?: Options<ClaudeLlmResponsesTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<ClaudeLlmResponsesTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/claude/llm_responses/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to provide you with a list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/claude/llm_responses/tasks_ready/'
 */
export const claudeLlmResponsesTasksReady = <ThrowOnError extends boolean = false>(options?: Options<ClaudeLlmResponsesTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<ClaudeLlmResponsesTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/claude/llm_responses/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * Claude LLM Responses endpoint allows you to retrieve structured responses from a specific Claude model, based on the input parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/claude/llm_responses/task_get/'
 */
export const claudeLlmResponsesTaskGet = <ThrowOnError extends boolean = false>(options: Options<ClaudeLlmResponsesTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<ClaudeLlmResponsesTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/claude/llm_responses/task_get/{id}',
        ...options
    });
};

/**
 * You will receive the list of available Gemini AI models by calling this API.
 *
 * As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information specific to the set tasks.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/gemini/llm_responses/models/'
 */
export const geminiLlmResponsesModels = <ThrowOnError extends boolean = false>(options?: Options<GeminiLlmResponsesModelsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GeminiLlmResponsesModelsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/gemini/llm_responses/models',
        ...options
    });
};

/**
 * ‌‌
 * Live Gemini LLM Responses endpoint allows you to retrieve structured responses from a specific Gemini AI model, based on the input parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/gemini/llm_responses/live/'
 */
export const geminiLlmResponsesLive = <ThrowOnError extends boolean = false>(options?: Options<GeminiLlmResponsesLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GeminiLlmResponsesLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/gemini/llm_responses/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of available Perplexity AI models by calling this API.
 *
 * As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information specific to the set tasks.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/perplexity/llm_responses/models/'
 */
export const perplexityLlmResponsesModels = <ThrowOnError extends boolean = false>(options?: Options<PerplexityLlmResponsesModelsData, ThrowOnError>) => {
    return (options?.client ?? client).get<PerplexityLlmResponsesModelsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/perplexity/llm_responses/models',
        ...options
    });
};

/**
 * ‌‌
 * Live Perplexity LLM Responses endpoint allows you to retrieve structured responses from a specific Perplexity AI model, based on the input parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/perplexity/llm_responses/live/'
 */
export const perplexityLlmResponsesLive = <ThrowOnError extends boolean = false>(options?: Options<PerplexityLlmResponsesLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<PerplexityLlmResponsesLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/perplexity/llm_responses/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Here you will find all the necessary information about filters that can be used with AI Keyword Data API endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/ai_keyword_data/available_filters'
 */
export const aiKeywordDataAvailableFilters = <ThrowOnError extends boolean = false>(options?: Options<AiKeywordDataAvailableFiltersData, ThrowOnError>) => {
    return (options?.client ?? client).get<AiKeywordDataAvailableFiltersResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/ai_keyword_data/available_filters',
        ...options
    });
};

/**
 * ‌
 * Using this endpoint you can get the full list of locations and languages supported in AI Keyword Data API.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/ai_keyword_data/locations_and_languages'
 */
export const aiOptimizationAiKeywordDataLocationsAndLanguages = <ThrowOnError extends boolean = false>(options?: Options<AiOptimizationAiKeywordDataLocationsAndLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<AiOptimizationAiKeywordDataLocationsAndLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/ai_keyword_data/locations_and_languages',
        ...options
    });
};

/**
 * ‌
 * This endpoint provides search volume data for your target keywords, reflecting their estimated usage in AI tools.
 * for more info please visit 'https://docs.dataforseo.com/v3/ai_optimization/ai_keyword_data/keywords_search_volume/live'
 */
export const aiKeywordDataKeywordsSearchVolumeLive = <ThrowOnError extends boolean = false>(options?: Options<AiKeywordDataKeywordsSearchVolumeLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<AiKeywordDataKeywordsSearchVolumeLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/ai_optimization/ai_keyword_data/keywords_search_volume/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint is designed to provide you with the list of IDs and metadata of the completed On Page tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/id_list/?bash'
 */
export const onPageIdList = <ThrowOnError extends boolean = false>(options?: Options<OnPageIdListData, ThrowOnError>) => {
    return (options?.client ?? client).post<OnPageIdListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/id_list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * By calling this endpoint you will receive information about the OnPage API tasks that returned an error within the past 7 days.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/errors/?bash'
 */
export const onPageErrors = <ThrowOnError extends boolean = false>(options?: Options<OnPageErrorsData, ThrowOnError>) => {
    return (options?.client ?? client).post<OnPageErrorsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/errors',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint is designed to force stop the crawl process of websites you specified in a task. The execution of all the tasks associated with the IDs indicated in your request to this endpoint will be stopped. You will still be able to obtain the data on pages that have been scanned until the crawling process was stopped.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/force_stop/?bash'
 */
export const forceStop = <ThrowOnError extends boolean = false>(options?: Options<ForceStopData, ThrowOnError>) => {
    return (options?.client ?? client).post<ForceStopResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/force_stop',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * OnPage API supports plenty of customizable crawling parameters that allow you to adapt the extraction of website data to your requirements and modify the thresholds for various performance indicators.
 * ‌‌
 * Here you will find all the necessary information about filters and thresholds that can be used with DataForSEO OnPage API endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/filters_and_thresholds/?bash'
 */
export const onPageAvailableFilters = <ThrowOnError extends boolean = false>(options?: Options<OnPageAvailableFiltersData, ThrowOnError>) => {
    return (options?.client ?? client).get<OnPageAvailableFiltersResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/available_filters',
        ...options
    });
};

/**
 * ‌
 * OnPage API checks websites for 60+ customizable on-page parameters defines and displays all found flaws and opportunities for optimization so that you can easily fix them. It checks meta tags, duplicate content, image tags, response codes, and other parameters on every page. You can find the full list of OnPage API check-up parameters in the Pages section.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/task_post/?bash'
 */
export const taskPost = <ThrowOnError extends boolean = false>(options?: Options<TaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<TaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks, which results haven’t been collected yet.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page-tasks_ready/?bash'
 */
export const onPageTasksReady = <ThrowOnError extends boolean = false>(options?: Options<OnPageTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<OnPageTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * Using this function, you can get the overall information on a website as well as drill down into exact on-page issues of a website that has been scanned. As a result, you will know what functions to use for receiving detailed data for each of the found issues.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/summary/?bash'
 */
export const summary = <ThrowOnError extends boolean = false>(options: Options<SummaryData, ThrowOnError>) => {
    return (options.client ?? client).get<SummaryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/summary/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint returns a list of crawled pages with on-page check-ups and other metrics related to the page performance.
 * Using this function you will get page-specific data with detailed information on how well your pages are optimized for search.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/pages/?bash'
 */
export const pages = <ThrowOnError extends boolean = false>(options?: Options<PagesData, ThrowOnError>) => {
    return (options?.client ?? client).post<PagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/pages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint will return the list of pages where a specific resource is located. Using this function you will also get the data related to the pages that contain a specified resource.
 * You can get the URL of a resource using the Resources endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/page_by_resource/?bash'
 */
export const pagesByResource = <ThrowOnError extends boolean = false>(options?: Options<PagesByResourceData, ThrowOnError>) => {
    return (options?.client ?? client).post<PagesByResourceResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/pages_by_resource',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a list of resources, including images, scripts, stylesheets, and broken elements.
 * You will get a detailed overview of every resource found on the crawled pages.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/resources/?bash'
 */
export const resources = <ThrowOnError extends boolean = false>(options?: Options<ResourcesData, ThrowOnError>) => {
    return (options?.client ?? client).post<ResourcesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/resources',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint returns a list of pages that contain duplicate title or description tags. The response also contains data related to page performance.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/duplicate_tags/?bash'
 */
export const duplicateTags = <ThrowOnError extends boolean = false>(options?: Options<DuplicateTagsData, ThrowOnError>) => {
    return (options?.client ?? client).post<DuplicateTagsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/duplicate_tags',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint returns a list of pages that have content similar to the page specified in the request. The response also contains data related to page performance and the similarity index that indicates how similar the compared pages are.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/duplicate_content/?bash'
 */
export const duplicateContent = <ThrowOnError extends boolean = false>(options?: Options<DuplicateContentData, ThrowOnError>) => {
    return (options?.client ?? client).post<DuplicateContentResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/duplicate_content',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a list of internal and external links detected on a target website.
 * The following link types are supported: anchor, image, link, canonical, meta, alternate, redirect.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/links/?bash'
 */
export const links = <ThrowOnError extends boolean = false>(options?: Options<LinksData, ThrowOnError>) => {
    return (options?.client ?? client).post<LinksResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/links',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Redirect chains occur when there are at least two redirects between the initial URL and the destination URL. For example, if page A redirects to page B which redirects to page C, such a series of redirects is considered a redirect chain. Sometimes, if page B redirects back to page A, the redirect chain becomes closed and is considered a redirect loop.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/redirect_chains/?bash'
 */
export const redirectChains = <ThrowOnError extends boolean = false>(options?: Options<RedirectChainsData, ThrowOnError>) => {
    return (options?.client ?? client).post<RedirectChainsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/redirect_chains',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint returns a list of pages that are blocked from being indexed by Google and other search engines through robots.txt, HTTP headers, or meta tags settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/non_indexable/?bash'
 */
export const nonIndexable = <ThrowOnError extends boolean = false>(options?: Options<NonIndexableData, ThrowOnError>) => {
    return (options?.client ?? client).post<NonIndexableResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/non_indexable',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint is designed to provide you with the page speed insights. Using this function you can get detailed information about the page loading time, time to secure connection, the time it takes to load page resources, and so on.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/waterfall/?bash'
 */
export const waterfall = <ThrowOnError extends boolean = false>(options?: Options<WaterfallData, ThrowOnError>) => {
    return (options?.client ?? client).post<WaterfallResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/waterfall',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint will provide you with keyword density and keyword frequency data for terms appearing on the specified website or web page. You can filter and sort the data that will be retrieved with this API call.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/keyword_density/?bash'
 */
export const keywordDensity = <ThrowOnError extends boolean = false>(options?: Options<KeywordDensityData, ThrowOnError>) => {
    return (options?.client ?? client).post<KeywordDensityResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/keyword_density',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint is designed to validate structured JSON-LD data and Microdata. Using this function you will obtain microdata available on the specified page of the target website and detailed results of its validation.
 * To use this endpoint, set the validate_micromarkup parameter to true in the POST request to OnPage API.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/microdata/?bash'
 */
export const microdata = <ThrowOnError extends boolean = false>(options?: Options<MicrodataData, ThrowOnError>) => {
    return (options?.client ?? client).post<MicrodataResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/microdata',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint returns the HTML of a page you indicate in the request.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/raw_html/?bash'
 */
export const rawHtml = <ThrowOnError extends boolean = false>(options?: Options<RawHtmlData, ThrowOnError>) => {
    return (options?.client ?? client).post<RawHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/raw_html',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Using this endpoint, you can capture a full high-quality screenshot of any webpage. In this way, you can review the target page as the DataForSEO crawler and Googlebot see it.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/page_screenshot/?bash'
 */
export const pageScreenshot = <ThrowOnError extends boolean = false>(options?: Options<PageScreenshotData, ThrowOnError>) => {
    return (options?.client ?? client).post<PageScreenshotResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/page_screenshot',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint allows parsing the content on any page you specify and will return the structured content of the target page, including link URLs, anchors, headings, and textual content.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/content_parsing/?bash'
 */
export const contentParsing = <ThrowOnError extends boolean = false>(options?: Options<ContentParsingData, ThrowOnError>) => {
    return (options?.client ?? client).post<ContentParsingResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/content_parsing',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint allows parsing the content on any page you specify and will return the structured content of the target page, including link URLs, anchors, headings, and textual content.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/content_parsing/live/?bash'
 */
export const contentParsingLive = <ThrowOnError extends boolean = false>(options?: Options<ContentParsingLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<ContentParsingLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/content_parsing/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Using this function you will get page-specific data with detailed information on how well a particular page is optimized for organic search.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/instant_pages/?bash'
 */
export const instantPages = <ThrowOnError extends boolean = false>(options?: Options<InstantPagesData, ThrowOnError>) => {
    return (options?.client ?? client).post<InstantPagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/instant_pages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of languages by calling this API.
 *
 * As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information specific to the set tasks.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/lighthouse/languages/?bash'
 */
export const onPageLighthouseLanguages = <ThrowOnError extends boolean = false>(options?: Options<OnPageLighthouseLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<OnPageLighthouseLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/lighthouse/languages',
        ...options
    });
};

/**
 * The OnPage Lighthouse API is based on Google’s open-source Lighthouse project and provides data on the quality of web pages.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/lighthouse/audits/?bash'
 */
export const lighthouseAudits = <ThrowOnError extends boolean = false>(options?: Options<LighthouseAuditsData, ThrowOnError>) => {
    return (options?.client ?? client).get<LighthouseAuditsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/lighthouse/audits',
        ...options
    });
};

/**
 * OnPage Lighthouse API is based on Google’s open-source Lighthouse project and provides data on the quality of web pages.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/lighthouse/versions/?bash'
 */
export const lighthouseVersions = <ThrowOnError extends boolean = false>(options?: Options<LighthouseVersionsData, ThrowOnError>) => {
    return (options?.client ?? client).get<LighthouseVersionsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/lighthouse/versions',
        ...options
    });
};

/**
 * ‌The OnPage Lighthouse API is based on Google’s open-source Lighthouse project for measuring the quality of web pages and web apps.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/lighthouse/task_post/?bash'
 */
export const lighthouseTaskPost = <ThrowOnError extends boolean = false>(options?: Options<LighthouseTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<LighthouseTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/lighthouse/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/lighthouse/tasks_ready/?bash'
 */
export const lighthouseTasksReady = <ThrowOnError extends boolean = false>(options?: Options<LighthouseTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<LighthouseTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/lighthouse/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The OnPage Lighthouse API is based on Google’s open-source Lighthouse project for measuring the quality of web pages and web apps. This endpoint will provide you with the results of Lighthouse Audit. Use the id received in the response of your Task POST request to get the results. The response will include data about all categories and audits specified in the Task POST. By default, the response will include all available data about the webpage including its performance, accessibility, progressive web apps, SEO, and compliance with best practices.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/lighthouse/task_get/json/?bash'
 */
export const lighthouseTaskGetJson = <ThrowOnError extends boolean = false>(options: Options<LighthouseTaskGetJsonData, ThrowOnError>) => {
    return (options.client ?? client).get<LighthouseTaskGetJsonResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/lighthouse/task_get/json/{id}',
        ...options
    });
};

/**
 * ‌The OnPage Lighthouse API is based on Google’s open-source Lighthouse project for measuring the quality of web pages and web apps.
 * for more info please visit 'https://docs.dataforseo.com/v3/on_page/lighthouse/live/json/?bash'
 */
export const lighthouseLiveJson = <ThrowOnError extends boolean = false>(options?: Options<LighthouseLiveJsonData, ThrowOnError>) => {
    return (options?.client ?? client).post<LighthouseLiveJsonResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/on_page/lighthouse/live/json',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint is designed to provide you with the list of IDs and metadata of the completed Content Analysis tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_analysis/id_list/?bash'
 */
export const contentAnalysisIdList = <ThrowOnError extends boolean = false>(options?: Options<ContentAnalysisIdListData, ThrowOnError>) => {
    return (options?.client ?? client).post<ContentAnalysisIdListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_analysis/id_list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Here you will find all the necessary information about filters that can be used with Content Analysis API endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_analysis/filters/?bash'
 */
export const contentAnalysisAvailableFilters = <ThrowOnError extends boolean = false>(options?: Options<ContentAnalysisAvailableFiltersData, ThrowOnError>) => {
    return (options?.client ?? client).get<ContentAnalysisAvailableFiltersResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_analysis/available_filters',
        ...options
    });
};

/**
 * You will receive the list of locations by this API call.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_analysis/locations/?bash'
 */
export const contentAnalysisLocations = <ThrowOnError extends boolean = false>(options?: Options<ContentAnalysisLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<ContentAnalysisLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_analysis/locations',
        ...options
    });
};

/**
 * You will receive the list of languages by calling this API.
 *
 * As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information specific to the set tasks.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_analysis/languages/?bash'
 */
export const contentAnalysisLanguages = <ThrowOnError extends boolean = false>(options?: Options<ContentAnalysisLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<ContentAnalysisLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_analysis/languages',
        ...options
    });
};

/**
 * We use Google product and service categories. This endpoint will provide you with the full list of available categories.
 * You can also download the CSV file by this link.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_analysis/categories/?bash'
 */
export const contentAnalysisCategories = <ThrowOnError extends boolean = false>(options?: Options<ContentAnalysisCategoriesData, ThrowOnError>) => {
    return (options?.client ?? client).get<ContentAnalysisCategoriesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_analysis/categories',
        ...options
    });
};

/**
 * ‌
 * This endpoint will provide you with detailed citation data available for the target keyword.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_analysis/search/live/?bash'
 */
export const searchLive = <ThrowOnError extends boolean = false>(options?: Options<SearchLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<SearchLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_analysis/search/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with an overview of citation data available for the target keyword.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_analysis/summary/live/?bash'
 */
export const contentAnalysisSummaryLive = <ThrowOnError extends boolean = false>(options?: Options<ContentAnalysisSummaryLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<ContentAnalysisSummaryLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_analysis/summary/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with sentiment analysis data for the citations available for the target keyword.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_analysis/sentiment_analysis/live/?bash'
 */
export const sentimentAnalysisLive = <ThrowOnError extends boolean = false>(options?: Options<SentimentAnalysisLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<SentimentAnalysisLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_analysis/sentiment_analysis/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with rating distribution data for the keyword and other parameters specified in the request.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_analysis/rating_distribution/live/?bash'
 */
export const ratingDistributionLive = <ThrowOnError extends boolean = false>(options?: Options<RatingDistributionLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<RatingDistributionLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_analysis/rating_distribution/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with data on all citations of the target keyword for the indicated date range.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_analysis/phrase_trends/live/?bash'
 */
export const phraseTrendsLive = <ThrowOnError extends boolean = false>(options?: Options<PhraseTrendsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<PhraseTrendsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_analysis/phrase_trends/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with data on all citations in the target category for the indicated date range.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_analysis/category_trends/live/?bash'
 */
export const categoryTrendsLive = <ThrowOnError extends boolean = false>(options?: Options<CategoryTrendsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<CategoryTrendsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_analysis/category_trends/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a text generated based on the part of the text you define and other available parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_generation/generate/live/?bash'
 */
export const generateLive = <ThrowOnError extends boolean = false>(options?: Options<GenerateLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GenerateLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_generation/generate/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a text generated based on the topic and other parameters you specify.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_generation/generate_text/live/?bash'
 */
export const generateTextLive = <ThrowOnError extends boolean = false>(options?: Options<GenerateTextLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GenerateTextLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_generation/generate_text/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint is designed to generate title and description meta tags for a text specified in the request.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_generation/generate_meta_tags/live/?bash'
 */
export const generateMetaTagsLive = <ThrowOnError extends boolean = false>(options?: Options<GenerateMetaTagsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GenerateMetaTagsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_generation/generate_meta_tags/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with 10 subtopics generated based on the topic and other parameters you specify.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_generation/generate_sub_topics/live/?bash'
 */
export const generateSubTopicsLive = <ThrowOnError extends boolean = false>(options?: Options<GenerateSubTopicsLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GenerateSubTopicsLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_generation/generate_sub_topics/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with a paraphrased version of the text you specify.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_generation/paraphrase/live/?bash'
 */
export const paraphraseLive = <ThrowOnError extends boolean = false>(options?: Options<ParaphraseLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<ParaphraseLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_generation/paraphrase/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * This endpoint will provide you with grammar and spelling corrections for the text you specify.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_generation/check_grammar/live/?bash'
 */
export const checkGrammarLive = <ThrowOnError extends boolean = false>(options?: Options<CheckGrammarLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<CheckGrammarLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_generation/check_grammar/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of languages by calling this API.
 *
 * As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information specific to the set tasks.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_generation/check_grammar/languages/?bash'
 */
export const contentGenerationCheckGrammarLanguages = <ThrowOnError extends boolean = false>(options?: Options<ContentGenerationCheckGrammarLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<ContentGenerationCheckGrammarLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_generation/check_grammar/languages',
        ...options
    });
};

/**
 * You will receive the list of grammar rules by calling this API.
 *
 * As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information specific to the set tasks.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_generation/grammar_rules/?bash'
 */
export const grammarRules = <ThrowOnError extends boolean = false>(options?: Options<GrammarRulesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GrammarRulesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_generation/grammar_rules',
        ...options
    });
};

/**
 * ‌
 * This endpoint will provide you with statistical data based on the given text, such as the number of words and sentences, vocabulary density, and text readability.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_generation/text_summary/live/?bash'
 */
export const textSummaryLive = <ThrowOnError extends boolean = false>(options?: Options<TextSummaryLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<TextSummaryLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_generation/text_summary/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of languages by calling this API.
 *
 * As a response of the API server, you will receive JSON-encoded data containing a tasks array with the information specific to the set tasks.
 * for more info please visit 'https://docs.dataforseo.com/v3/content_generation/text_summary/languages/?bash'
 */
export const contentGenerationTextSummaryLanguages = <ThrowOnError extends boolean = false>(options?: Options<ContentGenerationTextSummaryLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<ContentGenerationTextSummaryLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/content_generation/text_summary/languages',
        ...options
    });
};

/**
 * This endpoint is designed to provide you with the list of IDs and metadata of the completed Merchant tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/id_list/?bash'
 */
export const merchantIdList = <ThrowOnError extends boolean = false>(options?: Options<MerchantIdListData, ThrowOnError>) => {
    return (options?.client ?? client).post<MerchantIdListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/id_list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * By calling this endpoint you will receive information about the Merchant API tasks that returned an error within the past 7 days.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/errors/?bash'
 */
export const merchantErrors = <ThrowOnError extends boolean = false>(options?: Options<MerchantErrorsData, ThrowOnError>) => {
    return (options?.client ?? client).post<MerchantErrorsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/errors',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of supported Google Shopping languages by calling this API.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/languages/?bash'
 */
export const merchantGoogleLanguages = <ThrowOnError extends boolean = false>(options?: Options<MerchantGoogleLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<MerchantGoogleLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/languages',
        ...options
    });
};

/**
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/locations/?bash'
 */
export const merchantGoogleLocations = <ThrowOnError extends boolean = false>(options?: Options<MerchantGoogleLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<MerchantGoogleLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/locations',
        ...options
    });
};

/**
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/locations/?bash'
 */
export const merchantGoogleLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<MerchantGoogleLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<MerchantGoogleLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/locations/{country}',
        ...options
    });
};

/**
 * ‌‌
 * Google Shopping Products endpoint will provide you with the list of products found on Google Shopping for the specified query. The results include product title, description in Google Shopping SERP, product rank, price, reviews and rating as well as the related domain.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/products/task_post/?bash'
 */
export const googleProductsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleProductsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleProductsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/products/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/products/tasks_ready/?bash'
 */
export const googleProductsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleProductsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleProductsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/products/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/products/tasks_ready/?bash'
 */
export const merchantTasksReady = <ThrowOnError extends boolean = false>(options?: Options<MerchantTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<MerchantTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/tasks_ready',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/products/task_get/advanced/?bash'
 */
export const googleProductsTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleProductsTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleProductsTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/products/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/products/task_get/html/?bash'
 */
export const googleProductsTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleProductsTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleProductsTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/products/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Google Shopping Sellers endpoint will provide you with the list of sellers that listed the specified product on Google Shopping. The provided data for each seller includes related product base and total price, shipment and purchase details and special offers. The results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/sellers/task_post/?bash'
 */
export const googleSellersTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleSellersTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleSellersTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/sellers/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/sellers/tasks_ready/?bash'
 */
export const googleSellersTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleSellersTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleSellersTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/sellers/tasks_ready',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/sellers/task_get/advanced/?bash'
 */
export const googleSellersTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleSellersTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleSellersTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/sellers/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/sellers/task_get/html/?bash'
 */
export const googleSellersTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleSellersTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleSellersTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/sellers/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint provides product data from Google Shopping based on the specified product_id. You will get a full detailed product description as it is given on the Google Shopping product specification page. Product data can include parameters of the product, brand name, part numbers, GTIN, etc.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/product_spec/task_post/?bash'
 */
export const googleProductSpecTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleProductSpecTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleProductSpecTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/product_spec/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/product_spec/tasks_ready/?bash'
 */
export const googleProductSpecTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleProductSpecTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleProductSpecTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/product_spec/tasks_ready',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/product_spec/task_get/advanced/?bash'
 */
export const googleProductSpecTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleProductSpecTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleProductSpecTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/product_spec/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/product_spec/task_get/html/?bash'
 */
export const googleProductSpecTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleProductSpecTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleProductSpecTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/product_spec/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint provides data on a product listed on Google Shopping, including product description, images, rating, variations, and sellers. In order to set a task, you have to specify the  product_id.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/product_info/task_post/?bash'
 */
export const googleProductInfoTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleProductInfoTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleProductInfoTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/product_info/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/product_info/tasks_ready/?bash'
 */
export const googleProductInfoTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleProductInfoTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleProductInfoTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/product_info/tasks_ready',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/product_info/task_get/advanced/?bash'
 */
export const googleProductInfoTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleProductInfoTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleProductInfoTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/product_info/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Google Shopping Sellers Ad URL is designed to provide you with a full URL of the advertisement containing all additional parameters set by the seller.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/google/sellers/ad_url/?bash'
 */
export const googleSellersAdUrl = <ThrowOnError extends boolean = false>(options: Options<GoogleSellersAdUrlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleSellersAdUrlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/google/sellers/ad_url/{shop_ad_aclk}',
        ...options
    });
};

/**
 * You will receive the list of supported Amazon locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/locations/?bash'
 */
export const merchantAmazonLocations = <ThrowOnError extends boolean = false>(options?: Options<MerchantAmazonLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<MerchantAmazonLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/locations',
        ...options
    });
};

/**
 * You will receive the list of supported Amazon locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/locations/?bash'
 */
export const merchantAmazonLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<MerchantAmazonLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<MerchantAmazonLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/locations/{country}',
        ...options
    });
};

/**
 * You will receive the list of supported Amazon languages by calling this API.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/languages/?bash'
 */
export const merchantAmazonLanguages = <ThrowOnError extends boolean = false>(options?: Options<MerchantAmazonLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<MerchantAmazonLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/languages',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint provides results from Amazon product listings according to the specified keyword (product name), location, and language parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/products/task_post/?bash'
 */
export const amazonProductsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<AmazonProductsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<AmazonProductsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/products/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/products/tasks_ready/?bash'
 */
export const amazonProductsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<AmazonProductsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<AmazonProductsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/products/tasks_ready',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/products/task_get/advanced/?bash'
 */
export const amazonProductsTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<AmazonProductsTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<AmazonProductsTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/products/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/products/task_get/html/?bash'
 */
export const amazonProductsTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<AmazonProductsTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<AmazonProductsTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/products/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a full list of ASINs assigned to different modifications of a product.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/asin/task_post/?bash'
 */
export const amazonAsinTaskPost = <ThrowOnError extends boolean = false>(options?: Options<AmazonAsinTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<AmazonAsinTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/asin/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/asin/tasks_ready/?bash'
 */
export const amazonAsinTasksReady = <ThrowOnError extends boolean = false>(options?: Options<AmazonAsinTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<AmazonAsinTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/asin/tasks_ready',
        ...options
    });
};

/**
 * This endpoint will provide you with information about the product and ASINs of all its modifications listed on Amazon.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/asin/task_get/advanced/?bash'
 */
export const amazonAsinTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<AmazonAsinTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<AmazonAsinTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/asin/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/asin/task_get/html/?bash'
 */
export const amazonAsinTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<AmazonAsinTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<AmazonAsinTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/asin/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint provides a list of sellers of the specified product on Amazon. The data provided for each seller includes related product condition, pricing, shipment, and rating details.
 * The results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/sellers/task_post/?bash'
 */
export const amazonSellersTaskPost = <ThrowOnError extends boolean = false>(options?: Options<AmazonSellersTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<AmazonSellersTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/sellers/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/sellers/tasks_ready/?bash'
 */
export const amazonSellersTasksReady = <ThrowOnError extends boolean = false>(options?: Options<AmazonSellersTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<AmazonSellersTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/sellers/tasks_ready',
        ...options
    });
};

/**
 * This endpoint provides a list of sellers of the specified product on Amazon. The data provided for each seller includes related product condition, pricing, shipment, and rating details.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/sellers/task_get/advanced/?bash'
 */
export const amazonSellersTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<AmazonSellersTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<AmazonSellersTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/sellers/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/sellers/task_get/html/?bash'
 */
export const amazonSellersTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<AmazonSellersTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<AmazonSellersTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/sellers/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/reviews/task_post/?bash'
 */
export const amazonReviewsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<AmazonReviewsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<AmazonReviewsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/reviews/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/reviews/tasks_ready/?bash'
 */
export const amazonReviewsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<AmazonReviewsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<AmazonReviewsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/reviews/tasks_ready',
        ...options
    });
};

/**
 * This endpoint provides feedback data on products listed on the Amazon marketplace, including their titles, images, ratings, review content, user profile info, review publication dates, and more. The results are specific to the asin specified in the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/reviews/task_get/advanced/?bash'
 */
export const amazonReviewsTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<AmazonReviewsTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<AmazonReviewsTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/reviews/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/merchant/amazon/reviews/task_get/html/?bash'
 */
export const amazonReviewsTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<AmazonReviewsTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<AmazonReviewsTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/merchant/amazon/reviews/task_get/html/{id}',
        ...options
    });
};

/**
 * This endpoint is designed to provide you with the list of IDs and metadata of the completed App Data tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/id_list/?bash'
 */
export const appDataIdList = <ThrowOnError extends boolean = false>(options?: Options<AppDataIdListData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppDataIdListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/id_list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * By calling this endpoint you will receive information about the App Data API tasks that returned an error within the past 7 days.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/errors/?bash'
 */
export const appDataErrors = <ThrowOnError extends boolean = false>(options?: Options<AppDataErrorsData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppDataErrorsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/errors',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint will provide you with a full list of app categories available on Google Play.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/categories/?bash'
 */
export const googleCategories = <ThrowOnError extends boolean = false>(options?: Options<GoogleCategoriesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleCategoriesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/categories',
        ...options
    });
};

/**
 * By calling this endpoint you will receive the list of Google locations supported in App Data API.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/locations/?bash'
 */
export const appDataGoogleLocations = <ThrowOnError extends boolean = false>(options?: Options<AppDataGoogleLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppDataGoogleLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/locations',
        ...options
    });
};

/**
 * By calling this endpoint you will receive the list of Google locations supported in App Data API.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/locations/?bash'
 */
export const appDataGoogleLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<AppDataGoogleLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<AppDataGoogleLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/locations/{country}',
        ...options
    });
};

/**
 * By calling this endpoint you will receive the list of Google languages supported in App Data API.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/languages/?bash'
 */
export const appDataGoogleLanguages = <ThrowOnError extends boolean = false>(options?: Options<AppDataGoogleLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppDataGoogleLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/languages',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a list of apps ranking on Google Play for the specified keyword. The returned results are specific to the indicated keyword, as well as the language and location parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_searches/task_post/?bash'
 */
export const googleAppSearchesTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleAppSearchesTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAppSearchesTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_searches/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_searches/tasks_ready/?bash'
 */
export const googleAppSearchesTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleAppSearchesTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAppSearchesTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_searches/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_searches/tasks_ready/?bash'
 */
export const appDataTasksReady = <ThrowOnError extends boolean = false>(options?: Options<AppDataTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppDataTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/tasks_ready',
        ...options
    });
};

/**
 * This endpoint will provide you with a list of apps ranking on Google Play for the keyword specified in a POST request. You will also receive additional information about each application: its ID, icon, reviews count, rating, price, and other data. The results are specific to the keyword as well as location and language parameters specified in the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_searches/task_get/advanced/?bash'
 */
export const googleAppSearchesTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleAppSearchesTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAppSearchesTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_searches/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_searches/task_get/html/?bash'
 */
export const googleAppSearchesTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleAppSearchesTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAppSearchesTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_searches/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a list of mobile applications published in the top charts on the Google Play platform. The returned results are specific to the app collection as well as the the language and location parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_list/task_post/?bash'
 */
export const googleAppListTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleAppListTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAppListTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_list/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_list/tasks_ready/?bash'
 */
export const googleAppListTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleAppListTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAppListTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_list/tasks_ready',
        ...options
    });
};

/**
 * This endpoint will provide you with a list of applications published in the top charts on the Google Play platform, including app IDs, ratings, prices, titles, and more. The results are specific to the app_collection as well as the location and language parameters specified in the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_list/task_get/advanced/?bash'
 */
export const googleAppListTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleAppListTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAppListTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_list/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_list/task_get/html/?bash'
 */
export const googleAppListTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleAppListTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAppListTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_list/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint will provide you with information about the Google Play application specified in the app_id field of the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_info/task_post/?bash'
 */
export const googleAppInfoTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleAppInfoTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAppInfoTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_info/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_info/tasks_ready/?bash'
 */
export const googleAppInfoTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleAppInfoTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAppInfoTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_info/tasks_ready',
        ...options
    });
};

/**
 * This endpoint will provide you with information about the mobile application specified in a POST request. You will receive its ID, icon, description, reviews count, rating, number of installs, images, and other data. The results are specific to the app_id parameter specified in the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_info/task_get/advanced/?bash'
 */
export const googleAppInfoTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleAppInfoTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAppInfoTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_info/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_info/task_get/html/?bash'
 */
export const googleAppInfoTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleAppInfoTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAppInfoTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_info/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint will provide you with reviews published on the Google Play platform for the app specified in the app_id field. The returned results are specific to the indicated language and location parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_post/?bash'
 */
export const googleAppReviewsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleAppReviewsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAppReviewsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_reviews/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_reviews/tasks_ready/?bash'
 */
export const googleAppReviewsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleAppReviewsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAppReviewsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_reviews/tasks_ready',
        ...options
    });
};

/**
 * This endpoint will provide you with feedback data on applications listed on the Google Play platform, including review ratings, review content, user profile info of each reviewer, review publication dates, and more. The results are specific to the app_id as well as the location and language parameters specified in the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_get/advanced/?bash'
 */
export const googleAppReviewsTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleAppReviewsTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAppReviewsTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_reviews/task_get/advanced/{id}',
        ...options
    });
};

/**
 * Description of the fields for sending a request:
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_get/html/?bash'
 */
export const googleAppReviewsTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleAppReviewsTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleAppReviewsTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_reviews/task_get/html/{id}',
        ...options
    });
};

/**
 * This endpoint will provide you with a full list of app categories available on Google Play.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_listings/categories/?bash'
 */
export const googleAppListingsCategories = <ThrowOnError extends boolean = false>(options?: Options<GoogleAppListingsCategoriesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleAppListingsCategoriesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_listings/categories',
        ...options
    });
};

/**
 * This endpoint will provide you with a list of apps published on Google Play along with additional information: its ID, icon, reviews count, rating, price, and other data. The results are specific to the title, description, and categories parameters specified in the API request.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/google/app_listings/search/live/?bash'
 */
export const googleAppListingsSearchLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleAppListingsSearchLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleAppListingsSearchLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/google/app_listings/search/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint will provide you with a full list of app categories available on App Store.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/categories/?bash'
 */
export const appleCategories = <ThrowOnError extends boolean = false>(options?: Options<AppleCategoriesData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppleCategoriesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/categories',
        ...options
    });
};

/**
 * By calling this endpoint you will receive the list of Apple locations supported in App Data API.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/locations/?bash'
 */
export const appDataAppleLocations = <ThrowOnError extends boolean = false>(options?: Options<AppDataAppleLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppDataAppleLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/locations',
        ...options
    });
};

/**
 * By calling this endpoint you will receive the list of Apple languages supported in App Data API.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/languages/?bash'
 */
export const appDataAppleLanguages = <ThrowOnError extends boolean = false>(options?: Options<AppDataAppleLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppDataAppleLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/languages',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a list of apps ranking on the App Store for the specified keyword. The returned results are specific to the indicated keyword, as well as the location and language parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_searches/task_post/?bash'
 */
export const appleAppSearchesTaskPost = <ThrowOnError extends boolean = false>(options?: Options<AppleAppSearchesTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppleAppSearchesTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_searches/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_searches/tasks_ready/?bash'
 */
export const appleAppSearchesTasksReady = <ThrowOnError extends boolean = false>(options?: Options<AppleAppSearchesTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppleAppSearchesTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_searches/tasks_ready',
        ...options
    });
};

/**
 * This endpoint will provide you with a list of apps ranking on the App Store for the keyword specified in a POST request. You will also receive additional information about each application: its ID, icon, reviews count, rating, price, and other data. The results are specific to the keyword as well as location and language parameters specified in the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_searches/task_get/advanced/?bash'
 */
export const appleAppSearchesTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<AppleAppSearchesTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<AppleAppSearchesTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_searches/task_get/advanced/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint will provide you with information about the App Store application specified in the app_id field of the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_info/task_post/?bash'
 */
export const appleAppInfoTaskPost = <ThrowOnError extends boolean = false>(options?: Options<AppleAppInfoTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppleAppInfoTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_info/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_info/tasks_ready/?bash'
 */
export const appleAppInfoTasksReady = <ThrowOnError extends boolean = false>(options?: Options<AppleAppInfoTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppleAppInfoTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_info/tasks_ready',
        ...options
    });
};

/**
 * This endpoint will provide you with information about the mobile application specified in a POST request. You will receive its ID, icon, description, reviews count, rating, images, and other data. The results are specific to the app_id parameter specified in the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_info/task_get/advanced/?bash'
 */
export const appleAppInfoTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<AppleAppInfoTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<AppleAppInfoTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_info/task_get/advanced/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a list of mobile applications published in the top app charts on the App Store platform. The returned results are specific to the app collection as well as the language and location parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_list/task_post/?bash'
 */
export const appleAppListTaskPost = <ThrowOnError extends boolean = false>(options?: Options<AppleAppListTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppleAppListTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_list/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_list/tasks_ready/?bash'
 */
export const appleAppListTasksReady = <ThrowOnError extends boolean = false>(options?: Options<AppleAppListTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppleAppListTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_list/tasks_ready',
        ...options
    });
};

/**
 * This endpoint will provide you with a list of applications published in the top app charts on the App Store platform, including app IDs, ratings, prices, titles, and more. The results are specific to the app_collection as well as the location and language parameters specified in the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_list/task_get/advanced/?bash'
 */
export const appleAppListTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<AppleAppListTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<AppleAppListTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_list/task_get/advanced/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint will provide you with reviews published on the App Store platform for the app specified in the app_id field. The returned results are specific to the indicated language and location parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_reviews/task_post/?bash'
 */
export const appleAppReviewsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<AppleAppReviewsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppleAppReviewsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_reviews/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_reviews/tasks_ready/?bash'
 */
export const appleAppReviewsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<AppleAppReviewsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppleAppReviewsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_reviews/tasks_ready',
        ...options
    });
};

/**
 * This endpoint will provide you with feedback data on applications listed on the App Store platform, including review ratings, review content, user profile info of each reviewer, review publication dates, and more. The results are specific to the app_id as well as the location and language parameters specified in the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_reviews/task_get/advanced/?bash'
 */
export const appleAppReviewsTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<AppleAppReviewsTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<AppleAppReviewsTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_reviews/task_get/advanced/{id}',
        ...options
    });
};

/**
 * This endpoint will provide you with a full list of app categories available on Apple App Store.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_listings/categories/?bash'
 */
export const appleAppListingsCategories = <ThrowOnError extends boolean = false>(options?: Options<AppleAppListingsCategoriesData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppleAppListingsCategoriesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_listings/categories',
        ...options
    });
};

/**
 * This endpoint will provide you with a list of apps published on App Store along with additional information: its ID, icon, reviews count, rating, price, and other data. The results are specific to the title, description, and categories parameters specified in the API request.
 * for more info please visit 'https://docs.dataforseo.com/v3/app_data/apple/app_listings/search/live/?bash'
 */
export const appleAppListingsSearchLive = <ThrowOnError extends boolean = false>(options?: Options<AppleAppListingsSearchLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppleAppListingsSearchLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/app_data/apple/app_listings/search/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This endpoint is designed to provide you with the list of IDs and metadata of the completed Business Data tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/id_list/?bash'
 */
export const businessDataIdList = <ThrowOnError extends boolean = false>(options?: Options<BusinessDataIdListData, ThrowOnError>) => {
    return (options?.client ?? client).post<BusinessDataIdListResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/id_list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * By calling this endpoint you will receive information about the Business Data API tasks that returned an error within the past 7 days.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/errors/?bash'
 */
export const businessDataErrors = <ThrowOnError extends boolean = false>(options?: Options<BusinessDataErrorsData, ThrowOnError>) => {
    return (options?.client ?? client).post<BusinessDataErrorsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/errors',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of locations by this API call. You can also download the full list of supported locations in the CSV format (last updated 2025-08-05).
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/business_listings/locations/?bash'
 */
export const businessDataBusinessListingsLocations = <ThrowOnError extends boolean = false>(options?: Options<BusinessDataBusinessListingsLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<BusinessDataBusinessListingsLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/business_listings/locations',
        ...options
    });
};

/**
 * This endpoint will provide you with the list of top categories by business count.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/business_listings/categories/?bash'
 */
export const businessListingsCategories = <ThrowOnError extends boolean = false>(options?: Options<BusinessListingsCategoriesData, ThrowOnError>) => {
    return (options?.client ?? client).get<BusinessListingsCategoriesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/business_listings/categories',
        ...options
    });
};

/**
 * ‌‌
 * Here you will find all the necessary information about filters that can be used with Business Listings API.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/business_listings/filters/?bash'
 */
export const businessListingsAvailableFilters = <ThrowOnError extends boolean = false>(options?: Options<BusinessListingsAvailableFiltersData, ThrowOnError>) => {
    return (options?.client ?? client).get<BusinessListingsAvailableFiltersResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/business_listings/available_filters',
        ...options
    });
};

/**
 * ‌‌
 * Business Listings Search API provides results containing information about business entities listed on Google Maps in the specified categories. You will receive the address, contacts, rating, working hours, and other relevant data. The provided results are specific to the selected location (see the List of Locations) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/business_listings/search/live/?bash'
 */
export const businessListingsSearchLive = <ThrowOnError extends boolean = false>(options?: Options<BusinessListingsSearchLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BusinessListingsSearchLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/business_listings/search/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Business Listings Categories Aggregation endpoint provides results containing information about groups of related categories along with the number of entities in each category. The provided results are specific to the specified parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/business_listings/categories_aggregation/live/?bash'
 */
export const businessListingsCategoriesAggregationLive = <ThrowOnError extends boolean = false>(options?: Options<BusinessListingsCategoriesAggregationLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<BusinessListingsCategoriesAggregationLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/business_listings/categories_aggregation/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/locations/?bash'
 */
export const businessDataGoogleLocations = <ThrowOnError extends boolean = false>(options?: Options<BusinessDataGoogleLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<BusinessDataGoogleLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/locations',
        ...options
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/locations/?bash'
 */
export const businessDataGoogleLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<BusinessDataGoogleLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<BusinessDataGoogleLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/locations/{country}',
        ...options
    });
};

/**
 * You will receive the list of languages by calling this API.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/languages/?bash'
 */
export const businessDataGoogleLanguages = <ThrowOnError extends boolean = false>(options?: Options<BusinessDataGoogleLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<BusinessDataGoogleLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/languages',
        ...options
    });
};

/**
 * ‌‌
 * Business Data API provides results containing information about specific business entity from Google. The provided results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/my_business_info/task_post/?bash'
 */
export const googleMyBusinessInfoTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleMyBusinessInfoTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleMyBusinessInfoTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/my_business_info/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you don’t use the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/my_business_info/tasks_ready/?bash'
 */
export const googleMyBusinessInfoTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleMyBusinessInfoTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleMyBusinessInfoTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/my_business_info/tasks_ready',
        ...options
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you don’t use the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/my_business_info/tasks_ready/?bash'
 */
export const businessDataTasksReady = <ThrowOnError extends boolean = false>(options?: Options<BusinessDataTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<BusinessDataTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/tasks_ready',
        ...options
    });
};

/**
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/my_business_info/task_get/?bash'
 */
export const googleMyBusinessInfoTaskGet = <ThrowOnError extends boolean = false>(options: Options<GoogleMyBusinessInfoTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleMyBusinessInfoTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/my_business_info/task_get/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Business Data API provides results containing information about specific business entity from Google. The provided results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/my_business_info/live/?bash'
 */
export const googleMyBusinessInfoLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleMyBusinessInfoLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleMyBusinessInfoLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/my_business_info/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoints provides the latest updates of a specific business entity from Google SERP. The provided results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/my_business_updates/task_post/?bash'
 */
export const googleMyBusinessUpdatesTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleMyBusinessUpdatesTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleMyBusinessUpdatesTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/my_business_updates/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you don’t use the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/my_business_updates/tasks_ready/?bash'
 */
export const googleMyBusinessUpdatesTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleMyBusinessUpdatesTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleMyBusinessUpdatesTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/my_business_updates/tasks_ready',
        ...options
    });
};

/**
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/my_business_updates/task_get/?bash'
 */
export const googleMyBusinessUpdatesTaskGet = <ThrowOnError extends boolean = false>(options: Options<GoogleMyBusinessUpdatesTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleMyBusinessUpdatesTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/my_business_updates/task_get/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Hotel Searches API provides results containing information about different hotels listed on Google. The provided results are specific to the keyword, selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/hotel_searches/task_post/?bash'
 */
export const googleHotelSearchesTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleHotelSearchesTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleHotelSearchesTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/hotel_searches/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you don’t use the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/hotel_searches/tasks_ready/?bash'
 */
export const googleHotelSearchesTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleHotelSearchesTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleHotelSearchesTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/hotel_searches/tasks_ready',
        ...options
    });
};

/**
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/hotel_searches/task_get/?bash'
 */
export const googleHotelSearchesTaskGet = <ThrowOnError extends boolean = false>(options: Options<GoogleHotelSearchesTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleHotelSearchesTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/hotel_searches/task_get/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Hotel Searches API provides results containing information about different hotels listed on Google Hotels. The provided results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/hotel_searches/live/?bash'
 */
export const googleHotelSearchesLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleHotelSearchesLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleHotelSearchesLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/hotel_searches/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Google Hotel Info will provide you with structured data available for a specific hotel entity on the Google Hotels platform: such as service description, location details, rating, amenities, reviews, images, prices, and more.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/hotel_info/task_post/?bash'
 */
export const googleHotelInfoTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleHotelInfoTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleHotelInfoTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/hotel_info/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you don’t use the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/hotel_info/tasks_ready/?bash'
 */
export const googleHotelInfoTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleHotelInfoTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleHotelInfoTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/hotel_info/tasks_ready',
        ...options
    });
};

/**
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/hotel_info/task_get/advanced/?bash'
 */
export const googleHotelInfoTaskGetAdvanced = <ThrowOnError extends boolean = false>(options: Options<GoogleHotelInfoTaskGetAdvancedData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleHotelInfoTaskGetAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/hotel_info/task_get/advanced/{id}',
        ...options
    });
};

/**
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/hotel_info/task_get/html/?bash'
 */
export const googleHotelInfoTaskGetHtml = <ThrowOnError extends boolean = false>(options: Options<GoogleHotelInfoTaskGetHtmlData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleHotelInfoTaskGetHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/hotel_info/task_get/html/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Google Hotel Info will provide you with structured data available for a specific hotel entity on the Google Hotels platform: such as service description, location details, rating, amenities, reviews, images, prices, and more.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/hotel_info/live/advanced/?bash'
 */
export const googleHotelInfoLiveAdvanced = <ThrowOnError extends boolean = false>(options?: Options<GoogleHotelInfoLiveAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleHotelInfoLiveAdvancedResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/hotel_info/live/advanced',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Google Hotel Info will provide you with unstructured HTML data available for a specific hotel entity on the Google Hotels platform: such as service description, location details, rating, amenities, reviews, images, prices, and more.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/hotel_info/live/html/?bash'
 */
export const googleHotelInfoLiveHtml = <ThrowOnError extends boolean = false>(options?: Options<GoogleHotelInfoLiveHtmlData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleHotelInfoLiveHtmlResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/hotel_info/live/html',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint provides results from the “Reviews” element of Google SERPs. The results are specific to the selected location (see the List of Locations) and language (see the List of Languages) parameters.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/reviews/task_post/?bash'
 */
export const googleReviewsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleReviewsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleReviewsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/reviews/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you don’t use the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/reviews/tasks_ready/?bash'
 */
export const googleReviewsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleReviewsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleReviewsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/reviews/tasks_ready',
        ...options
    });
};

/**
 * The returned results are specific to the indicated local establishment name, search engine, location and language parameters. We emulate set location and search engine with the highest accuracy so that the results you receive will match the actual search results for the specified parameters at the time of task setting. You can always check the returned results accessing the check_url in the Incognito mode to make sure the received data is entirely relevant. Note that user preferences, search history, and other personalized search factors are ignored by our system and thus would not be reflected in the returned results.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/reviews/task_get/?bash'
 */
export const googleReviewsTaskGet = <ThrowOnError extends boolean = false>(options: Options<GoogleReviewsTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleReviewsTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/reviews/task_get/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint provides results from the “Reviews” element of Google SERPs, including not only Google user reviews but also reviews from other reputable sources (e.g., TripAdvisor, Yelp, Trustpilot). The results are specific to the selected location (see the List of Locations) and language (see the List of Languages) parameters.
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/business_data/google/extended_reviews/task_post/?bash'
 */
export const googleExtendedReviewsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleExtendedReviewsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleExtendedReviewsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/extended_reviews/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you don’t use the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/business_data/google/extended_reviews/tasks_ready/?bash'
 */
export const googleExtendedReviewsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleExtendedReviewsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleExtendedReviewsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/extended_reviews/tasks_ready',
        ...options
    });
};

/**
 * The returned results are specific to the indicated local establishment name, search engine, location and language parameters. We emulate set location and search engine with the highest accuracy so that the results you receive will match the actual search results for the specified parameters at the time of task setting. You can always check the returned results accessing the check_url in the Incognito mode to make sure the received data is entirely relevant. Note that user preferences, search history, and other personalized search factors are ignored by our system and thus would not be reflected in the returned results.
 * for more info please visit 'https://docs_v3.dataforseo.com/v3/business_data/google/extended_reviews/task_get/?bash'
 */
export const googleExtendedReviewsTaskGet = <ThrowOnError extends boolean = false>(options: Options<GoogleExtendedReviewsTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleExtendedReviewsTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/extended_reviews/task_get/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a detailed overview of questions and answers associated with a specific business entity listed on Google My Business. By submitting a request to this endpoint, you can access comprehensive data on the inquiries and responses related to a particular business, including the full text of the questions and answers, as well as metadata such as timestamps, user information.
 *
 * The provided results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 *
 * Your account will be billed for every 20 questions, the maximum number of answers returned for each question is 5.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/questions_and_answers/task_post/?bash'
 */
export const googleQuestionsAndAnswersTaskPost = <ThrowOnError extends boolean = false>(options?: Options<GoogleQuestionsAndAnswersTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleQuestionsAndAnswersTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/questions_and_answers/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you don’t use the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/questions_and_answers/tasks_ready/?bash'
 */
export const googleQuestionsAndAnswersTasksReady = <ThrowOnError extends boolean = false>(options?: Options<GoogleQuestionsAndAnswersTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GoogleQuestionsAndAnswersTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/questions_and_answers/tasks_ready',
        ...options
    });
};

/**
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/questions_and_answers/task_get/?bash'
 */
export const googleQuestionsAndAnswersTaskGet = <ThrowOnError extends boolean = false>(options: Options<GoogleQuestionsAndAnswersTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GoogleQuestionsAndAnswersTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/questions_and_answers/task_get/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint will provide you with a detailed overview of questions and answers associated with a specific business entity listed on Google My Business. By submitting a request to this endpoint, you can access comprehensive data on the inquiries and responses related to a particular business, including the full text of the questions and answers, as well as metadata such as timestamps, user information.
 *
 * The provided results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings.
 *
 * Your account will be billed for every 20 questions, the maximum number of answers returned for each question is 5.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/google/questions_and_answers/live/?bash'
 */
export const googleQuestionsAndAnswersLive = <ThrowOnError extends boolean = false>(options?: Options<GoogleQuestionsAndAnswersLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<GoogleQuestionsAndAnswersLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/google/questions_and_answers/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * This endpoint provides a list of business profiles listed on the Trustpilot platform. The returned results are relevant to the specified keyword.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/trustpilot/search/task_post/?bash'
 */
export const trustpilotSearchTaskPost = <ThrowOnError extends boolean = false>(options?: Options<TrustpilotSearchTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<TrustpilotSearchTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/trustpilot/search/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you don’t use the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/trustpilot/search/tasks_ready/?bash'
 */
export const trustpilotSearchTasksReady = <ThrowOnError extends boolean = false>(options?: Options<TrustpilotSearchTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<TrustpilotSearchTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/trustpilot/search/tasks_ready',
        ...options
    });
};

/**
 * This endpoint provides a list of business profiles listed on the Trustpilot platform. The returned results are relevant to the keyword specified in a POST request. We emulate set parameters with the highest accuracy so that the results you receive match the actual search results for the specified parameters at the time of task setting. You can always check the returned results accessing the check_url in the Incognito mode to make sure the received data is entirely relevant. Note that user preferences, search history, and other personalized search factors are ignored by our system and thus will not be reflected in the returned results.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/trustpilot/search/task_get/?bash'
 */
export const trustpilotSearchTaskGet = <ThrowOnError extends boolean = false>(options: Options<TrustpilotSearchTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<TrustpilotSearchTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/trustpilot/search/task_get/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint provides reviews published on the Trustpilot platform for the local establishment specified in the domain field.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/trustpilot/reviews/task_post/?bash'
 */
export const trustpilotReviewsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<TrustpilotReviewsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<TrustpilotReviewsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/trustpilot/reviews/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you don’t use the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/trustpilot/reviews/tasks_ready/?bash'
 */
export const trustpilotReviewsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<TrustpilotReviewsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<TrustpilotReviewsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/trustpilot/reviews/tasks_ready',
        ...options
    });
};

/**
 * This endpoint provides reviews published on the Trustpilot platform The returned results are specific to the indicated business entity. We emulate set parameters with the highest accuracy so that the results you receive will match the actual search results for the specified parameters at the time of task setting. You can always check the returned results accessing the check_url in the Incognito mode to make sure the received data is entirely relevant. Note that user preferences, search history, and other personalized search factors are ignored by our system and thus would not be reflected in the returned results.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/trustpilot/reviews/task_get/?bash'
 */
export const trustpilotReviewsTaskGet = <ThrowOnError extends boolean = false>(options: Options<TrustpilotReviewsTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<TrustpilotReviewsTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/trustpilot/reviews/task_get/{id}',
        ...options
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. Note that supported location types in Tripadvisor Business Data API are City and Region only.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/tripadvisor/locations/?bash'
 */
export const businessDataTripadvisorLocations = <ThrowOnError extends boolean = false>(options?: Options<BusinessDataTripadvisorLocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<BusinessDataTripadvisorLocationsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/tripadvisor/locations',
        ...options
    });
};

/**
 * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. Note that supported location types in Tripadvisor Business Data API are City and Region only.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/tripadvisor/locations/?bash'
 */
export const businessDataTripadvisorLocationsCountry = <ThrowOnError extends boolean = false>(options: Options<BusinessDataTripadvisorLocationsCountryData, ThrowOnError>) => {
    return (options.client ?? client).get<BusinessDataTripadvisorLocationsCountryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/tripadvisor/locations/{country}',
        ...options
    });
};

/**
 * You will receive the list of languages by calling this API.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/tripadvisor/languages/?bash'
 */
export const businessDataTripadvisorLanguages = <ThrowOnError extends boolean = false>(options?: Options<BusinessDataTripadvisorLanguagesData, ThrowOnError>) => {
    return (options?.client ?? client).get<BusinessDataTripadvisorLanguagesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/tripadvisor/languages',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint provides a list of business profiles listed on the Tripadvisor platform. The returned results are relevant to the specified keyword and the selected location (see the List of Locations).
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/tripadvisor/search/task_post/?bash'
 */
export const tripadvisorSearchTaskPost = <ThrowOnError extends boolean = false>(options?: Options<TripadvisorSearchTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<TripadvisorSearchTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/tripadvisor/search/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you don’t use the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/tripadvisor/search/tasks_ready/?bash'
 */
export const tripadvisorSearchTasksReady = <ThrowOnError extends boolean = false>(options?: Options<TripadvisorSearchTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<TripadvisorSearchTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/tripadvisor/search/tasks_ready',
        ...options
    });
};

/**
 * This endpoint will provide you with data on businesses listed on the Tripadvisor platform. The results obtained through this endpoint are specific to the location (see the List of Tripadvisor Locations) and keyword parameters used in the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/tripadvisor/search/task_get/?bash'
 */
export const tripadvisorSearchTaskGet = <ThrowOnError extends boolean = false>(options: Options<TripadvisorSearchTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<TripadvisorSearchTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/tripadvisor/search/task_get/{id}',
        ...options
    });
};

/**
 * ‌‌
 * This endpoint provides results from the “Reviews” element on the Tripadvisor platform. The results are specific to the URL path or keyword you indicate, and and the selected location (see the List of Locations).
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/tripadvisor/reviews/task_post/?bash'
 */
export const tripadvisorReviewsTaskPost = <ThrowOnError extends boolean = false>(options?: Options<TripadvisorReviewsTaskPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<TripadvisorReviewsTaskPostResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/tripadvisor/reviews/task_post',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌
 * The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you don’t use the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/tripadvisor/reviews/tasks_ready/?bash'
 */
export const tripadvisorReviewsTasksReady = <ThrowOnError extends boolean = false>(options?: Options<TripadvisorReviewsTasksReadyData, ThrowOnError>) => {
    return (options?.client ?? client).get<TripadvisorReviewsTasksReadyResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/tripadvisor/reviews/tasks_ready',
        ...options
    });
};

/**
 * This endpoint provides feedback data on businesses listed on the Tripadvisor platform, including their locations, ratings, review content and count. The results are specific to the URL path indicated in the POST request.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/tripadvisor/reviews/task_get/?bash'
 */
export const tripadvisorReviewsTaskGet = <ThrowOnError extends boolean = false>(options: Options<TripadvisorReviewsTaskGetData, ThrowOnError>) => {
    return (options.client ?? client).get<TripadvisorReviewsTaskGetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/tripadvisor/reviews/task_get/{id}',
        ...options
    });
};

/**
 * ‌‌
 * Social Media Pinterest API will provide you with data on pins made from the specified URLs. Pins on Pinterest correspond to content saves. For each specified page URL, you will get the number of content saves to Pinterest made using the Pinterest Save Button placed on that page.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/social_media/pinterest/live/?bash'
 */
export const socialMediaPinterestLive = <ThrowOnError extends boolean = false>(options?: Options<SocialMediaPinterestLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<SocialMediaPinterestLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/social_media/pinterest/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ‌‌
 * Social Media Facebook API will provide you with the number of likes a certain page received through the Facebook Like button embed.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/social_media/facebook/live/?bash'
 */
export const socialMediaFacebookLive = <ThrowOnError extends boolean = false>(options?: Options<SocialMediaFacebookLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<SocialMediaFacebookLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/social_media/facebook/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Social Media Reddit API provides information for each share of the target webpage on Reddit. For each specified Reddit URL, you will get subreddit and author names, permalink, title, and the number of subreddit members.
 * for more info please visit 'https://docs.dataforseo.com/v3/business_data/social_media/reddit/live/?bash'
 */
export const socialMediaRedditLive = <ThrowOnError extends boolean = false>(options?: Options<SocialMediaRedditLiveData, ThrowOnError>) => {
    return (options?.client ?? client).post<SocialMediaRedditLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/business_data/social_media/reddit/live',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * You will receive detailed information about your API usage, prices, spending and other account details by calling this API.
 * for more info please visit 'https://docs.dataforseo.com/v3/appendix/user_data/?bash'
 */
export const userData = <ThrowOnError extends boolean = false>(options?: Options<UserDataData, ThrowOnError>) => {
    return (options?.client ?? client).get<UserDataResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/appendix/user_data',
        ...options
    });
};

/**
 * This endpoint returns a list of possible DataForSEO API errors and general status codes. Below you will find a list of HTTP response codes and internal messages. We recommend storing the data connected to error codes in your application log and designing a necessary system for handling related exceptional or error conditions.
 * for more info please visit 'https://docs.dataforseo.com/v3/appendix/errors/?bash'
 */
export const appendixErrors = <ThrowOnError extends boolean = false>(options?: Options<AppendixErrorsData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppendixErrorsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/appendix/errors',
        ...options
    });
};

/**
 * Using this endpoint you can resend webhooks (pingbacks and postbacks) for up to 100 specified tasks.
 * Note: Your account will not be double-charged for resending a webhook.
 * for more info please visit 'https://docs.dataforseo.com/v3/appendix/webhook_resend/?bash'
 */
export const webhookResend = <ThrowOnError extends boolean = false>(options?: Options<WebhookResendData, ThrowOnError>) => {
    return (options?.client ?? client).post<WebhookResendResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/appendix/webhook_resend',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * By calling this API you will receive detailed information about the current status of all our APIs and endpoints. You will also get a full issue description if a problem occurs.
 * for more info please visit 'https://docs.dataforseo.com/v3/appendix/status/?bash'
 */
export const appendixStatus = <ThrowOnError extends boolean = false>(options?: Options<AppendixStatusData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppendixStatusResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/v3/appendix/status',
        ...options
    });
};
